COPY_EXISTING ~helm01.itm~ ~override/helm14.itm~

COPY_EXISTING ~arow01.itm~ ~override/arow07.itm~

COPY_EXISTING ~shld04.itm~ ~override/shld24.itm~

COPY_EXISTING ~scrl15.itm~ ~override/scrl09.itm~

COPY_EXISTING ~sw1h48.itm~ ~override/wawak.itm~

COPY_EXISTING ~scrl9m.itm~ ~override/scrl9r.itm~

COPY_EXISTING ~potn11.itm~ ~override/potn40.itm~

COPY_EXISTING ~scrl9m.itm~ ~override/scrl9l.itm~

COPY_EXISTING ~scrl7m.itm~ ~override/scrl7v.itm~

COPY_EXISTING ~ax1h01.itm~ ~override/waaxe.itm~

COPY_EXISTING ~scrl6w.itm~ ~override/scrl6t.itm~

COPY_EXISTING ~amul09.itm~ ~override/amul17.itm~

COPY_EXISTING ~sw1h02.itm~ ~override/sw1h37.itm~

COPY_EXISTING ~wa2harp.itm~ ~override/wa2harp.itm~
  WRITE_LONG  0x34   56000 // price

COPY_EXISTING ~xbow15.itm~ ~override/xbow15.itm~
  WRITE_LONG  0x34   26500 // price

COPY_EXISTING ~brac14.itm~ ~override/brac14.itm~
  WRITE_LONG  0x34   20000 // price

COPY_EXISTING ~brac15.itm~ ~override/brac15.itm~
  WRITE_LONG  0x34   32500 // price

COPY_EXISTING ~leat04.itm~ ~override/leat04.itm~
  READ_BYTE 0x29 "kitusability"
  WRITE_BYTE 0x29 ("%kitusability%" BAND 0b00010000)

COPY_EXISTING ~leat05.itm~ ~override/leat05.itm~
  READ_BYTE 0x29 "kitusability"
  WRITE_BYTE 0x29 ("%kitusability%" BAND 0b00010000)

COPY_EXISTING ~leat06.itm~ ~override/leat06.itm~
  READ_BYTE 0x29 "kitusability"
  WRITE_BYTE 0x29 ("%kitusability%" BAND 0b00010000)

COPY_EXISTING ~leat07.itm~ ~override/leat07.itm~
  READ_BYTE 0x29 "kitusability"
  WRITE_BYTE 0x29 ("%kitusability%" BAND 0b00010000)

COPY_EXISTING ~leat15.itm~ ~override/leat15.itm~
  READ_BYTE 0x29 "kitusability"
  WRITE_BYTE 0x29 ("%kitusability%" BAND 0b00010000)

COPY_EXISTING ~leat16.itm~ ~override/leat16.itm~
  READ_BYTE 0x29 "kitusability"
  WRITE_BYTE 0x29 ("%kitusability%" BAND 0b00010000)

COPY_EXISTING ~leat17.itm~ ~override/leat17.itm~
  WRITE_LONG  0x34   25000 // price
  READ_BYTE 0x29 "kitusability"
  WRITE_BYTE 0x29 ("%kitusability%" BAND 0b00010000)

COPY_EXISTING ~leat18.itm~ ~override/leat18.itm~
  READ_BYTE 0x29 "kitusability"
  WRITE_BYTE 0x29 ("%kitusability%" BAND 0b00010000)

COPY_EXISTING ~leat23.itm~ ~override/leat23.itm~
  READ_BYTE 0x29 "kitusability"
  WRITE_BYTE 0x29 ("%kitusability%" BAND 0b00010000)

COPY_EXISTING ~leat24.itm~ ~override/leat24.itm~
  READ_BYTE 0x29 "kitusability"
  WRITE_BYTE 0x29 ("%kitusability%" BAND 0b00010000)

COPY_EXISTING ~bow11.itm~ ~override/bow11.itm~
  WRITE_LONG  0x34   16500 // price

COPY_EXISTING ~clck03.itm~ ~override/clck03.itm~
  WRITE_LONG  0x34   14000 // price

COPY_EXISTING ~xbow08.itm~ ~override/xbow08.itm~
  WRITE_LONG  0x34   13500 // price

COPY_EXISTING ~helm16.itm~ ~override/helm16.itm~
  WRITE_LONG  0x34   23670 // price

COPY_EXISTING ~blun19.itm~ ~override/blun19.itm~
  WRITE_LONG  0x34   14000 // price

COPY_EXISTING ~scrla4.itm~ ~override/scrla4.itm~
  WRITE_LONG  0x34    9000 // price

COPY_EXISTING ~sw1h33.itm~ ~override/sw1h33.itm~
  WRITE_LONG  0x34   25000 // price

COPY_EXISTING ~sw2h09.itm~ ~override/sw2h09.itm~
  WRITE_LONG  0x34   35000 // price

COPY_EXISTING ~wand13.itm~ ~override/wand13.itm~
  WRITE_LONG  0x34   50000 // price

COPY_EXISTING ~wand05.itm~ ~override/wand05.itm~
  WRITE_LONG  0x34   45000 // price

COPY_EXISTING ~wand06.itm~ ~override/wand06.itm~
  WRITE_LONG  0x34   50000 // price

COPY_EXISTING ~wand02.itm~ ~override/wand02.itm~
  WRITE_LONG  0x34   27000 // price

COPY_EXISTING ~wand03.itm~ ~override/wand03.itm~
  WRITE_LONG  0x34   10000 // price

COPY_EXISTING ~wand10.itm~ ~override/wand10.itm~
  WRITE_LONG  0x34   50000 // price

COPY_EXISTING ~wa2dak.itm~ ~override/wa2dak.itm~
  WRITE_LONG  0x34   28500 // price

COPY_EXISTING ~plat17.itm~ ~override/plat17.itm~
  WRITE_LONG  0x34   17000 // price

COPY_EXISTING ~scrl9z.itm~ ~override/scrl9z.itm~
  WRITE_LONG  0x34   10000 // price

COPY_EXISTING ~misc45.itm~ ~override/misc45.itm~
  WRITE_LONG  0x34    2500 // price

COPY_EXISTING ~misc44.itm~ ~override/misc44.itm~
  WRITE_LONG  0x34    2500 // price

COPY_EXISTING ~helm23.itm~ ~override/helm23.itm~
  WRITE_LONG  0x34   25000 // price

COPY_EXISTING ~wa2halb.itm~ ~override/wa2halb.itm~
  WRITE_LONG  0x34   30000 // price

COPY_EXISTING ~gberry.itm~ ~override/gberry.itm~
  WRITE_LONG  0x34       0 // price
  WRITE_SHORT  0x38     40 // stack amount

COPY_EXISTING ~misc3h.itm~ ~override/misc3h.itm~
  WRITE_LONG  0x34    1500 // price

COPY_EXISTING ~shld22.itm~ ~override/shld22.itm~
  WRITE_LONG  0x34   30000 // price

COPY_EXISTING ~sper10.itm~ ~override/sper10.itm~
  WRITE_LONG  0x34   40000 // price

COPY_EXISTING ~misc3o.itm~ ~override/misc3o.itm~
  WRITE_LONG  0x34    5000 // price

COPY_EXISTING ~belt12.itm~ ~override/belt12.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~belt13.itm~ ~override/belt13.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~belt14.itm~ ~override/belt14.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~bow19a.itm~ ~override/bow19a.itm~
  WRITE_LONG  0x34    5000 // price

COPY_EXISTING ~bow19b.itm~ ~override/bow19b.itm~
  WRITE_LONG  0x34    2500 // price

COPY_EXISTING ~sw1h40.itm~ ~override/sw1h40.itm~
  WRITE_LONG  0x34   28000 // price

COPY_EXISTING ~helm03.itm~ ~override/helm03.itm~
  WRITE_LONG  0x34   21000 // price

COPY_EXISTING ~scrl08.itm~ ~override/scrl08.itm~
  WRITE_LONG  0x34    1500 // price

COPY_EXISTING ~shld21.itm~ ~override/shld21.itm~
  WRITE_LONG  0x34   10000 // price

COPY_EXISTING ~bow10.itm~ ~override/bow10.itm~
  WRITE_LONG  0x34   15000 // price

COPY_EXISTING ~dart08.itm~ ~override/dart08.itm~
  WRITE_LONG  0x34    5000 // price

COPY_EXISTING ~bow14.itm~ ~override/bow14.itm~
  WRITE_LONG  0x34   15000 // price

COPY_EXISTING ~slng07.itm~ ~override/slng07.itm~
  WRITE_LONG  0x34   27000 // price

COPY_EXISTING ~sw1h68.itm~ ~override/sw1h68.itm~
  WRITE_LONG  0x34   20000 // price

COPY_EXISTING ~potn56.itm~ ~override/potn56.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl5a.itm~ ~override/scrl5a.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~stardart.itm~ ~override/stardart.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn24.itm~ ~override/S!potn04.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn43.itm~ ~override/S!potn05.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn08.itm~ ~override/S!potn06.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn30.itm~ ~override/S!potn07.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn36.itm~ ~override/S!potn08.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn39.itm~ ~override/S!potn09.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn44.itm~ ~override/S!potn10.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn23.itm~ ~override/S!potn11.itm~
  WRITE_LONG  0x34       0 // price
  WRITE_SHORT  0x38      5 // stack amount
  WRITE_ASCII 0x3a ~IPOTN14~ #8
  WRITE_ASCII 0x58 ~CPOTN13~ #8

COPY_EXISTING ~potn32.itm~ ~override/S!potn13.itm~
  WRITE_LONG  0x34       0 // price
  WRITE_SHORT  0x38      5 // stack amount
  WRITE_ASCII 0x3a ~IPOTN20~ #8
  WRITE_ASCII 0x58 ~CPOTN41~ #8

COPY_EXISTING ~potn19.itm~ ~override/S!potn15.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn42.itm~ ~override/S!potn16.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn52.itm~ ~override/S!potn17.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn17.itm~ ~override/S!potn18.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn10.itm~ ~override/S!potn19.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl56.itm~ ~override/S!scrl11.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl61.itm~ ~override/S!scrl12.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~restore.itm~ ~override/S!scrl13.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl15.itm~ ~override/S!scrl14.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl82.itm~ ~override/S!scrl15.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl85.itm~ ~override/S!scrl16.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl1t.itm~ ~override/S!scrl17.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl93.itm~ ~override/S!scrl18.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl73.itm~ ~override/S!scrl19.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl76.itm~ ~override/S!scrl20.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl6w.itm~ ~override/S!scrl22.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~clck12.itm~ ~override/clck12.itm~
  READ_BYTE 0x2f "kitusability4"
  WRITE_BYTE 0x2f ("%kitusability4%" BOR 0b00000100)

COPY_EXISTING ~clck13.itm~ ~override/clck13.itm~
  READ_BYTE 0x2f "kitusability4"
  WRITE_BYTE 0x2f ("%kitusability4%" BOR 0b00000100)

COPY_EXISTING ~clck14.itm~ ~override/clck14.itm~
  READ_BYTE 0x2f "kitusability4"
  WRITE_BYTE 0x2f ("%kitusability4%" BOR 0b00000100)

COPY_EXISTING ~clck15.itm~ ~override/clck15.itm~
  READ_BYTE 0x2f "kitusability4"
  WRITE_BYTE 0x2f ("%kitusability4%" BOR 0b00000100)

COPY_EXISTING ~clck16.itm~ ~override/clck16.itm~
  READ_BYTE 0x2f "kitusability4"
  WRITE_BYTE 0x2f ("%kitusability4%" BOR 0b00000100)

COPY_EXISTING ~clck17.itm~ ~override/clck17.itm~
  READ_BYTE 0x2f "kitusability4"
  WRITE_BYTE 0x2f ("%kitusability4%" BOR 0b00000100)

COPY_EXISTING ~clck18.itm~ ~override/clck18.itm~
  READ_BYTE 0x2f "kitusability4"
  WRITE_BYTE 0x2f ("%kitusability4%" BOR 0b00000100)

COPY_EXISTING ~clck29.itm~ ~override/clck29.itm~
  READ_BYTE 0x2f "kitusability4"
  WRITE_BYTE 0x2f ("%kitusability4%" BOR 0b00000100)

COPY_EXISTING ~wand08.itm~ ~override/S!wand01.itm~
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b00000001) // set unsellable flag

COPY_EXISTING ~wand03.itm~ ~override/S!wand02.itm~
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b00000001) // set unsellable flag

COPY_EXISTING ~wand06.itm~ ~override/S!wand03.itm~
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b00000001) // set unsellable flag

COPY_EXISTING ~key20.itm~ ~override/key20.itm~
  WRITE_LONG  0x34    5000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~misc9x.itm~ ~override/misc9x.itm~
  WRITE_LONG  0x34    2500 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~misc9y.itm~ ~override/misc9y.itm~
  WRITE_LONG  0x34    5000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~key26.itm~ ~override/key26.itm~
  WRITE_LONG  0x34    5000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~misc8q.itm~ ~override/misc8q.itm~
  WRITE_LONG  0x34    2000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~misca7.itm~ ~override/misca7.itm~
  WRITE_LONG  0x34    6000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~misca8.itm~ ~override/misca8.itm~
  WRITE_LONG  0x34    6000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~miscbv.itm~ ~override/miscbv.itm~
  WRITE_LONG  0x34    6000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~book94.itm~ ~override/book94.itm~
  WRITE_LONG  0x34    8000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~book95.itm~ ~override/book95.itm~
  WRITE_LONG  0x34    5000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~book96.itm~ ~override/book96.itm~
  WRITE_LONG  0x34    5000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~key23.itm~ ~override/key23.itm~
  WRITE_LONG  0x34    4000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~sw1h50.itm~ ~override/sw1h50.itm~
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111011) // clear movable flag

COPY_EXISTING ~sgrasp01.itm~ ~override/sgrasp01.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp02.itm~ ~override/sgrasp02.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp03.itm~ ~override/sgrasp03.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp04.itm~ ~override/sgrasp04.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp05.itm~ ~override/sgrasp05.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp06.itm~ ~override/sgrasp06.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp07.itm~ ~override/sgrasp07.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp08.itm~ ~override/sgrasp08.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp09.itm~ ~override/sgrasp09.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp10.itm~ ~override/sgrasp10.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp11.itm~ ~override/sgrasp11.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp12.itm~ ~override/sgrasp12.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp13.itm~ ~override/sgrasp13.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp14.itm~ ~override/sgrasp14.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp15.itm~ ~override/sgrasp15.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp16.itm~ ~override/sgrasp16.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp17.itm~ ~override/sgrasp17.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp18.itm~ ~override/sgrasp18.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp19.itm~ ~override/sgrasp19.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp20.itm~ ~override/sgrasp20.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~serious.itm~ ~override/serious.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~critical.itm~ ~override/critical.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~dwwhip.itm~ ~override/dwwhip.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~halb11.itm~ ~override/halb11.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~hamm04.itm~ ~override/hamm04.itm~
  WRITE_LONG  0x60   1 // magic level

COPY_EXISTING ~dragred1.itm~ ~override/dragred1.itm~
  WRITE_LONG  0x60   4 // magic level

COPY_EXISTING ~mindflay.itm~ ~override/mindflay.itm~
  WRITE_LONG  0x60   3 // magic level

COPY_EXISTING ~senspi01.itm~ ~override/senspi01.itm~
  WRITE_LONG  0x60   4 // magic level

COPY_EXISTING ~blun10.itm~ ~override/blun10.itm~
  WRITE_LONG  0x34    8000 // price
  WRITE_LONG  0x60   1 // magic level

COPY_EXISTING ~plyflind.itm~ ~override/plyflind.itm~
  WRITE_LONG  0x60   1 // magic level

COPY_EXISTING ~blun23.itm~ ~override/blun23.itm~
  WRITE_LONG  0x60   2 // magic level

COPY_EXISTING ~catlio.itm~ ~override/S!catlio.itm~
  WRITE_LONG  0x60   3 // magic level

COPY_EXISTING ~maurezhi.itm~ ~override/maurezhi.itm~
  WRITE_LONG  0x60   5 // magic level
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~lionspir.itm~ ~override/lionspir.itm~
  WRITE_LONG  0x60   3 // magic level
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~snakspir.itm~ ~override/snakspir.itm~
  WRITE_LONG  0x60   3 // magic level
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~demabi01.itm~ ~override/demabi01.itm~
  WRITE_LONG  0x60   4 // magic level
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~stalkesu.itm~ ~override/stalkesu.itm~
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~dax1h01.itm~ ~override/dax1h01.itm~
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~wolfm.itm~ ~override/wolfm.itm~
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~mumgrew.itm~ ~override/mumgrew.itm~
  WRITE_LONG  0x60   4 // magic level
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~mummyw.itm~ ~override/mummyw.itm~
  WRITE_LONG  0x60   3 // magic level
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~B3-24.itm~ ~override/B3-24.itm~
  WRITE_LONG  0x60   3 // magic level
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~mistpo.itm~ ~override/mistpo.itm~
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~mistcd.itm~ ~override/mistcd.itm~
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~sw1h46.itm~ ~override/sw1h46.itm~
  READ_LONG 0x1e "usability"
  WRITE_LONG 0x1e ("%usability%" BOR 1073741824)

COPY_EXISTING ~sw1h47.itm~ ~override/sw1h47.itm~
  READ_LONG 0x1e "usability"
  WRITE_LONG 0x1e ("%usability%" BOR 1073741824)

COPY_EXISTING ~scrl8o.itm~ ~override/scrl8o.itm~
  SAY DESC      @269

COPY_EXISTING ~scrl1q.itm~ ~override/scrl1q.itm~
  SAY DESC      @283

COPY_EXISTING ~scrla3.itm~ ~override/scrla3.itm~
  SAY DESC      @364

COPY_EXISTING ~scrl1x.itm~ ~override/scrl5j.itm~

COPY_EXISTING ~ring30.itm~ ~override/ring30.itm~
  SAY DESC      @9020
  WRITE_BYTE  0x32      9 // min charisma
  WRITE_LONG  0x34   27000 // price

COPY_EXISTING ~scrl71.itm~ ~override/scrl71.itm~
  SAY DESC      @9503

COPY_EXISTING ~arow01.itm~ ~override/arow01.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~arow05.itm~ ~override/arow05.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~arow12.itm~ ~override/arow12.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~arow16.itm~ ~override/arow16.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~bolt01.itm~ ~override/bolt01.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~bolt04.itm~ ~override/bolt04.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~bull01.itm~ ~override/bull01.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~bull02.itm~ ~override/bull02.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~bull03.itm~ ~override/bull03.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~bull05.itm~ ~override/bull05.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~bull06.itm~ ~override/bull06.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~sw1h24.itm~ ~override/sw1h24.itm~
  SAY NAME2     @9044
  WRITE_LONG  0x60   1 // magic level

COPY_EXISTING ~scrl94.itm~ ~override/scrl94.itm~
  SAY DESC      @9049

COPY_EXISTING ~scrl8x.itm~ ~override/S!scrl04.itm~
  SAY DESC      @9050

COPY_EXISTING ~scrl5f.itm~ ~override/scrl5f.itm~
  SAY DESC      @9051

COPY_EXISTING ~hamm03.itm~ ~override/hamm03.itm~
  SAY NAME2     @9112

COPY_EXISTING ~hamm05.itm~ ~override/hamm05.itm~
  SAY NAME2     @9113

COPY_EXISTING ~scrlal.itm~ ~override/scrlal.itm~
  SAY DESC      @9520

COPY_EXISTING ~scrl90.itm~ ~override/scrl90.itm~
  SAY NAME2     #12017

COPY_EXISTING ~scrl87.itm~ ~override/scrl87.itm~
  SAY NAME2     #12042

COPY_EXISTING ~miscag.itm~ ~override/S!misc53.itm~
  SAY NAME2     @9179
  SAY DESC      @9180
  WRITE_LONG  0x34       0 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~S!misc53.itm~ ~override/S!misc54.itm~
  SAY NAME2     @9181
  SAY DESC      @9182
  WRITE_ASCII 0x3a ~S!mirrin~ #8

COPY_EXISTING ~S!misc53.itm~ ~override/S!misc55.itm~
  SAY NAME2     @9183
  SAY DESC      @9182
  WRITE_ASCII 0x3a ~S!mir1in~ #8

COPY_EXISTING ~S!misc53.itm~ ~override/S!misc56.itm~
  SAY NAME2     @9184
  SAY DESC      @9182
  WRITE_ASCII 0x3a ~S!mir2in~ #8

COPY_EXISTING ~S!misc44.itm~ ~override/S!misc57.itm~
  SAY NAME2     @9185
  SAY DESC      @9186

COPY_EXISTING ~S!misc36.itm~ ~override/S!misc58.itm~
  SAY NAME2     @9187
  SAY DESC      @9188

COPY_EXISTING ~scrl5t.itm~ ~override/scrl5t.itm~
  READ_BYTE 0x2f "kit_usability"
  WRITE_BYTE 0x2f ("%kit_usability%" BAND 0b11111010)

COPY_EXISTING ~scrl1w.itm~ ~override/scrl1w.itm~
  READ_BYTE 0x2f "kit_usability"
  WRITE_BYTE 0x2f ("%kit_usability%" BAND 0b11111010)

COPY_EXISTING ~scrl7u.itm~ ~override/scrl7u.itm~
  READ_BYTE 0x2f "kit_usability"
  WRITE_BYTE 0x2f ("%kit_usability%" BAND 0b11111110)

COPY_EXISTING ~SCRLA9.itm~ ~override/SCRLA9.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~wand03.itm~ ~override/rods03.itm~

COPY_EXISTING ~scrl8s.itm~ ~override/scrl8f.itm~

COPY_EXISTING ~scrl8s.itm~ ~override/scrl8n.itm~

COPY_EXISTING ~scrl2g.itm~ ~override/scrl8x.itm~

COPY_EXISTING ~scrlal.itm~ ~override/scrlar.itm~

COPY_EXISTING ~scrl8g.itm~ ~override/scrl8i.itm~

COPY_EXISTING ~scrl8y.itm~ ~override/scrl9b.itm~

COPY_EXISTING ~scrl7s.itm~ ~override/scrl7k.itm~

COPY_EXISTING ~scrl1v.itm~ ~override/scrl2b.itm~

COPY_EXISTING ~scrl9q.itm~ ~override/scrl9n.itm~

COPY_EXISTING ~scrl3g.itm~ ~override/S!scrl21.itm~

COPY_EXISTING ~sw2h11.itm~ ~override/sw2h06.itm~

COPY_EXISTING ~sw2h11.itm~ ~override/sw2h13.itm~

COPY_EXISTING ~book61.itm~ ~override/book34.itm~

COPY_EXISTING ~boot06.itm~ ~override/boot12.itm~

COPY_EXISTING ~plat04.itm~ ~override/plat21.itm~

COPY_EXISTING ~helm08.itm~ ~override/helm02.itm~

COPY_EXISTING ~wand03.itm~ ~override/wand19.itm~

COPY_EXISTING ~ring43.itm~ ~override/ring42.itm~

COPY_EXISTING ~scrl76.itm~ ~override/scrl3g.itm~

COPY_EXISTING ~ring10.itm~ ~override/ring34.itm~

COPY_EXISTING ~scrl2d.itm~ ~override/scrl7d.itm~

COPY_EXISTING ~scrl1e.itm~ ~override/scrl6g.itm~

COPY_EXISTING ~scrlam.itm~ ~override/scrl9j.itm~

// Modify monk's fists combat abilities //

COPY_EXISTING ~mfist3.itm~ ~override/mfist3.itm~
  SAY NAME1 @10190
  SAY NAME2 @10190
  WRITE_LONG  0x60 1 // +1 enchantment

  READ_BYTE  0x18 "flags01"
  WRITE_BYTE 0x18 ("%flags01%" BOR 0b01000000)  // adds magical flag

  READ_LONG   0x64 "ability_offset"
  READ_SHORT  0x68 "ability_num"
  FOR (index = 0; index < ability_num; index = index + 1) BEGIN
    READ_SHORT  ("%ability_offset%" + ("%index%" * 0x38)) "type"
    PATCH_IF ("%type%" = 1) BEGIN // melee check
      WRITE_SHORT ("%ability_offset%" + 0x14 + ("%index%" * 0x38)) 1  // THAC0 bonus
      WRITE_SHORT ("%ability_offset%" + 0x1a + ("%index%" * 0x38)) 1  // damage bonus
    END
  END
  BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~mfist4.itm~ ~override/mfist4.itm~
  SAY NAME1 @10191
  SAY NAME2 @10191
  WRITE_LONG  0x60 2 // +2 enchantment

  READ_LONG   0x64 "ability_offset"
  READ_SHORT  0x68 "ability_num"
  FOR (index = 0; index < ability_num; index = index + 1) BEGIN
    READ_SHORT  ("%ability_offset%" + ("%index%" * 0x38)) "type"
    PATCH_IF ("%type%" = 1) BEGIN // melee check
      WRITE_SHORT ("%ability_offset%" + 0x16 + ("%index%" * 0x38)) 6  // Dice size
      WRITE_SHORT ("%ability_offset%" + 0x18 + ("%index%" * 0x38)) 2  // Number of dice
      WRITE_SHORT ("%ability_offset%" + 0x14 + ("%index%" * 0x38)) 2  // THAC0 bonus
      WRITE_SHORT ("%ability_offset%" + 0x1a + ("%index%" * 0x38)) 2  // damage bonus
    END
  END
  BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~mfist5.itm~ ~override/mfist5.itm~
  SAY NAME1 @10192
  SAY NAME2 @10192
  WRITE_LONG  0x60 3 // +3 enchantment

  READ_LONG   0x64 "ability_offset"
  READ_SHORT  0x68 "ability_num"
  FOR (index = 0; index < ability_num; index = index + 1) BEGIN
    READ_SHORT  ("%ability_offset%" + ("%index%" * 0x38)) "type"
    PATCH_IF ("%type%" = 1) BEGIN // melee check
      WRITE_SHORT ("%ability_offset%" + 0x16 + ("%index%" * 0x38)) 6  // Dice size
      WRITE_SHORT ("%ability_offset%" + 0x18 + ("%index%" * 0x38)) 2  // Number of dice
      WRITE_SHORT ("%ability_offset%" + 0x14 + ("%index%" * 0x38)) 3  // THAC0 bonus
      WRITE_SHORT ("%ability_offset%" + 0x1a + ("%index%" * 0x38)) 3  // damage bonus
    END
  END
  BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~mfist6.itm~ ~override/mfist6.itm~
  SAY NAME1 @10192
  SAY NAME2 @10192
  WRITE_LONG  0x60 3 // +3 enchantment

  READ_LONG   0x64 "ability_offset"
  READ_SHORT  0x68 "ability_num"
  FOR (index = 0; index < ability_num; index = index + 1) BEGIN
    READ_SHORT  ("%ability_offset%" + ("%index%" * 0x38)) "type"
    PATCH_IF ("%type%" = 1) BEGIN // melee check
      WRITE_SHORT ("%ability_offset%" + 0x16 + ("%index%" * 0x38)) 8  // Dice size
      WRITE_SHORT ("%ability_offset%" + 0x18 + ("%index%" * 0x38)) 2  // Number of dice
      WRITE_SHORT ("%ability_offset%" + 0x14 + ("%index%" * 0x38)) 3  // THAC0 bonus
      WRITE_SHORT ("%ability_offset%" + 0x1a + ("%index%" * 0x38)) 3  // damage bonus
    END
  END
  BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~mfist7.itm~ ~override/mfist7.itm~
  SAY NAME1 @10193
  SAY NAME2 @10193
  WRITE_LONG  0x60 4 // +4 enchantment

  READ_LONG   0x64 "ability_offset"
  READ_SHORT  0x68 "ability_num"
  FOR (index = 0; index < ability_num; index = index + 1) BEGIN
    READ_SHORT  ("%ability_offset%" + ("%index%" * 0x38)) "type"
    PATCH_IF ("%type%" = 1) BEGIN // melee check
      WRITE_SHORT ("%ability_offset%" + 0x16 + ("%index%" * 0x38)) 8  // Dice size
      WRITE_SHORT ("%ability_offset%" + 0x18 + ("%index%" * 0x38)) 2  // Number of dice
      WRITE_SHORT ("%ability_offset%" + 0x14 + ("%index%" * 0x38)) 4  // THAC0 bonus
      WRITE_SHORT ("%ability_offset%" + 0x1a + ("%index%" * 0x38)) 4  // damage bonus
    END
  END
  BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~mfist8.itm~ ~override/mfist8.itm~
  SAY NAME1 @10193
  SAY NAME2 @10193
  WRITE_LONG  0x60 4 // +4 enchantment

  READ_LONG   0x64 "ability_offset"
  READ_SHORT  0x68 "ability_num"
  FOR (index = 0; index < ability_num; index = index + 1) BEGIN
    READ_SHORT  ("%ability_offset%" + ("%index%" * 0x38)) "type"
    PATCH_IF ("%type%" = 1) BEGIN // melee check
      WRITE_SHORT ("%ability_offset%" + 0x16 + ("%index%" * 0x38)) 10  // Dice size
      WRITE_SHORT ("%ability_offset%" + 0x18 + ("%index%" * 0x38)) 2  // Number of dice
      WRITE_SHORT ("%ability_offset%" + 0x14 + ("%index%" * 0x38)) 4  // THAC0 bonus
      WRITE_SHORT ("%ability_offset%" + 0x1a + ("%index%" * 0x38)) 4  // damage bonus
    END
  END
  BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~mfist8.itm~ ~override/mfist9.itm~
  SAY NAME1 @10194
  SAY NAME2 @10194
  WRITE_LONG  0x60 5 // +5 enchantment

  READ_LONG   0x64 "ability_offset"
  READ_SHORT  0x68 "ability_num"
  FOR (index = 0; index < ability_num; index = index + 1) BEGIN
    READ_SHORT  ("%ability_offset%" + ("%index%" * 0x38)) "type"
    PATCH_IF ("%type%" = 1) BEGIN // melee check
      WRITE_SHORT ("%ability_offset%" + 0x14 + ("%index%" * 0x38)) 5  // THAC0 bonus
      WRITE_SHORT ("%ability_offset%" + 0x1a + ("%index%" * 0x38)) 5  // damage bonus
    END
  END
  BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~mfist8.itm~ ~override/mfist10.itm~
  SAY NAME1 @10194
  SAY NAME2 @10194
  WRITE_LONG  0x60 5 // +5 enchantment

  READ_LONG   0x64 "ability_offset"
  READ_SHORT  0x68 "ability_num"
  FOR (index = 0; index < ability_num; index = index + 1) BEGIN
    READ_SHORT  ("%ability_offset%" + ("%index%" * 0x38)) "type"
    PATCH_IF ("%type%" = 1) BEGIN // melee check
      WRITE_SHORT ("%ability_offset%" + 0x16 + ("%index%" * 0x38)) 8  // Dice size
      WRITE_SHORT ("%ability_offset%" + 0x18 + ("%index%" * 0x38)) 3  // Number of dice
      WRITE_SHORT ("%ability_offset%" + 0x14 + ("%index%" * 0x38)) 5  // THAC0 bonus
      WRITE_SHORT ("%ability_offset%" + 0x1a + ("%index%" * 0x38)) 5  // damage bonus
    END
  END
  BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~sw1h54.itm~ ~override/sw1h54.itm~
  SAY DESC @10244
  WRITE_LONG  0x60 4 // +4 enchantment
  BUT_ONLY

COPY_EXISTING ~sw1h03.itm~ ~override/sw1h03.itm~
  SAY NAME2 @10250
  WRITE_LONG  0x60 2 // +2 enchantment
  BUT_ONLY

COPY_EXISTING ~helm20.itm~ ~override/helm20.itm~
  SAY DESC @10229

  LAUNCH_PATCH_FUNCTION ~ALTER_ITEM_EFFECT~ INT_VAR
    check_globals = 1
    match_opcode = 18
    parameter1 = 15
    parameter2 = 0
  END

  BUT_ONLY

COPY_EXISTING ~blun09.itm~ ~override/blun09.itm~
  WRITE_SHORT 0x042 60 // Lore to ID
  BUT_ONLY

// The following items exist only in BG2EE //

ACTION_IF GAME_IS ~bg2ee~ THEN BEGIN
  // Adoy's belt
  COPY_EXISTING ~nebelt01.itm~ ~override/nebelt01.itm~
  SAY DESC @10198
  READ_LONG   0x6a "feature_offset"
  READ_SHORT  0x70 "feature_num"
  FOR (index = 0; index < feature_num; index = index + 1) BEGIN
    READ_SHORT  ("%feature_offset%" + ("%index%" * 0x30)) "opcode"
    PATCH_IF ("%opcode%" = 35) BEGIN // save vs. polymorph
      WRITE_LONG ("%feature_offset%" + 0x04 + ("%index%" * 0x30)) 2  // THAC0 bonus
    END
  END
  BUT_ONLY_IF_IT_CHANGES

  // Robe of Invocation
  COPY_EXISTING ~ohnrobe2.itm~ ~override/ohnrobe2.itm~
    SAY DESC @10202
    PATCH_FOR_EACH ~opcode_number~ IN ~27~ ~28~ ~29~ ~30~ BEGIN
      LAUNCH_PATCH_FUNCTION ~ALTER_ITEM_EFFECT~ INT_VAR
        check_globals = 1
        match_opcode = ~%opcode_number%~
        parameter1 = 10
      END
    END
  BUT_ONLY_IF_IT_CHANGES

  // Tunic of Blindeye
  COPY_EXISTING ~ohnrobe3.itm~ ~override/ohnrobe3.itm~
  SAY DESC @10199
  READ_LONG   0x6a "feature_offset"
  READ_SHORT  0x70 "feature_num"
  FOR (index = 0; index < feature_num; index = index + 1) BEGIN
    READ_SHORT  ("%feature_offset%" + ("%index%" * 0x30)) "opcode"
    PATCH_IF ("%opcode%" = 126) BEGIN // movement rate bonus
      WRITE_LONG ("%feature_offset%" + 0x04 + ("%index%" * 0x30)) 1
    END
    PATCH_IF ("%opcode%" = 31) BEGIN // MR% bonus
      WRITE_LONG ("%feature_offset%" + 0x04 + ("%index%" * 0x30)) 5
    END
  END
  BUT_ONLY_IF_IT_CHANGES

  // Wooden Horse Neclace
  COPY_EXISTING ~ohnamul2.itm~ ~override/ohnamul2.itm~
  SAY DESC @10200
  READ_LONG   0x6a "feature_offset"
  READ_SHORT  0x70 "feature_num"
  FOR (index = 0; index < feature_num; index = index + 1) BEGIN
    READ_SHORT  ("%feature_offset%" + ("%index%" * 0x30)) "opcode"
    PATCH_IF ("%opcode%" = 0) BEGIN // AC bonus
      WRITE_LONG ("%feature_offset%" + 0x04 + ("%index%" * 0x30)) 1
    END
    PATCH_IF ("%opcode%" = 33) BEGIN // save vs. death bonus
      WRITE_LONG ("%feature_offset%" + 0x04 + ("%index%" * 0x30)) 1
    END
    PATCH_IF ("%opcode%" = 34) BEGIN // save vs. wand bonus
      WRITE_LONG ("%feature_offset%" + 0x04 + ("%index%" * 0x30)) 1
    END
    PATCH_IF ("%opcode%" = 35) BEGIN // save vs. polymorph bonus
      WRITE_LONG ("%feature_offset%" + 0x04 + ("%index%" * 0x30)) 1
    END
    PATCH_IF ("%opcode%" = 36) BEGIN // save vs. breath bonus
      WRITE_LONG ("%feature_offset%" + 0x04 + ("%index%" * 0x30)) 1
    END
    PATCH_IF ("%opcode%" = 37) BEGIN // save vs. spell bonus
      WRITE_LONG ("%feature_offset%" + 0x04 + ("%index%" * 0x30)) 1
    END
  END
  BUT_ONLY_IF_IT_CHANGES

  // Shield of Fyrus Khal +2
  COPY_EXISTING ~ohnshld1.itm~ ~override/ohnshld1.itm~
      SAY DESC @10201

      LAUNCH_PATCH_FUNCTION ~DELETE_ITEM_HEADER~ INT_VAR
        "header_type" = 3 // Magical
      END

      LAUNCH_PATCH_FUNCTION ~DELETE_ITEM_EQEFFECT~ INT_VAR
        "opcode_to_delete" = 272 // Apply repeating EFF
      END

      LAUNCH_PATCH_FUNCTION ~ALTER_ITEM_EFFECT~ INT_VAR
        "check_globals" = 1
        "match_opcode" = 0 // AC bonus
        "parameter1" = 1
      END

  // The Brick +2
  COPY_EXISTING ~ohnhamm1.itm~ ~override/ohnhamm1.itm~
      SAY DESC @10203

      LAUNCH_PATCH_FUNCTION ~DELETE_ITEM_EFFECT~ INT_VAR
        "opcode_to_delete" = 60 // Casting failure
      END

  // The Visage
  COPY_EXISTING ~ohdmask.itm~ ~override/ohdmask.itm~
      SAY DESC @10204

      LAUNCH_PATCH_FUNCTION ~DELETE_ITEM_EFFECT~ INT_VAR
        "opcode_to_delete" = 60 // Casting failure
      END

      LAUNCH_PATCH_FUNCTION ~DELETE_ITEM_EQEFFECT~ INT_VAR
        "opcode_to_delete" = 101 // Immunity to effect
      END

      LAUNCH_PATCH_FUNCTION ~DELETE_ITEM_EQEFFECT~ INT_VAR
        "opcode_to_delete" = 169 // Prevent portrait icon
      END

      LAUNCH_PATCH_FUNCTION ~DELETE_ITEM_EQEFFECT~ INT_VAR
        "opcode_to_delete" = 267 // Disable display string
      END

      LAUNCH_PATCH_FUNCTION ~DELETE_ITEM_EQEFFECT~ INT_VAR
        "opcode_to_delete" = 296 // Immunity to specific animation
      END

      LAUNCH_PATCH_FUNCTION ~DELETE_ITEM_EQEFFECT~ INT_VAR
        "opcode_to_delete" = 23 // Reset morale
      END

      LAUNCH_PATCH_FUNCTION ~DELETE_ITEM_EQEFFECT~ INT_VAR
        "opcode_to_delete" = 161 // Remove fear
      END

      LAUNCH_PATCH_FUNCTION ~DELETE_ITEM_EQEFFECT~ INT_VAR
        "opcode_to_delete" = 106 // Morale break
      END

      LAUNCH_PATCH_FUNCTION ~DELETE_ITEM_EQEFFECT~ INT_VAR
        "opcode_to_delete" = 240 // Remove portrait icon
      END

  // The Jade Fang
  COPY_EXISTING ~ohhdag01.itm~ ~override/ohhdag01.itm~
      SAY DESC @10205
      WRITE_LONG 0x60 2 // Enchantment

      LAUNCH_PATCH_FUNCTION ~ALTER_ITEM_HEADER~ INT_VAR
        "header_type" = 1
        "damage_bonus" = 2
        "thac0_bonus" = 2
      END

  // Gauntlets of Ain Zekk
  COPY_EXISTING ~ohrbrac1.itm~ ~override/ohrbrac1.itm~
      SAY DESC @10206

      LAUNCH_PATCH_FUNCTION ~DELETE_ITEM_EQEFFECT~ INT_VAR
        "opcode_to_delete" = 289 // Fist damage bonus
      END

  // Cloak of the Dark Moon
  COPY_EXISTING ~ohrclck4.itm~ ~override/ohrclck4.itm~
      SAY DESC @10207

      LAUNCH_PATCH_FUNCTION ~DELETE_ITEM_HEADER~ INT_VAR
        "header_type" = 3 // Magical
      END

      LAUNCH_PATCH_FUNCTION ~DELETE_ITEM_EQEFFECT~ INT_VAR
        "opcode_to_delete" = 232 // Cast spell on condition
      END

  // Headband of the Devout
  COPY_EXISTING ~ohrhelm1.itm~ ~override/ohrhelm1.itm~
      SAY DESC @10208

      LAUNCH_PATCH_FUNCTION ~DELETE_ITEM_HEADER~ INT_VAR
        "header_type" = 3 // Magical
      END

  // Ring of Duplication
  COPY_EXISTING ~ohrring1.itm~ ~override/ohrring1.itm~
      SAY DESC @10209

      LAUNCH_PATCH_FUNCTION ~DELETE_ITEM_HEADER~ INT_VAR
        "header_type" = 3 // Magical
      END

  // Abyssal Blade #1
  COPY_EXISTING ~ohdsw2ha.itm~ ~override/ohdsw2ha.itm~
      SAY DESC @10210
      WRITE_LONG 0x60 2 // Enchantment

      LAUNCH_PATCH_FUNCTION ~ALTER_ITEM_HEADER~ INT_VAR
        "header_type" = 1
        "damage_bonus" = 2
        "thac0_bonus" = 2
      END

  // Abyssal Blade #2
  COPY_EXISTING ~ohdsw2hb.itm~ ~override/ohdsw2hb.itm~
      SAY DESC @10211
      WRITE_LONG 0x60 2 // Enchantment

      LAUNCH_PATCH_FUNCTION ~ALTER_ITEM_HEADER~ INT_VAR
        "header_type" = 1
        "damage_bonus" = 2
        "thac0_bonus" = 2
      END

  // Abyssal Blade #3
  COPY_EXISTING ~ohdsw2hc.itm~ ~override/ohdsw2hc.itm~
      SAY DESC @10212
      WRITE_LONG 0x60 2 // Enchantment

      LAUNCH_PATCH_FUNCTION ~ALTER_ITEM_HEADER~ INT_VAR
        "header_type" = 1
        "damage_bonus" = 2
        "thac0_bonus" = 2
      END

  // Abyssal Blade #4
  COPY_EXISTING ~ohdsw2hd.itm~ ~override/ohdsw2hd.itm~
      SAY DESC @10213
      WRITE_LONG 0x60 2 // Enchantment

      LAUNCH_PATCH_FUNCTION ~ALTER_ITEM_HEADER~ INT_VAR
        "header_type" = 1
        "damage_bonus" = 2
        "thac0_bonus" = 2
      END

  // Brooch of Vagrant Blades
  COPY_EXISTING ~ohramul1.itm~ ~override/ohramul1.itm~
    SAY DESC @10236

    LAUNCH_PATCH_FUNCTION ~DELETE_ITEM_EQEFFECT~ INT_VAR
      opcode_to_delete = "-1"
    END

    LAUNCH_PATCH_FUNCTION ~ADD_ITEM_EQEFFECT~ INT_VAR
      opcode = 0
      parameter1 = 1
      parameter2 = 0
      target = 1
      timing = 2
      resist_dispel = 0
    END
END
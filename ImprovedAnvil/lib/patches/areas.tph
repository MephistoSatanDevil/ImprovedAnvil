// Patch area files //

COPY_EXISTING ~ar0021.are~ ~override/ar0021.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0082" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0082.are~ ~override/ar0082.are~
  WRITE_ASCII 0x94 ~ar0082~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0021" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0082.BCS~ ~ImprovedAnvil\BAF\AR0082.BAF~

COPY_EXISTING ~ar0300.are~ ~override/ar0300.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran0334" = 0) OR
	     ("%iname%" STRING_COMPARE_CASE "Tran0301" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0300.BCS~ ~ImprovedAnvil\BAF\AR0300.BAF~

COPY_EXISTING ~ar0301.are~ ~override/ar0301.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran0301" = 0) OR
	     ("%iname%" STRING_COMPARE_CASE "Tran0300" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR0301.BCS~ ~ImprovedAnvil\BAF\AR0301.BAF~

COPY_EXISTING ~ar0302.are~ ~override/ar0302.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0301" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0334.are~ ~override/ar0334.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0300" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR0334.BCS~ ~ImprovedAnvil\BAF\AR0334.BAF~

COPY_EXISTING ~ar0503.are~ ~override/ar0503.are~
  WRITE_ASCII 0x94 ~ar0503~ #8 // Area Script reference
EXTEND_BOTTOM ~AR0503.BCS~ ~ImprovedAnvil\BAF\AR0503.BAF~

COPY_EXISTING ~ar1203.are~ ~override/ar1203.are~
  WRITE_ASCII 0x94 ~ar1203~ #8 // Area Script reference
EXTEND_BOTTOM ~AR1203.BCS~ ~ImprovedAnvil\BAF\AR1203.BAF~

COPY_EXISTING ~ar1201.are~ ~override/ar1201.are~
  WRITE_ASCII 0x94 ~ar1201~ #8 // Area Script reference
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!mistva~ #8
  WRITE_ASCII ("%interroffset%" + 88) ~S!misth1~ #8
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 132) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 132) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR1201.BCS~ ~ImprovedAnvil\BAF\AR1201.BAF~

COPY_EXISTING ~ar1610.are~ ~override/ar1610.are~
  WRITE_ASCII 0x94 ~ar1610~ #8 // Area Script reference
EXTEND_BOTTOM ~AR1610.BCS~ ~ImprovedAnvil\BAF\AR1610.BAF~

COPY_EXISTING ~AR0201.ARE~ ~override/AR0201.ARE~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!mummr~ #8
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran0206a" = 0) OR
	    ("%iname%" STRING_COMPARE_CASE "Tran0206b" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDPIRATE~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0202.are~ ~override/ar0202.are~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~mistva01~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDGNOLL~ #8
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0204.are~ ~override/ar0204.are~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 5" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDPIRATE~ #8
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 44) ~RDKEEP~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSAHUA~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDKEEP~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR0205.ARE~ ~override/AR0205.ARE~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!behgau~ #8

COPY_EXISTING ~AR0206.ARE~ ~override/AR0206.ARE~
  WRITE_ASCII 0x94 ~ar0206~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran0201a" = 0) OR
	    ("%iname%" STRING_COMPARE_CASE "Tran0201b" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDPIRATE~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (15)
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "High level trap" = 0) BEGIN
    WRITE_ASCII ("%ioffset%" + ("%it%" * 196) + 124) ~S!ar206~ #8
    SET "it" = "%icount%"
   END
  "it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0206.BCS~ ~ImprovedAnvil\BAF\AR0206.BAF~

COPY_EXISTING ~ar0303.are~ ~override/ar0303.are~
  WRITE_ASCII 0x94 ~ar0303~ #8 // Area Script reference
EXTEND_BOTTOM ~AR0303.BCS~ ~ImprovedAnvil\BAF\AR0303.BAF~

COPY_EXISTING ~ar0310.are~ ~override/ar0310.are~
  WRITE_ASCII 0x94 ~ar0310~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0313" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0310.BCS~ ~ImprovedAnvil\BAF\AR0310.BAF~

COPY_EXISTING ~ar0313.are~ ~override/ar0313.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0310" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0316.are~ ~override/ar0316.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0317" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0317.are~ ~override/ar0317.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
    READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
    PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0316" = 0) BEGIN
      READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
      WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
      READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
      WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
    END
    "it" = "%it%" + 1
  END

  LAUNCH_PATCH_FUNCTION ~REPLACE_AREA_ITEM~ STR_VAR
    old_item = ~SCRL7K~
    new_item = ~SCRL7S~
  END

  EXTEND_BOTTOM ~AR0317.BCS~ ~ImprovedAnvil\BAF\AR0317.BAF~

COPY_EXISTING ~ar0325.are~ ~override/ar0325.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0326" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0326.are~ ~override/ar0326.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0325" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0326.BCS~ ~ImprovedAnvil\BAF\AR0326.BAF~

// Slums
COPY_EXISTING ~ar0400.are~ ~override/ar0400.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0417" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0404.ARE~ ~override/ar0404.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 132) 1
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0405.are~ ~override/ar0405.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0404" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0405.BCS~ ~ImprovedAnvil\BAF\AR0405.BAF~

COPY_EXISTING ~ar0411.are~ ~override/ar0411.are~
 READ_SHORT 0x5A "icount"
 READ_LONG 0x5C "ioffset"
 SET "it" = 0
 WHILE ("%it%" < "%icount%") BEGIN
  READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (14)
  PATCH_IF ("%iname%" STRING_COMPARE_CASE "Info Trigger 4" = 0) BEGIN
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 52) 8
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 100) (BNOT 0)
   WRITE_ASCII ("%ioffset%" + ("%it%" * 196) + 124) ~S!time~
   SET "it" = "%icount%"
  END
 "it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR0414.ARE~ ~override/AR0414.ARE~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!maurez~ #8

COPY_EXISTING ~ar0417.are~ ~override/ar0417.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0400" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0417.BCS~ ~ImprovedAnvil\BAF\AR0417.BAF~

// Bridge district
COPY_EXISTING ~AR0500.ARE~ ~override/AR0500.ARE~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran0506" = 0) OR
	    ("%iname%" STRING_COMPARE_CASE "Tran0530" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR0506.ARE~ ~override/AR0506.ARE~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran0500a" = 0) OR
	    ("%iname%" STRING_COMPARE_CASE "Tran0500b" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0506.BCS~ ~ImprovedAnvil\BAF\AR0506.BAF~

COPY_EXISTING ~AR0511.ARE~ ~override/AR0511.ARE~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran0522" = 0) OR
	    ("%iname%" STRING_COMPARE_CASE "Tran0509" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR0516.ARE~ ~override/AR0516.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!phounr~ #8
  WRITE_ASCII ("%interroffset%" + 80) ~rdspider~ #8
  READ_SHORT ("%interroffset%" + 152) "crecount"
  PATCH_IF ("%crecount%" < 2) BEGIN
   WRITE_SHORT ("%interroffset%" + 152) 2
END

COPY_EXISTING ~ar0525.are~ ~override/ar0525.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0526" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0526.are~ ~override/ar0526.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0525" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0526.BCS~ ~ImprovedAnvil\BAF\AR0526.BAF~

COPY_EXISTING ~ar0530.are~ ~override/ar0530.are~
  READ_LONG 0xBC "song-offset"
  WRITE_LONG "%song-offset%" 0
  WRITE_LONG ("%song-offset%" + 4) 0
  WRITE_LONG ("%song-offset%" + 12) 51
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0500" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0530.BCS~ ~ImprovedAnvil\BAF\AR0530.BAF~

COPY_EXISTING ~AR0602.ARE~ ~override/AR0602.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 9" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (14)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 11" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~MEPEAR01~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (14)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 12" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 44) ~MEPEAR01~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 8" = 0)) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (14)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 13" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR0603.ARE~ ~override/AR0603.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!SPIDE3~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0701.are~ ~override/ar0701.are~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 7" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!mistva~ #8
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0709.are~ ~override/ar0709.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0712" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0705.are~ ~override/ar0705.are~
 READ_SHORT 0x5A "icount"
 READ_LONG 0x5C "ioffset"
 SET "it" = 0
 WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (15)
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Trigger Point 4" = 0) BEGIN
     WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 52) 28
     WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 100) (BNOT 0)
     WRITE_ASCII ("%ioffset%" + ("%it%" * 196) + 124) ~Trania20~
     SET "it" = "%icount%"
   END
   "it" = "%it%" + 1
 END

 LAUNCH_PATCH_FUNCTION ~REPLACE_AREA_ITEM~ STR_VAR
   old_item = ~SCRL7V~
   new_item = ~SCRL7M~
 END

 EXTEND_TOP ~AR0705.BCS~ ~ImprovedAnvil\BAF\AR0705.BAF~

COPY_EXISTING ~ar0712.are~ ~override/ar0712.are~
  WRITE_ASCII 0x94 ~ar0712~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0709" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR0712.BCS~ ~ImprovedAnvil\BAF\AR0712.BAF~

COPY_EXISTING ~ar0800.are~ ~override/ar0800.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0806" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR0801.ARE~ ~override/AR0801.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSahua~ #8
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 44) ~RDPirate~ #8
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR0802.ARE~ ~override/AR0802.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 80) ~S!mummr~ #8
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDGNOLL~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDPirate~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0806.are~ ~override/ar0806.are~
  WRITE_ASCII 0x94 ~ar0806~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0800" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0806.BCS~ ~ImprovedAnvil\BAF\AR0806.BAF~

COPY_EXISTING ~AR0808.ARE~ ~override/AR0808.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!skeld~ #8
  READ_LONG 0x54 "actoroffset"
  READ_SHORT 0x58 "actorcount"
  FOR (i = 0; i < "%actorcount%"; i = i+1) BEGIN
   READ_ASCII ("%actoroffset%" + 272 * "%i%" + 128) "creresref"
   PATCH_IF (("%creresref%" STRING_COMPARE_CASE "MISTVA01") = 0) BEGIN
    WRITE_ASCII ("%actoroffset%" + 272 * "%i%" + 96) "" #8
   END
END

// Guarded Compound, level 2
COPY_EXISTING ~AR0907.ARE~ ~override/AR0907.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
    READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
    PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran0906a" = 0) OR
              ("%iname%" STRING_COMPARE_CASE "Tran0906b" = 0))
    BEGIN
      READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
      WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
      READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
      WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
    END
    "it" = "%it%" + 1
  END

  PATCH_FOR_EACH ~item_to_delete~ IN ~sper06~ BEGIN
    LAUNCH_PATCH_MACRO ~DELETE_AREA_ITEM~
  END

  EXTEND_TOP ~AR0907.BCS~ ~ImprovedAnvil\BAF\AR0907.BAF~

COPY_EXISTING ~ar1100.are~ ~override/ar1100.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran1106" = 0) OR
             ("%iname%" STRING_COMPARE_CASE "Tran1103" = 0) OR
             ("%iname%" STRING_COMPARE_CASE "Tran1107" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!shador~ #8
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR1100.BCS~ ~ImprovedAnvil\BAF\AR1100.BAF~

COPY_EXISTING ~ar1101.are~ ~override/ar1101.are~
  WRITE_ASCII 0x94 ~ar1101~ #8 // Area Script reference
  EXTEND_BOTTOM ~AR1101.BCS~ ~ImprovedAnvil\BAF\AR1101.BAF~

COPY_EXISTING ~ar1103.are~ ~override/ar1103.are~
  WRITE_ASCII 0x94 ~ar1103~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran1100" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR1103.BCS~ ~ImprovedAnvil\BAF\AR1103.BAF~

COPY_EXISTING ~ar1106.are~ ~override/ar1106.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran1100" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR1106.BCS~ ~ImprovedAnvil\BAF\AR1106.BAF~

COPY_EXISTING ~ar1202.are~ ~override/ar1202.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!shadfi~ #8
  WRITE_ASCII ("%interroffset%" + 80) ~S!skeld~ #8
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran1201" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_LONG 0xA4 "dcount"
  READ_LONG 0xA8 "doffset"
  SET "it" = 0
  WHILE ("%it%" < "%dcount%") BEGIN
   READ_ASCII ("%doffset%" + "%it%" * 200) "dname"
   PATCH_IF ("%dname%" STRING_COMPARE_CASE "Door02" = 0) BEGIN
    WRITE_LONG ("%doffset%" + ("%it%" * 200) + 140) 100
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 5" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDGnoll~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDPirate~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 9" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 132) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (14)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 12" = 0) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (14)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 10" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (14)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 11" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~mistva01~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR1202.BCS~ ~ImprovedAnvil\BAF\AR1202.BAF~

COPY_EXISTING ~AR1300.ARE~ ~override/AR1300.ARE~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran1302a" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0)) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 5" = 0)) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR1300.BCS~ ~ImprovedAnvil\BAF\AR1300.BAF~

COPY_EXISTING ~ar1301.are~ ~override/ar1301.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!icyuan~ #8

COPY_EXISTING ~AR1302.ARE~ ~override/AR1302.ARE~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!icyuan~ #8
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran1300b" = 0) OR
	     ("%iname%" STRING_COMPARE_CASE "Tran1300c" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0)) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR1302.BCS~ ~ImprovedAnvil\BAF\AR1302.BAF~

COPY_EXISTING ~AR1303.are~ ~override/AR1303.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran1301" = 0) OR
             ("%iname%" STRING_COMPARE_CASE "Tran1302" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 5" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 7" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 8" = 0)) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar1305.are~ ~override/ar1305.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!trolr~ #8

COPY_EXISTING ~ar1400.are~ ~override/ar1400.are~
 READ_SHORT 0x5A "icount"
 READ_LONG 0x5C "ioffset"
 SET "it" = 0
 WHILE ("%it%" < "%icount%") BEGIN
  READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (6)
  PATCH_IF ("%iname%" STRING_COMPARE_CASE "Mirror" = 0) BEGIN
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 52) 28
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 100) (BNOT 0)
   WRITE_ASCII ("%ioffset%" + ("%it%" * 196) + 124) ~Trania22~
   SET "it" = "%icount%"
  END
 "it" = "%it%" + 1
END
EXTEND_BOTTOM ~ar1400.BCS~ ~ImprovedAnvil\BAF\ar1400.BAF~

COPY_EXISTING ~AR1401.ARE~ ~override/AR1401.are~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!shador~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 44) ~S!shador~ #8
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR1403.ARE~ ~override/AR1403.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!shador~ #8
  WRITE_ASCII ("%interroffset%" + 80) ~S!shadfi~ #8

COPY_EXISTING ~AR1404.ARE~ ~override/AR1404.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!shador~ #8
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 7" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 8" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!shador~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 44) ~S!shador~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (14)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 11" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!shador~ #8
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR1500.ARE~ ~override/AR1500.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDGnoll~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

// Spellhold, level 2
COPY_EXISTING ~AR1512.ARE~ ~override/AR1512.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0

  WHILE ("%it%" < "%spcount%") BEGIN
    READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
    PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
      WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
      WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    END
    "it" = "%it%" + 1
  END

  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0

  WHILE ("%it%" < "%spcount%") BEGIN
    READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
    PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
      WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDKEEP~ #8
    END
    "it" = "%it%" + 1
  END

  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0

  WHILE ("%it%" < "%spcount%") BEGIN
    READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
    PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) BEGIN
      WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
      WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
    END
    "it" = "%it%" + 1
  END

  PATCH_FOR_EACH ~item_to_delete~ IN ~sper06~ BEGIN
    LAUNCH_PATCH_MACRO ~DELETE_AREA_ITEM~
  END

COPY_EXISTING ~AR1513.ARE~ ~override/AR1513.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~MISTHO01~ #8
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 44) ~MISTVA01~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 2
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDPirate~ #8
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 44) ~RDKEEP~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR1514.ARE~ ~override/AR1514.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDKEEP~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR1515.ARE~ ~override/AR1515.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar1600.are~ ~override/ar1600.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran1605" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR1600.BCS~ ~ImprovedAnvil\BAF\AR1600.BAF~

COPY_EXISTING ~ar1605.are~ ~override/ar1605.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran1600" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR1605.BCS~ ~ImprovedAnvil\BAF\AR1605.BAF~

COPY_EXISTING ~AR1700.ARE~ ~override/AR1700.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR1800.ARE~ ~override/AR1800.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 7" = 0) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 8" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 9" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDKeep~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar1900.are~ ~override/ar1900.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran1904" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 8" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 7" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spgrov~ #8
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR1900.BCS~ ~ImprovedAnvil\BAF\AR1900.BAF~

COPY_EXISTING ~ar1904.are~ ~override/ar1904.are~
  WRITE_ASCII 0x94 ~ar1904~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "AR1900" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
COMPILE ~ImprovedAnvil\BAF\AR1904.BAF~

COPY_EXISTING ~ar2000.are~ ~override/ar2000.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran2013" = 0) OR
             ("%iname%" STRING_COMPARE_CASE "Tran2002" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR2000.BCS~ ~ImprovedAnvil\BAF\AR2000.BAF~

COPY_EXISTING ~ar2002.are~ ~override/ar2002.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran2000" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR2002.BCS~ ~ImprovedAnvil\BAF\AR2002.BAF~

COPY_EXISTING ~ar2013.are~ ~override/ar2013.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran2000" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR2013.BCS~ ~ImprovedAnvil\BAF\AR2013.BAF~

COPY_EXISTING ~AR2100.ARE~ ~override/AR2100.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!umbhul~ #8
  WRITE_ASCII ("%interroffset%" + 80) ~S!icliz~ #8
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar2101.are~ ~override/ar2101.are~
 READ_LONG 0xC0 "interroffset"
 WRITE_ASCII ("%interroffset%" + 72) ~S!behgau~ #8
 READ_SHORT 0x5A "icount"
 READ_LONG 0x5C "ioffset"
 SET "it" = 0
 WHILE ("%it%" < "%icount%") BEGIN
  READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
  PATCH_IF ("%iname%" STRING_COMPARE_CASE "StairInfo" = 0) BEGIN
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 52) 28
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 100) (BNOT 0)
   WRITE_ASCII ("%ioffset%" + ("%it%" * 196) + 124) ~Trania01~
   SET "it" = "%icount%"
  END
 "it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0)) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR2200.ARE~ ~override/ar2200.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran2210a" = 0) OR
	    ("%iname%" STRING_COMPARE_CASE "Tran2210b" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR2200.BCS~ ~ImprovedAnvil\BAF\AR2200.BAF~

// Jae'llat's House
COPY_EXISTING ~AR2209.ARE~ ~override/ar2209.are~
  SPRINT ~item_to_delete~ ~sw1h52~
  LAUNCH_PATCH_MACRO ~DELETE_AREA_ITEM~

// Deirex's Cave
COPY_EXISTING ~AR2210.ARE~ ~override/ar2210.are~
  WRITE_ASCII 0x94 ~ar2210~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
    READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
    PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran2200a" = 0) OR
              ("%iname%" STRING_COMPARE_CASE "Tran2200b" = 0)) BEGIN
      READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
      WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
      READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
      WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
    END
    "it" = "%it%" + 1
  END

  PATCH_FOR_EACH ~item_to_delete~ IN ~sper06~ BEGIN
    LAUNCH_PATCH_MACRO ~DELETE_AREA_ITEM~
  END

  EXTEND_BOTTOM ~AR2210.BCS~ ~ImprovedAnvil\BAF\AR2210.BAF~

COPY_EXISTING ~AR2300.ARE~ ~override/AR2300.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 8" = 0)) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar2400.are~ ~override/ar2400.are~
  READ_LONG 0xA4 "dcount"
  READ_LONG 0xA8 "doffset"
  SET "it" = 0
  WHILE ("%it%" < "%dcount%") BEGIN
   READ_ASCII ("%doffset%" + "%it%" * 200) "dname"
   PATCH_IF ("%dname%" STRING_COMPARE_CASE "Door01" = 0) BEGIN
    WRITE_LONG ("%doffset%" + ("%it%" * 200) + 140) 100
    READ_BYTE ("%doffset%" + ("%it%" * 200) + 0x28) "doorflags"
    WRITE_BYTE ("%doffset%" + ("%it%" * 200) + 0x28) ("%doorflags%" BAND 0b11111101)
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR2401.ARE~ ~override/AR2401.ARE~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!drofod~ #8

COPY_EXISTING ~ar2402.are~ ~override/ar2402.are~
 READ_LONG 0xC0 "interroffset"
 WRITE_ASCII "%interroffset%" ~~ #32
 WRITE_ASCII ("%interroffset%" + 72) ~rdkuoto2~ #8
 READ_SHORT ("%interroffset%" + 164) "trigcount"
 WRITE_SHORT ("%interroffset%" + 164) 1
 READ_SHORT ("%interroffset%" + 168) "daychance"
 WRITE_SHORT ("%interroffset%" + 168) 10
 READ_SHORT ("%interroffset%" + 170) "nigchance"
 WRITE_SHORT ("%interroffset%" + 170) 10
 READ_SHORT 0x5A "icount"
 READ_LONG 0x5C "ioffset"
 SET "it" = 0
 WHILE ("%it%" < "%icount%") BEGIN
  READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (7)
  PATCH_IF ("%iname%" STRING_COMPARE_CASE "GodInfo" = 0) BEGIN
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 52) 8
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 100) (BNOT 0)
   WRITE_ASCII ("%ioffset%" + ("%it%" * 196) + 124) ~S!pull~
   SET "it" = "%icount%"
  END
 "it" = "%it%" + 1
END
  READ_LONG 0xA4 "dcount"
  READ_LONG 0xA8 "doffset"
  SET "it" = 0
  WHILE ("%it%" < "%dcount%") BEGIN
   READ_ASCII ("%doffset%" + "%it%" * 200) "dname"
   PATCH_IF ("%dname%" STRING_COMPARE_CASE "Door02" = 0) BEGIN
    WRITE_LONG ("%doffset%" + ("%it%" * 200) + 140) 100
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 132) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR2402.BCS~ ~ImprovedAnvil\BAF\AR2402.BAF~

COPY_EXISTING ~ar2600.are~ ~override/ar2600.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran2602" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~mistva01~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
    PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 5" = 0) OR
              ("%spname%" STRING_COMPARE_CASE "Spawn Point 8" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDKeep~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR2602.ARE~ ~override/AR2602.ARE~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!wolfwe~ #8
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran2600" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0)) BEGIN
    WRITE_LONG ("%spoffset%" + ("%it%" * 200) + 134) 0
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar2800.are~ ~override/ar2800.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!coinra~ #8
  WRITE_ASCII ("%interroffset%" + 80) ~S!gemran~ #8
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran2807" = 0) OR
             ("%iname%" STRING_COMPARE_CASE "Tran2811" = 0) OR
             ("%iname%" STRING_COMPARE_CASE "Tran2810" = 0) OR
             ("%iname%" STRING_COMPARE_CASE "Tran2802" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_LONG 0xA4 "dcount"
  READ_LONG 0xA8 "doffset"
  SET "it" = 0
  WHILE ("%it%" < "%dcount%") BEGIN
   READ_ASCII ("%doffset%" + "%it%" * 200) "dname"
   PATCH_IF ("%dname%" STRING_COMPARE_CASE "Door07" = 0) BEGIN
    WRITE_LONG ("%doffset%" + ("%it%" * 200) + 140) 100
    WRITE_LONG ("%doffset%" + ("%it%" * 200) + 152) 10862
    READ_BYTE ("%doffset%" + ("%it%" * 200) + 0x28) "doorflags"
    WRITE_BYTE ("%doffset%" + ("%it%" * 200) + 0x28) ("%doorflags%" BOR 0b00000010)
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar2802.are~ ~override/ar2802.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran2800" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar2806.are~ ~override/ar2806.are~
 READ_SHORT 0x5A "icount"
 READ_LONG 0x5C "ioffset"
 SET "it" = 0
 WHILE ("%it%" < "%icount%") BEGIN
  READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (16)
  PATCH_IF ("%iname%" STRING_COMPARE_CASE "Trigger Point 19" = 0) BEGIN
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 52) 28
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 100) (BNOT 0)
   WRITE_ASCII ("%ioffset%" + ("%it%" * 196) + 124) ~Trania28~
   SET "it" = "%icount%"
  END
 "it" = "%it%" + 1
END

COPY_EXISTING ~ar2807.are~ ~override/ar2807.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran2800" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR2807.BCS~ ~ImprovedAnvil\BAF\AR2807.BAF~

COPY_EXISTING ~AR2811.are~ ~override/AR2811.are~
  WRITE_ASCII 0x94 ~AR2811~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran2800" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR2811.BCS~ ~ImprovedAnvil\BAF\AR2811.BAF~

COPY_EXISTING ~AR3000.ARE~ ~override/AR3000.ARE~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran3000a" = 0) OR
	    ("%iname%" STRING_COMPARE_CASE "Tran3000b" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR3000.BCS~ ~ImprovedAnvil\BAF\AR3000.BAF~

COPY_EXISTING ~AR3001.ARE~ ~override/AR3001.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 5" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 8" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 44) ~RDSahua~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
 READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 132) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 7" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDGnoll~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR3004.ARE~ ~override/AR3004.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  READ_SHORT ("%interroffset%" + 152) "crecount"
  WRITE_SHORT ("%interroffset%" + 152) 3

COPY_EXISTING ~ar3010.are~ ~override/ar3010.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 88) ~deriny01~ #8

COPY_EXISTING ~ar3011.are~ ~override/ar3011.are~
  READ_LONG 0xBC "song-offset"
  WRITE_LONG "%song-offset%" 0
  WRITE_LONG ("%song-offset%" + 4) 0
  WRITE_LONG ("%song-offset%" + 12) 58
EXTEND_TOP ~AR3011.BCS~ ~ImprovedAnvil\BAF\AR3011.BAF~

COPY_EXISTING ~ar3014.are~ ~override/ar3014.are~
  WRITE_ASCII 0x94 ~ar3014~ #8 // Area Script reference
EXTEND_BOTTOM ~ar3014.BCS~ ~ImprovedAnvil\BAF\ar3014.BAF~

COPY_EXISTING ~ar3016.ARE~ ~override/ar3016.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDGOLEM3~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~HGWAR02~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDGOLEM3~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 5" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!ELEGRA~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!ELEGRA~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 7" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!ELEGRA~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 8" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!ELEGRA~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 1
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar3017.are~ ~override/ar3017.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran3022" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 132) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDGnoll~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 5" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDKeep~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR3017.BCS~ ~ImprovedAnvil\BAF\AR3017.BAF~

COPY_EXISTING ~AR3019.ARE~ ~override/AR3019.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!mistva~ #8
  WRITE_ASCII ("%interroffset%" + 80) ~S!spidr2~ #8
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 132) 1
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR3021.ARE~ ~override/AR3021.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!umbhul~ #8

COPY_EXISTING ~ar3022.are~ ~override/ar3022.are~
  WRITE_ASCII 0x94 ~ar3022~ #8 // Area Script reference
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!gemran~ #8
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran3027" = 0) OR
             ("%iname%" STRING_COMPARE_CASE "Tran3017" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR3022.BCS~ ~ImprovedAnvil\BAF\AR3022.BAF~

COPY_EXISTING ~ar3027.are~ ~override/ar3027.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran3022" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR3027.BCS~ ~ImprovedAnvil\BAF\AR3027.BAF~

COPY_EXISTING ~AR5002.ARE~ ~override/AR5002.are~
  READ_LONG 0x54 "actoroffset"
  READ_SHORT 0x58 "actorcount"
  FOR (i = 0; i < "%actorcount%"; i = i+1) BEGIN
   READ_ASCII ("%actoroffset%" + 272 * "%i%" + 128) "creresref"
   PATCH_IF (("%creresref%" STRING_COMPARE_CASE "GROMG05") = 0) BEGIN
    WRITE_ASCII ("%actoroffset%" + 272 * "%i%" + 80) "" #8
   END
END

COPY_EXISTING ~AR5006.ARE~ ~override/AR5006.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!vamemi~ #8

COPY_EXISTING ~AR5007.ARE~ ~override/AR5007.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~orc06~ #8

COPY_EXISTING ~ar5200.ARE~ ~override/ar5200.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  READ_SHORT ("%interroffset%" + 152) "crecount"
  WRITE_SHORT ("%interroffset%" + 152) 1
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (5)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "EASYA" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "HARDA" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR5200.BCS~ ~ImprovedAnvil\BAF\AR5200.BAF~

COPY_EXISTING ~ar5201.are~ ~override/ar5201.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~rdfire1~ #8
  READ_SHORT ("%interroffset%" + 152) "crecount"
  WRITE_SHORT ("%interroffset%" + 152) 1
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran5204" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar5202.are~ ~override/ar5202.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!skeld~ #8
  READ_SHORT ("%interroffset%" + 152) "crecount"
  WRITE_SHORT ("%interroffset%" + 152) 1
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDPirate~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar5204.are~ ~override/ar5204.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~rdfire1~ #8
  READ_SHORT ("%interroffset%" + 152) "crecount"
  WRITE_SHORT ("%interroffset%" + 152) 1
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran5201" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR5204.BCS~ ~ImprovedAnvil\BAF\AR5204.BAF~

COPY_EXISTING ~ar6000.are~ ~override/ar6000.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!elegra~ #8
  READ_SHORT ("%interroffset%" + 164) "trigcount"
  WRITE_SHORT ("%interroffset%" + 164) 2
  READ_SHORT ("%interroffset%" + 168) "daychance"
  WRITE_SHORT ("%interroffset%" + 168) 10
  READ_SHORT ("%interroffset%" + 170) "nigchance"
  WRITE_SHORT ("%interroffset%" + 170) 10

COPY_EXISTING ~ar6001.are~ ~override/ar6001.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!elegra~ #8
  READ_SHORT ("%interroffset%" + 154) "diffflag"
  WRITE_SHORT ("%interroffset%" + 154) 2
  READ_SHORT ("%interroffset%" + 168) "daychance"
  WRITE_SHORT ("%interroffset%" + 168) 10
  READ_SHORT ("%interroffset%" + 170) "nigchance"
  WRITE_SHORT ("%interroffset%" + 170) 10

COPY_EXISTING ~ar6002.are~ ~override/ar6002.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!elegra~ #8
  READ_SHORT ("%interroffset%" + 164) "trigcount"
  WRITE_SHORT ("%interroffset%" + 164) 2
  READ_SHORT ("%interroffset%" + 168) "daychance"
  WRITE_SHORT ("%interroffset%" + 168) 10
  READ_SHORT ("%interroffset%" + 170) "nigchance"
  WRITE_SHORT ("%interroffset%" + 170) 10

COPY_EXISTING ~ar6003.are~ ~override/ar6003.are~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0)) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar6008.are~ ~override/ar6008.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!icegor~ #8
  READ_SHORT ("%interroffset%" + 164) "trigcount"
  WRITE_SHORT ("%interroffset%" + 164) 1
  READ_SHORT ("%interroffset%" + 168) "daychance"
  WRITE_SHORT ("%interroffset%" + 168) 10
  READ_SHORT ("%interroffset%" + 170) "nigchance"
  WRITE_SHORT ("%interroffset%" + 170) 10

COPY_EXISTING ~ar6011.are~ ~override/ar6011.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!behgau~ #8

COPY_EXISTING ~ar6100.are~ ~override/ar6100.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!drofod~ #8

COPY_EXISTING ~ar6101.ARE~ ~override/ar6101.are~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar6103.are~ ~override/ar6103.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!spidr1~ #8

COPY_EXISTING ~ar6104.are~ ~override/ar6104.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!drofod~ #8
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar6107.are~ ~override/ar6107.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!umbhul~ #8

COPY_EXISTING ~ar6109.are~ ~override/ar6109.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!drofod~ #8

COPY_EXISTING ~AR6400.ARE~ ~override/AR6400.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~giafir01~ #8
  READ_SHORT ("%interroffset%" + 152) "crecount"
  WRITE_SHORT ("%interroffset%" + 152) 1

COPY_EXISTING ~ar0331.are~ ~override/ar0331.are~
  WRITE_ASCII 0x94 ~ar0331~ #8 // Area Script reference
EXTEND_BOTTOM ~AR0331.BCS~ ~ImprovedAnvil\BAF\AR0331.BAF~

COPY_EXISTING ~ar0412.are~ ~override/ar0412.are~
  WRITE_ASCII 0x94 ~ar0412~ #8 // Area Script reference
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!shador~ #8
  WRITE_ASCII ("%interroffset%" + 80) ~S!shadfi~ #8
EXTEND_BOTTOM ~AR0412.BCS~ ~ImprovedAnvil\BAF\AR0412.BAF~

COPY_EXISTING ~ar3018.are~ ~override/ar3018.are~
  WRITE_ASCII 0x94 ~ar3018~ #8 // Area Script reference
EXTEND_BOTTOM ~ar3018.BCS~ ~ImprovedAnvil\BAF\ar3018.BAF~

COPY_EXISTING ~ar1107.are~ ~override/ar1107.are~
  WRITE_ASCII 0x94 ~ar1107~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran1100" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~ar1107.BCS~ ~ImprovedAnvil\BAF\ar1107.BAF~

// Bridge district
COPY_EXISTING ~AR0500.ARE~ ~override/AR0500.ARE~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0506b" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

ACTION_IF GAME_IS ~bg2ee~ THEN BEGIN
  // Red Wizard Enclave
  COPY_EXISTING ~OH6300.ARE~ ~override/OH6300.ARE~
    PATCH_FOR_EACH ~item_to_delete~ IN ~clck01~ ~misc45~ ~wand06~ ~scrl7s~ ~scrl8r~ BEGIN
      LAUNCH_PATCH_MACRO ~DELETE_AREA_ITEM~
    END

  // Deepstone Clanhold, Exterior
  COPY_EXISTING ~OH4200.ARE~ ~override/OH4200.ARE~
    PATCH_FOR_EACH ~item_to_delete~ IN ~potn11~ ~potn35~ BEGIN
      LAUNCH_PATCH_MACRO ~DELETE_AREA_ITEM~
    END

  // Deepstone Clanhold
  COPY_EXISTING ~OH4210.ARE~ ~override/OH4210.ARE~
    PATCH_FOR_EACH ~item_to_delete~ IN ~potn04~ BEGIN
      LAUNCH_PATCH_MACRO ~DELETE_AREA_ITEM~
    END

  // Deepstone Mines
  COPY_EXISTING ~OH4220.ARE~ ~override/OH4220.ARE~
      READ_LONG 0xC0 "interroffset"
      WRITE_ASCII ("%interroffset%" + 72) ~S!umbhu2~ #8
      WRITE_ASCII ("%interroffset%" + 80) ~S!umbhu2~ #8

  // Dragomir's Tomb
  COPY_EXISTING ~OH7000.ARE~ ~override/OH7000.ARE~
      PATCH_FOR_EACH ~item_to_delete~ IN ~scrl09~ BEGIN
        LAUNCH_PATCH_MACRO ~DELETE_AREA_ITEM~
      END

  // Crypt of Durkon
  COPY_EXISTING ~OH7100.ARE~ ~override/OH7100.ARE~
      PATCH_FOR_EACH ~item_to_delete~ IN ~amul23~ ~amul05~ BEGIN
        LAUNCH_PATCH_MACRO ~DELETE_AREA_ITEM~
      END

  // Tomb of the Unproved
  COPY_EXISTING ~OH7200.ARE~ ~override/OH7200.ARE~
      PATCH_FOR_EACH ~item_to_delete~ IN ~boot07~ BEGIN
        LAUNCH_PATCH_MACRO ~DELETE_AREA_ITEM~
      END

  // Korkorran's Lair
  COPY_EXISTING ~OH7300.ARE~ ~override/OH7300.ARE~
      PATCH_FOR_EACH ~item_to_delete~ IN ~potn55~ BEGIN
        LAUNCH_PATCH_MACRO ~DELETE_AREA_ITEM~
      END
END
// weidu-patch vanilla items that were overwritten by the mod earlier //
// warning: this is not human-friendly //
// everything was auto-generated with GemRB's ielister, iesh and personal hacked up tools //

COPY_EXISTING ~amsoul01.itm~ ~override/amsoul01.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0070   3             // Equip count
  WRITE_SHORT  0x0090   11            // Feat. count
  WRITE_SHORT  0x0092   3             // Feat. offset
  WRITE_SHORT  0x013a   11            // Opcode
  WRITE_BYTE   0x013c   2             // Target type
  WRITE_BYTE   0x013d   4             // Power
  WRITE_LONG   0x013e   0             // Parameter 1
  WRITE_BYTE   0x0146   1             // Timing metho
  WRITE_BYTE   0x0147   3             // Resistance
  WRITE_SHORT  0x016a   17            // Opcode
  WRITE_LONG   0x016e   10            // Parameter 1
  WRITE_LONG   0x018a   8             // Max level
  WRITE_SHORT  0x019a   215           // Opcode
  WRITE_LONG   0x019e   0             // Parameter 1
  WRITE_LONG   0x01a2   1             // Parameter 2
  WRITE_BYTE   0x01a6   0             // Timing metho
  WRITE_LONG   0x01a8   3             // Duration
  WRITE_ASCII  0x01ae   ~SPHEALIN~ #8 // Resource
  WRITE_LONG   0x01ba   0             // Max level
  WRITE_SHORT  0x01ca   79            // Opcode
  WRITE_BYTE   0x01cc   1             // Target type
  WRITE_LONG   0x01d2   0             // Parameter 2
  WRITE_BYTE   0x01d6   1             // Timing metho
  WRITE_LONG   0x01d8   0             // Duration
  WRITE_ASCII  0x01de   ~~         #8 // Resource
  WRITE_SHORT  0x01fa   50            // Opcode
  WRITE_BYTE   0x01fc   2             // Target type
  WRITE_LONG   0x01fe   10460160      // Parameter 1
  WRITE_LONG   0x0202   1966080       // Parameter 2
  WRITE_LONG   0x0208   1             // Duration
  WRITE_ASCII  0x020e   ~~         #8 // Resource
  WRITE_SHORT  0x022a   50            // Opcode
  WRITE_BYTE   0x022c   2             // Target type
  WRITE_LONG   0x022e   "-1907425280"    // Parameter 1
  WRITE_LONG   0x0232   1310720       // Parameter 2
  WRITE_BYTE   0x0236   3             // Timing metho
  WRITE_LONG   0x0238   1             // Duration
  WRITE_ASCII  0x023e   ~~         #8 // Resource
  WRITE_SHORT  0x025a   240           // Opcode
  WRITE_BYTE   0x025c   2             // Target type
  WRITE_LONG   0x0262   7             // Parameter 2
  WRITE_BYTE   0x0266   1             // Timing metho
  WRITE_ASCII  0x026e   ~~         #8 // Resource
  WRITE_SHORT  0x028a   240           // Opcode
  WRITE_BYTE   0x028c   2             // Target type
  WRITE_LONG   0x0292   6             // Parameter 2
  WRITE_BYTE   0x0296   1             // Timing metho
  WRITE_ASCII  0x029e   ~~         #8 // Resource
  WRITE_SHORT  0x02ba   81            // Opcode
  WRITE_BYTE   0x02bc   2             // Target type
  WRITE_BYTE   0x02c6   1             // Timing metho
  WRITE_BYTE   0x02c7   2             // Resistance
  WRITE_ASCII  0x02ce   ~~         #8 // Resource
  WRITE_SHORT  0x02ea   75            // Opcode
  WRITE_BYTE   0x02ec   2             // Target type
  WRITE_BYTE   0x02f6   1             // Timing metho
  WRITE_BYTE   0x02f7   2             // Resistance
  WRITE_ASCII  0x02fe   ~~         #8 // Resource
  WRITE_SHORT  0x031a   240           // Opcode
  WRITE_BYTE   0x031c   2             // Target type
  WRITE_LONG   0x0322   8             // Parameter 2
  WRITE_BYTE   0x0326   1             // Timing metho
  WRITE_ASCII  0x032e   ~~         #8 // Resource
  SET bytes_to_remove = SOURCE_SIZE - 0x34a
  DELETE_BYTES 0x34a    bytes_to_remove

COPY_EXISTING ~amul15.itm~ ~override/amul15.itm~
  WRITE_LONG   0x001e   0x60725e80    // Usability
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x0029   64            // Kit 1
  WRITE_BYTE   0x002a   9             // MinInt
  WRITE_LONG   0x0034   7500          // Price
  WRITE_SHORT  0x0088   6             // Dice size
  WRITE_SHORT  0x008a   0             // Dice count
  WRITE_LONG   0x00ae   10            // Parameter 1
  WRITE_ASCII  0x00be   ~SPWI114~  #8 // Resource

COPY_EXISTING ~amul21.itm~ ~override/amul21.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0070   11            // Equip count
  WRITE_SHORT  0x0072   166           // Opcode
  WRITE_LONG   0x0076   5             // Parameter 1
  WRITE_LONG   0x007a   0             // Parameter 2
  WRITE_SHORT  0x00a2   142           // Opcode
  WRITE_LONG   0x00a6   0             // Parameter 1
  WRITE_LONG   0x00aa   63            // Parameter 2
  WRITE_SHORT  0x00d2   101           // Opcode
  WRITE_LONG   0x00d6   0             // Parameter 1
  WRITE_LONG   0x00da   216           // Parameter 2
  WRITE_SHORT  0x0102   189           // Opcode
  WRITE_LONG   0x0106   1             // Parameter 1
  WRITE_BYTE   0x010e   2             // Timing metho
  WRITE_SHORT  0x0132   267           // Opcode
  WRITE_LONG   0x0136   41495         // Parameter 1
  WRITE_LONG   0x013a   0             // Parameter 2
  WRITE_SHORT  0x0162   267           // Opcode
  WRITE_LONG   0x0166   40968         // Parameter 1
  WRITE_LONG   0x016a   0             // Parameter 2
  WRITE_SHORT  0x0192   267           // Opcode
  WRITE_LONG   0x0196   40969         // Parameter 1
  WRITE_LONG   0x01c6   40979         // Parameter 1
  WRITE_LONG   0x01f6   41616         // Parameter 1
  WRITE_SHORT  0x0222   169           // Opcode
  WRITE_LONG   0x0226   0             // Parameter 1
  WRITE_LONG   0x022a   59            // Parameter 2
  WRITE_SHORT  0x0252   142           // Opcode
  WRITE_LONG   0x0256   0             // Parameter 1
  WRITE_LONG   0x025a   90            // Parameter 2
  SET bytes_to_remove = SOURCE_SIZE - 0x282
  DELETE_BYTES 0x282    bytes_to_remove
  SAY DESC     @9081

COPY_EXISTING ~antiweb.itm~ ~override/antiweb.itm~
  WRITE_LONG   0x001e   0xdfffffc0    // Usability
  WRITE_SHORT  0x0070   7             // Equip count
  WRITE_SHORT  0x0072   101           // Opcode
  WRITE_LONG   0x007a   109           // Parameter 2
  INSERT_BYTES 0x00a2   48            // new feature block
  WRITE_SHORT  0x00a2   101           // Opcode
  WRITE_BYTE   0x00a4   1             // Target type
  WRITE_BYTE   0x00a5   0             // Power
  WRITE_LONG   0x00a6   0             // Parameter 1
  WRITE_LONG   0x00aa   157           // Parameter 2
  WRITE_BYTE   0x00ae   2             // Timing metho
  WRITE_BYTE   0x00af   0             // Resistance
  WRITE_LONG   0x00b0   0             // Duration
  WRITE_BYTE   0x00b4   100           // Max. prob.
  WRITE_BYTE   0x00b5   0             // Min. prob.
  WRITE_ASCII  0x00b6   ~~         #8 // Resource
  WRITE_LONG   0x00be   0             // Min level
  WRITE_LONG   0x00c2   0             // Max level
  WRITE_LONG   0x00c6   0             // S. throw typ
  WRITE_LONG   0x00ca   0             // S. throw bon
  WRITE_LONG   0x00ce   0             // Special
  INSERT_BYTES 0x00d2   48            // new feature block
  WRITE_SHORT  0x00d2   206           // Opcode
  WRITE_BYTE   0x00d4   1             // Target type
  WRITE_BYTE   0x00d5   0             // Power
  WRITE_LONG   0x00d6   0             // Parameter 1
  WRITE_LONG   0x00da   0             // Parameter 2
  WRITE_BYTE   0x00de   2             // Timing metho
  WRITE_BYTE   0x00df   0             // Resistance
  WRITE_LONG   0x00e0   0             // Duration
  WRITE_BYTE   0x00e4   100           // Max. prob.
  WRITE_BYTE   0x00e5   0             // Min. prob.
  WRITE_ASCII  0x00e6   ~SPWI215~  #8 // Resource
  WRITE_LONG   0x00ee   0             // Min level
  WRITE_LONG   0x00f2   0             // Max level
  WRITE_LONG   0x00f6   0             // S. throw typ
  WRITE_LONG   0x00fa   0             // S. throw bon
  WRITE_LONG   0x00fe   0             // Special
  INSERT_BYTES 0x0102   48            // new feature block
  WRITE_SHORT  0x0102   206           // Opcode
  WRITE_BYTE   0x0104   1             // Target type
  WRITE_BYTE   0x0105   0             // Power
  WRITE_LONG   0x0106   0             // Parameter 1
  WRITE_LONG   0x010a   0             // Parameter 2
  WRITE_BYTE   0x010e   2             // Timing metho
  WRITE_BYTE   0x010f   0             // Resistance
  WRITE_LONG   0x0110   0             // Duration
  WRITE_BYTE   0x0114   100           // Max. prob.
  WRITE_BYTE   0x0115   0             // Min. prob.
  WRITE_ASCII  0x0116   ~SPIN683~  #8 // Resource
  WRITE_LONG   0x011e   0             // Min level
  WRITE_LONG   0x0122   0             // Max level
  WRITE_LONG   0x0126   0             // S. throw typ
  WRITE_LONG   0x012a   0             // S. throw bon
  WRITE_LONG   0x012e   0             // Special
  INSERT_BYTES 0x0132   48            // new feature block
  WRITE_SHORT  0x0132   206           // Opcode
  WRITE_BYTE   0x0134   1             // Target type
  WRITE_BYTE   0x0135   0             // Power
  WRITE_LONG   0x0136   0             // Parameter 1
  WRITE_LONG   0x013a   0             // Parameter 2
  WRITE_BYTE   0x013e   2             // Timing metho
  WRITE_BYTE   0x013f   0             // Resistance
  WRITE_LONG   0x0140   0             // Duration
  WRITE_BYTE   0x0144   100           // Max. prob.
  WRITE_BYTE   0x0145   0             // Min. prob.
  WRITE_ASCII  0x0146   ~SPDR201~  #8 // Resource
  WRITE_LONG   0x014e   0             // Min level
  WRITE_LONG   0x0152   0             // Max level
  WRITE_LONG   0x0156   0             // S. throw typ
  WRITE_LONG   0x015a   0             // S. throw bon
  WRITE_LONG   0x015e   0             // Special
  INSERT_BYTES 0x0162   48            // new feature block
  WRITE_SHORT  0x0162   206           // Opcode
  WRITE_BYTE   0x0164   1             // Target type
  WRITE_BYTE   0x0165   0             // Power
  WRITE_LONG   0x0166   0             // Parameter 1
  WRITE_LONG   0x016a   0             // Parameter 2
  WRITE_BYTE   0x016e   2             // Timing metho
  WRITE_BYTE   0x016f   0             // Resistance
  WRITE_LONG   0x0170   0             // Duration
  WRITE_BYTE   0x0174   100           // Max. prob.
  WRITE_BYTE   0x0175   0             // Min. prob.
  WRITE_ASCII  0x0176   ~SPWII22~  #8 // Resource
  WRITE_LONG   0x017e   0             // Min level
  WRITE_LONG   0x0182   0             // Max level
  WRITE_LONG   0x0186   0             // S. throw typ
  WRITE_LONG   0x018a   0             // S. throw bon
  WRITE_LONG   0x018e   0             // Special
  INSERT_BYTES 0x0192   48            // new feature block
  WRITE_SHORT  0x0192   267           // Opcode
  WRITE_BYTE   0x0194   1             // Target type
  WRITE_BYTE   0x0195   0             // Power
  WRITE_LONG   0x0196   14102         // Parameter 1
  WRITE_LONG   0x019a   0             // Parameter 2
  WRITE_BYTE   0x019e   2             // Timing metho
  WRITE_BYTE   0x019f   0             // Resistance
  WRITE_LONG   0x01a0   0             // Duration
  WRITE_BYTE   0x01a4   100           // Max. prob.
  WRITE_BYTE   0x01a5   0             // Min. prob.
  WRITE_ASCII  0x01a6   ~~         #8 // Resource
  WRITE_LONG   0x01ae   0             // Min level
  WRITE_LONG   0x01b2   0             // Max level
  WRITE_LONG   0x01b6   0             // S. throw typ
  WRITE_LONG   0x01ba   0             // S. throw bon
  WRITE_LONG   0x01be   0             // Special

COPY_EXISTING ~arow02.itm~ ~override/arow02.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   200           // Stack
  WRITE_SHORT  0x008c   1             // Dice bonus
  WRITE_SHORT  0x009c   2             // Effect anima
  SAY DESC     @270

COPY_EXISTING ~arow03.itm~ ~override/arow03.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   200           // Stack
  WRITE_SHORT  0x0086   0             // Thac0 bonus
  WRITE_SHORT  0x009c   2             // Effect anima

COPY_EXISTING ~arow04.itm~ ~override/arow04.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0034   15            // Price
  WRITE_SHORT  0x0038   200           // Stack
  WRITE_SHORT  0x0042   0             // Lore to ID
  WRITE_LONG   0x0060   0             // Magiclevel
  WRITE_SHORT  0x0086   0             // Thac0 bonus
  WRITE_SHORT  0x008c   0             // Dice bonus
  WRITE_SHORT  0x009c   2             // Effect anima
  WRITE_BYTE   0x00b7   0             // Resistance
  SAY DESC     @271

COPY_EXISTING ~arow08.itm~ ~override/arow08.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   200           // Stack
  WRITE_SHORT  0x0042   0             // Lore to ID
  WRITE_BYTE   0x00ad   6             // Power
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_LONG   0x00ce   0             // S. throw typ
  SAY DESC     @305

COPY_EXISTING ~arow09.itm~ ~override/arow09.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   200           // Stack
  WRITE_SHORT  0x0042   0             // Lore to ID
  WRITE_BYTE   0x00ad   6             // Power
  WRITE_BYTE   0x00b7   0             // Resistance

COPY_EXISTING ~arow10.itm~ ~override/arow10.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0034   80            // Price
  WRITE_SHORT  0x0038   200           // Stack
  WRITE_SHORT  0x0042   60            // Lore to ID
  WRITE_LONG   0x0060   4             // Magiclevel
  WRITE_SHORT  0x008c   4             // Dice bonus
  WRITE_SHORT  0x009c   2             // Effect anima
  SAY NAME2    @272
  SAY DESC     @273

COPY_EXISTING ~arow11.itm~ ~override/arow11.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   200           // Stack
  WRITE_SHORT  0x008c   2             // Dice bonus
  WRITE_SHORT  0x009c   2             // Effect anima
  SAY DESC     @274

COPY_EXISTING ~arow15.itm~ ~override/arow15.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   200           // Stack
  WRITE_SHORT  0x008c   3             // Dice bonus
  WRITE_SHORT  0x009c   2             // Effect anima
  SAY DESC     @275

COPY_EXISTING ~arowkc.itm~ ~override/arowkc.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   40            // Stack
  WRITE_SHORT  0x0086   0             // Thac0 bonus
  WRITE_SHORT  0x008c   0             // Dice bonus
  WRITE_LONG   0x00ca   2             // Max level
  WRITE_LONG   0x00ce   0             // S. throw typ

COPY_EXISTING ~arrophe2.itm~ ~override/arrophe2.itm~
  WRITE_SHORT  0x0038   40            // Stack
  WRITE_SHORT  0x0086   0             // Thac0 bonus
  WRITE_SHORT  0x008c   0             // Dice bonus
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_LONG   0x00ca   2             // Max level
  WRITE_LONG   0x00ce   0             // S. throw typ

COPY_EXISTING ~ax1h05.itm~ ~override/ax1h05.itm~
  WRITE_SHORT  0x009c   7             // Effect anima
  WRITE_LONG   0x00e6   30            // Parameter 1
  WRITE_LONG   0x0116   40            // Parameter 1
  WRITE_LONG   0x0146   30            // Parameter 1
  WRITE_BYTE   0x014e   0             // Timing metho

COPY_EXISTING ~ax1h06.itm~ ~override/ax1h06.itm~
  WRITE_SHORT  0x00d4   7             // Effect anima
  WRITE_LONG   0x00e6   30            // Parameter 1
  WRITE_LONG   0x0116   40            // Parameter 1
  WRITE_LONG   0x0146   30            // Parameter 1
  WRITE_BYTE   0x014e   0             // Timing metho

COPY_EXISTING ~ax1h08.itm~ ~override/ax1h08.itm~
  INSERT_BYTES 370      152           // extend file to new size
  WRITE_SHORT  0x0068   3             // Ext. count
  WRITE_LONG   0x006a   282           // Feat. offset
  WRITE_LONG   0x0098   1             // Flags
  WRITE_SHORT  0x009c   7             // Effect anima
  WRITE_BYTE   0x00e2   3             // Attacktype
  WRITE_BYTE   0x00e3   1             // Force ID
  WRITE_SHORT  0x00e4   3             // Use location
  WRITE_ASCII  0x00e6   ~IAX1H08~  #8 // Use icon
  WRITE_BYTE   0x00ee   5             // Target type
  WRITE_BYTE   0x00ef   0             // Target #
  WRITE_SHORT  0x00f0   1             // Range
  WRITE_SHORT  0x00f2   0             // Proj. type
  WRITE_SHORT  0x00f4   2             // Speed
  WRITE_SHORT  0x00f6   5             // Thac0 bonus
  WRITE_SHORT  0x00f8   8             // Dice size
  WRITE_SHORT  0x00fa   1             // Dice count
  WRITE_SHORT  0x00fc   5             // Dice bonus
  WRITE_SHORT  0x00fe   4             // Damagetype
  WRITE_SHORT  0x0100   2             // Feat. count
  WRITE_SHORT  0x0102   3             // Feat. offset
  WRITE_SHORT  0x0106   3             // Drain type
  WRITE_LONG   0x0108   256           // Flags
  WRITE_SHORT  0x010c   1             // Effect anima
  WRITE_SHORT  0x010e   0             // Melee anim 1
  WRITE_SHORT  0x0110   0             // Melee anim 2
  WRITE_SHORT  0x0112   0             // Melee anim 3
  WRITE_SHORT  0x0114   0             // Bow
  WRITE_SHORT  0x0116   0             // Crossbow
  WRITE_SHORT  0x0118   0             // Throwing
  WRITE_SHORT  0x011a   7             // Opcode
  WRITE_BYTE   0x011c   1             // Target type
  WRITE_BYTE   0x011d   0             // Power
  WRITE_LONG   0x011e   96            // Parameter 1
  WRITE_LONG   0x0122   21            // Parameter 2
  WRITE_BYTE   0x0126   2             // Timing metho
  WRITE_LONG   0x0128   0             // Duration
  WRITE_BYTE   0x012c   100           // Max. prob.
  WRITE_BYTE   0x012d   0             // Min. prob.
  WRITE_ASCII  0x012e   ~~         #8 // Resource
  WRITE_LONG   0x0136   0             // Min level
  WRITE_LONG   0x013a   0             // Max level
  WRITE_LONG   0x013e   0             // S. throw typ
  WRITE_LONG   0x0142   0             // S. throw bon
  WRITE_LONG   0x0146   0             // Special
  WRITE_SHORT  0x014a   7             // Opcode
  WRITE_BYTE   0x014c   1             // Target type
  WRITE_BYTE   0x014d   0             // Power
  WRITE_LONG   0x014e   23            // Parameter 1
  WRITE_LONG   0x0152   20            // Parameter 2
  WRITE_BYTE   0x0156   2             // Timing metho
  WRITE_BYTE   0x0157   0             // Resistance
  WRITE_LONG   0x0158   0             // Duration
  WRITE_BYTE   0x015c   100           // Max. prob.
  WRITE_BYTE   0x015d   0             // Min. prob.
  WRITE_ASCII  0x015e   ~~         #8 // Resource
  WRITE_LONG   0x0166   0             // Min level
  WRITE_LONG   0x016a   0             // Max level
  WRITE_LONG   0x016e   0             // S. throw typ
  WRITE_LONG   0x0172   0             // S. throw bon
  WRITE_LONG   0x0176   0             // Special
  WRITE_SHORT  0x017a   7             // Opcode
  WRITE_BYTE   0x017c   1             // Target type
  WRITE_BYTE   0x017d   0             // Power
  WRITE_LONG   0x017e   96            // Parameter 1
  WRITE_LONG   0x0182   16            // Parameter 2
  WRITE_BYTE   0x0186   0             // Timing metho
  WRITE_BYTE   0x0187   0             // Resistance
  WRITE_LONG   0x0188   0             // Duration
  WRITE_BYTE   0x018c   100           // Max. prob.
  WRITE_BYTE   0x018d   0             // Min. prob.
  WRITE_ASCII  0x018e   ~~         #8 // Resource
  WRITE_LONG   0x0196   0             // Min level
  WRITE_LONG   0x019a   0             // Max level
  WRITE_LONG   0x019e   0             // S. throw typ
  WRITE_LONG   0x01a2   0             // S. throw bon
  WRITE_LONG   0x01a6   0             // Special
  WRITE_SHORT  0x01aa   123           // Opcode
  WRITE_BYTE   0x01ac   1             // Target type
  WRITE_BYTE   0x01ad   0             // Power
  WRITE_LONG   0x01ae   0             // Parameter 1
  WRITE_LONG   0x01b2   0             // Parameter 2
  WRITE_BYTE   0x01b6   1             // Timing metho
  WRITE_BYTE   0x01b7   0             // Resistance
  WRITE_LONG   0x01b8   0             // Duration
  WRITE_BYTE   0x01bc   100           // Max. prob.
  WRITE_BYTE   0x01bd   0             // Min. prob.
  WRITE_ASCII  0x01be   ~AX1H08~   #8 // Resource
  WRITE_LONG   0x01c6   0             // Min level
  WRITE_LONG   0x01ca   0             // Max level
  WRITE_LONG   0x01ce   0             // S. throw typ
  WRITE_LONG   0x01d2   0             // S. throw bon
  WRITE_LONG   0x01d6   0             // Special
  WRITE_SHORT  0x01da   122           // Opcode
  WRITE_BYTE   0x01dc   1             // Target type
  WRITE_BYTE   0x01dd   0             // Power
  WRITE_LONG   0x01de   0             // Parameter 1
  WRITE_LONG   0x01e2   0             // Parameter 2
  WRITE_BYTE   0x01e6   1             // Timing metho
  WRITE_BYTE   0x01e7   0             // Resistance
  WRITE_LONG   0x01e8   0             // Duration
  WRITE_BYTE   0x01ec   100           // Max. prob.
  WRITE_BYTE   0x01ed   0             // Min. prob.
  WRITE_ASCII  0x01ee   ~AX1H08M~  #8 // Resource
  WRITE_LONG   0x01f6   0             // Min level
  WRITE_LONG   0x01fa   0             // Max level
  WRITE_LONG   0x01fe   0             // S. throw typ
  WRITE_LONG   0x0202   0             // S. throw bon
  WRITE_LONG   0x0206   0             // Special

COPY_EXISTING ~ax1h09.itm~ ~override/ax1h09.itm~
  INSERT_BYTES 370      152           // extend file to new size
  WRITE_SHORT  0x0068   3             // Ext. count
  WRITE_LONG   0x006a   282           // Feat. offset
  WRITE_LONG   0x0098   1             // Flags
  WRITE_SHORT  0x009c   7             // Effect anima
  WRITE_BYTE   0x00e2   3             // Attacktype
  WRITE_BYTE   0x00e3   1             // Force ID
  WRITE_SHORT  0x00e4   3             // Use location
  WRITE_ASCII  0x00e6   ~IAX1H09~  #8 // Use icon
  WRITE_BYTE   0x00ee   5             // Target type
  WRITE_BYTE   0x00ef   0             // Target #
  WRITE_SHORT  0x00f0   1             // Range
  WRITE_SHORT  0x00f2   0             // Proj. type
  WRITE_SHORT  0x00f4   2             // Speed
  WRITE_SHORT  0x00f6   5             // Thac0 bonus
  WRITE_SHORT  0x00f8   8             // Dice size
  WRITE_SHORT  0x00fa   1             // Dice count
  WRITE_SHORT  0x00fc   5             // Dice bonus
  WRITE_SHORT  0x00fe   4             // Damagetype
  WRITE_SHORT  0x0100   2             // Feat. count
  WRITE_SHORT  0x0102   3             // Feat. offset
  WRITE_SHORT  0x0106   3             // Drain type
  WRITE_LONG   0x0108   256           // Flags
  WRITE_SHORT  0x010c   1             // Effect anima
  WRITE_SHORT  0x010e   0             // Melee anim 1
  WRITE_SHORT  0x0110   0             // Melee anim 2
  WRITE_SHORT  0x0112   0             // Melee anim 3
  WRITE_SHORT  0x0114   0             // Bow
  WRITE_SHORT  0x0116   0             // Crossbow
  WRITE_SHORT  0x0118   0             // Throwing
  WRITE_SHORT  0x011a   7             // Opcode
  WRITE_BYTE   0x011c   1             // Target type
  WRITE_BYTE   0x011d   0             // Power
  WRITE_LONG   0x011e   96            // Parameter 1
  WRITE_LONG   0x0122   21            // Parameter 2
  WRITE_BYTE   0x0126   2             // Timing metho
  WRITE_LONG   0x0128   0             // Duration
  WRITE_BYTE   0x012c   100           // Max. prob.
  WRITE_BYTE   0x012d   0             // Min. prob.
  WRITE_ASCII  0x012e   ~~         #8 // Resource
  WRITE_LONG   0x0136   0             // Min level
  WRITE_LONG   0x013a   0             // Max level
  WRITE_LONG   0x013e   0             // S. throw typ
  WRITE_LONG   0x0142   0             // S. throw bon
  WRITE_LONG   0x0146   0             // Special
  WRITE_SHORT  0x014a   7             // Opcode
  WRITE_BYTE   0x014c   1             // Target type
  WRITE_BYTE   0x014d   0             // Power
  WRITE_LONG   0x014e   96            // Parameter 1
  WRITE_LONG   0x0152   20            // Parameter 2
  WRITE_BYTE   0x0156   2             // Timing metho
  WRITE_BYTE   0x0157   0             // Resistance
  WRITE_LONG   0x0158   0             // Duration
  WRITE_BYTE   0x015c   100           // Max. prob.
  WRITE_BYTE   0x015d   0             // Min. prob.
  WRITE_ASCII  0x015e   ~~         #8 // Resource
  WRITE_LONG   0x0166   0             // Min level
  WRITE_LONG   0x016a   0             // Max level
  WRITE_LONG   0x016e   0             // S. throw typ
  WRITE_LONG   0x0172   0             // S. throw bon
  WRITE_LONG   0x0176   0             // Special
  WRITE_SHORT  0x017a   7             // Opcode
  WRITE_BYTE   0x017c   1             // Target type
  WRITE_BYTE   0x017d   0             // Power
  WRITE_LONG   0x017e   96            // Parameter 1
  WRITE_LONG   0x0182   16            // Parameter 2
  WRITE_BYTE   0x0186   2             // Timing metho
  WRITE_BYTE   0x0187   0             // Resistance
  WRITE_LONG   0x0188   0             // Duration
  WRITE_BYTE   0x018c   100           // Max. prob.
  WRITE_BYTE   0x018d   0             // Min. prob.
  WRITE_ASCII  0x018e   ~~         #8 // Resource
  WRITE_LONG   0x0196   0             // Min level
  WRITE_LONG   0x019a   0             // Max level
  WRITE_LONG   0x019e   0             // S. throw typ
  WRITE_LONG   0x01a2   0             // S. throw bon
  WRITE_LONG   0x01a6   0             // Special
  WRITE_SHORT  0x01aa   123           // Opcode
  WRITE_BYTE   0x01ac   1             // Target type
  WRITE_BYTE   0x01ad   0             // Power
  WRITE_LONG   0x01ae   0             // Parameter 1
  WRITE_LONG   0x01b2   0             // Parameter 2
  WRITE_BYTE   0x01b6   1             // Timing metho
  WRITE_BYTE   0x01b7   0             // Resistance
  WRITE_LONG   0x01b8   0             // Duration
  WRITE_BYTE   0x01bc   100           // Max. prob.
  WRITE_BYTE   0x01bd   0             // Min. prob.
  WRITE_ASCII  0x01be   ~AX1H09~   #8 // Resource
  WRITE_LONG   0x01c6   0             // Min level
  WRITE_LONG   0x01ca   0             // Max level
  WRITE_LONG   0x01ce   0             // S. throw typ
  WRITE_LONG   0x01d2   0             // S. throw bon
  WRITE_LONG   0x01d6   0             // Special
  WRITE_SHORT  0x01da   122           // Opcode
  WRITE_BYTE   0x01dc   1             // Target type
  WRITE_BYTE   0x01dd   0             // Power
  WRITE_LONG   0x01de   0             // Parameter 1
  WRITE_LONG   0x01e2   0             // Parameter 2
  WRITE_BYTE   0x01e6   1             // Timing metho
  WRITE_BYTE   0x01e7   0             // Resistance
  WRITE_LONG   0x01e8   0             // Duration
  WRITE_BYTE   0x01ec   100           // Max. prob.
  WRITE_BYTE   0x01ed   0             // Min. prob.
  WRITE_ASCII  0x01ee   ~AX1H09M~  #8 // Resource
  WRITE_LONG   0x01f6   0             // Min level
  WRITE_LONG   0x01fa   0             // Max level
  WRITE_LONG   0x01fe   0             // S. throw typ
  WRITE_LONG   0x0202   0             // S. throw bon
  WRITE_LONG   0x0206   0             // Special

COPY_EXISTING ~ax1h12.itm~ ~override/ax1h12.itm~
  WRITE_LONG   0x0034   10000         // Price
  WRITE_LONG   0x00ae   72            // Parameter 1
  WRITE_LONG   0x00de   72            // Parameter 1
  WRITE_LONG   0x010e   72            // Parameter 1
  WRITE_LONG   0x013e   10            // Parameter 1
  WRITE_BYTE   0x014c   10            // Max. prob.

COPY_EXISTING ~ax1h13.itm~ ~override/ax1h13.itm~
  WRITE_LONG   0x0034   10000         // Price
  WRITE_SHORT  0x0070   6             // Equip count
  WRITE_SHORT  0x0092   6             // Feat. offset
  WRITE_LONG   0x00ae   96            // Parameter 1
  WRITE_LONG   0x00de   96            // Parameter 1
  WRITE_LONG   0x010e   96            // Parameter 1
  WRITE_SHORT  0x013a   9             // Opcode
  WRITE_LONG   0x013e   "-39911424"    // Parameter 1
  WRITE_LONG   0x0142   1966101       // Parameter 2
  WRITE_SHORT  0x016a   9             // Opcode
  WRITE_LONG   0x016e   "-39911424"    // Parameter 1
  WRITE_LONG   0x0172   1966100       // Parameter 2
  WRITE_SHORT  0x019a   9             // Opcode
  WRITE_BYTE   0x019c   1             // Target type
  WRITE_LONG   0x019e   "-39911424"    // Parameter 1
  WRITE_LONG   0x01a2   1966096       // Parameter 2
  WRITE_BYTE   0x01a6   2             // Timing metho
  WRITE_LONG   0x01ba   0             // Max level
  WRITE_LONG   0x01ce   10            // Parameter 1
  WRITE_LONG   0x01d2   131072        // Parameter 2
  WRITE_BYTE   0x01dc   5             // Max. prob.
  INSERT_BYTES 0x01fa   48            // new feature block
  WRITE_SHORT  0x01fa   12            // Opcode
  WRITE_BYTE   0x01fc   2             // Target type
  WRITE_BYTE   0x01fd   0             // Power
  WRITE_LONG   0x01fe   10            // Parameter 1
  WRITE_LONG   0x0202   65536         // Parameter 2
  WRITE_BYTE   0x0206   1             // Timing metho
  WRITE_BYTE   0x0207   0             // Resistance
  WRITE_LONG   0x0208   0             // Duration
  WRITE_BYTE   0x020c   15            // Max. prob.
  WRITE_BYTE   0x020d   10            // Min. prob.
  WRITE_ASCII  0x020e   ~~         #8 // Resource
  WRITE_LONG   0x0216   0             // Min level
  WRITE_LONG   0x021a   6             // Max level
  WRITE_LONG   0x021e   0             // S. throw typ
  WRITE_LONG   0x0222   0             // S. throw bon
  WRITE_LONG   0x0226   0             // Special

COPY_EXISTING ~ax1h15.itm~ ~override/ax1h15.itm~
  WRITE_SHORT  0x0090   2             // Feat. count
  WRITE_LONG   0x00ae   30            // Parameter 1
  WRITE_LONG   0x00de   99            // Parameter 1
  WRITE_LONG   0x010e   29            // Parameter 1
  WRITE_LONG   0x013e   "-39911424"    // Parameter 1
  WRITE_LONG   0x0142   1966101       // Parameter 2
  WRITE_LONG   0x016e   "-39911424"    // Parameter 1
  WRITE_LONG   0x0172   1966100       // Parameter 2
  WRITE_LONG   0x019e   "-39911424"    // Parameter 1
  WRITE_BYTE   0x0207   0             // Resistance
  WRITE_BYTE   0x0237   0             // Resistance
  WRITE_SHORT  0x025a   18            // Opcode
  WRITE_LONG   0x025e   10            // Parameter 1
  WRITE_LONG   0x0262   3             // Parameter 2
  WRITE_BYTE   0x0267   0             // Resistance
  WRITE_BYTE   0x0296   1             // Timing metho
  WRITE_LONG   0x02b2   "-2"          // S. throw bon
  WRITE_SHORT  0x02ba   13            // Opcode
  WRITE_LONG   0x02c2   8             // Parameter 2
  WRITE_LONG   0x02e2   "-2"          // S. throw bon
  SET bytes_to_remove = SOURCE_SIZE - 0x2ea
  DELETE_BYTES 0x2ea    bytes_to_remove
  SAY DESC     @9003

COPY_EXISTING ~ax1h16.itm~ ~override/ax1h16.itm~
  INSERT_BYTES 658      56            // extend file to new size
  WRITE_LONG   0x0054   108606        // ID desc
  WRITE_SHORT  0x0068   3             // Ext. count
  WRITE_LONG   0x006a   282           // Feat. offset
  WRITE_BYTE   0x0072   1             // Attacktype
  WRITE_SHORT  0x0080   1             // Range
  WRITE_SHORT  0x008e   3             // Damagetype
  WRITE_SHORT  0x0090   2             // Feat. count
  WRITE_LONG   0x0098   1             // Flags
  WRITE_SHORT  0x009c   10            // Effect anima
  WRITE_SHORT  0x009e   50            // Melee anim 1
  WRITE_SHORT  0x00a0   50            // Melee anim 2
  WRITE_BYTE   0x00aa   2             // Attacktype
  WRITE_SHORT  0x00b8   20            // Range
  WRITE_SHORT  0x00c6   4             // Damagetype
  WRITE_SHORT  0x00c8   2             // Feat. count
  WRITE_SHORT  0x00ca   5             // Feat. offset
  WRITE_SHORT  0x00d4   7             // Effect anima
  WRITE_SHORT  0x00d6   100           // Melee anim 1
  WRITE_SHORT  0x00d8   0             // Melee anim 2
  WRITE_BYTE   0x00e2   3             // Attacktype
  WRITE_BYTE   0x00e3   1             // Force ID
  WRITE_SHORT  0x00e4   3             // Use location
  WRITE_ASCII  0x00e6   ~IAX1H16~  #8 // Use icon
  WRITE_BYTE   0x00ee   5             // Target type
  WRITE_BYTE   0x00ef   0             // Target #
  WRITE_SHORT  0x00f0   1             // Range
  WRITE_SHORT  0x00f2   0             // Proj. type
  WRITE_SHORT  0x00f4   2             // Speed
  WRITE_SHORT  0x00f6   5             // Thac0 bonus
  WRITE_SHORT  0x00f8   8             // Dice size
  WRITE_SHORT  0x00fa   1             // Dice count
  WRITE_SHORT  0x00fc   5             // Dice bonus
  WRITE_SHORT  0x00fe   4             // Damagetype
  WRITE_SHORT  0x0100   2             // Feat. count
  WRITE_SHORT  0x0102   7             // Feat. offset
  WRITE_SHORT  0x0106   3             // Drain type
  WRITE_LONG   0x0108   256           // Flags
  WRITE_SHORT  0x010c   1             // Effect anima
  WRITE_SHORT  0x010e   0             // Melee anim 1
  WRITE_SHORT  0x0110   0             // Melee anim 2
  WRITE_SHORT  0x0112   0             // Melee anim 3
  WRITE_SHORT  0x0114   0             // Bow
  WRITE_SHORT  0x0116   0             // Crossbow
  WRITE_SHORT  0x0118   0             // Throwing
  WRITE_SHORT  0x011a   7             // Opcode
  WRITE_BYTE   0x011c   1             // Target type
  WRITE_BYTE   0x011d   0             // Power
  WRITE_LONG   0x011e   27            // Parameter 1
  WRITE_LONG   0x0122   21            // Parameter 2
  WRITE_BYTE   0x0126   2             // Timing metho
  WRITE_LONG   0x0128   0             // Duration
  WRITE_BYTE   0x012c   100           // Max. prob.
  WRITE_BYTE   0x012d   0             // Min. prob.
  WRITE_ASCII  0x012e   ~~         #8 // Resource
  WRITE_LONG   0x0136   0             // Min level
  WRITE_LONG   0x013a   0             // Max level
  WRITE_LONG   0x013e   0             // S. throw typ
  WRITE_LONG   0x0142   0             // S. throw bon
  WRITE_LONG   0x0146   0             // Special
  WRITE_SHORT  0x014a   7             // Opcode
  WRITE_BYTE   0x014c   1             // Target type
  WRITE_BYTE   0x014d   0             // Power
  WRITE_LONG   0x014e   95            // Parameter 1
  WRITE_LONG   0x0152   20            // Parameter 2
  WRITE_BYTE   0x0156   2             // Timing metho
  WRITE_LONG   0x0158   0             // Duration
  WRITE_BYTE   0x015c   100           // Max. prob.
  WRITE_BYTE   0x015d   0             // Min. prob.
  WRITE_ASCII  0x015e   ~~         #8 // Resource
  WRITE_LONG   0x0166   0             // Min level
  WRITE_LONG   0x016a   0             // Max level
  WRITE_LONG   0x016e   0             // S. throw typ
  WRITE_LONG   0x0172   0             // S. throw bon
  WRITE_LONG   0x0176   0             // Special
  WRITE_SHORT  0x017a   7             // Opcode
  WRITE_BYTE   0x017c   1             // Target type
  WRITE_BYTE   0x017d   0             // Power
  WRITE_LONG   0x017e   29            // Parameter 1
  WRITE_LONG   0x0182   16            // Parameter 2
  WRITE_BYTE   0x0186   2             // Timing metho
  WRITE_LONG   0x0188   0             // Duration
  WRITE_BYTE   0x018c   100           // Max. prob.
  WRITE_BYTE   0x018d   0             // Min. prob.
  WRITE_ASCII  0x018e   ~~         #8 // Resource
  WRITE_LONG   0x0196   0             // Min level
  WRITE_LONG   0x019a   0             // Max level
  WRITE_LONG   0x019e   0             // S. throw typ
  WRITE_LONG   0x01a2   0             // S. throw bon
  WRITE_LONG   0x01a6   0             // Special
  WRITE_SHORT  0x01aa   12            // Opcode
  WRITE_BYTE   0x01ac   2             // Target type
  WRITE_BYTE   0x01ad   0             // Power
  WRITE_LONG   0x01ae   0             // Parameter 1
  WRITE_LONG   0x01b2   0             // Parameter 2
  WRITE_BYTE   0x01b6   1             // Timing metho
  WRITE_LONG   0x01b8   0             // Duration
  WRITE_BYTE   0x01bc   100           // Max. prob.
  WRITE_BYTE   0x01bd   0             // Min. prob.
  WRITE_ASCII  0x01be   ~~         #8 // Resource
  WRITE_LONG   0x01c6   1             // Min level
  WRITE_LONG   0x01ca   6             // Max level
  WRITE_LONG   0x01ce   4             // S. throw typ
  WRITE_LONG   0x01d2   0             // S. throw bon
  WRITE_LONG   0x01d6   0             // Special
  WRITE_SHORT  0x01da   39            // Opcode
  WRITE_BYTE   0x01dc   2             // Target type
  WRITE_BYTE   0x01dd   0             // Power
  WRITE_LONG   0x01de   0             // Parameter 1
  WRITE_LONG   0x01e2   0             // Parameter 2
  WRITE_BYTE   0x01e6   0             // Timing metho
  WRITE_LONG   0x01e8   3             // Duration
  WRITE_BYTE   0x01ec   100           // Max. prob.
  WRITE_BYTE   0x01ed   0             // Min. prob.
  WRITE_ASCII  0x01ee   ~~         #8 // Resource
  WRITE_LONG   0x01f6   0             // Min level
  WRITE_LONG   0x01fa   0             // Max level
  WRITE_LONG   0x01fe   4             // S. throw typ
  WRITE_LONG   0x0202   0             // S. throw bon
  WRITE_LONG   0x0206   0             // Special
  WRITE_SHORT  0x020a   12            // Opcode
  WRITE_BYTE   0x020c   2             // Target type
  WRITE_BYTE   0x020d   0             // Power
  WRITE_LONG   0x020e   0             // Parameter 1
  WRITE_LONG   0x0212   0             // Parameter 2
  WRITE_BYTE   0x0216   1             // Timing metho
  WRITE_LONG   0x0218   0             // Duration
  WRITE_BYTE   0x021c   100           // Max. prob.
  WRITE_BYTE   0x021d   0             // Min. prob.
  WRITE_ASCII  0x021e   ~~         #8 // Resource
  WRITE_LONG   0x0226   1             // Min level
  WRITE_LONG   0x022a   6             // Max level
  WRITE_LONG   0x022e   4             // S. throw typ
  WRITE_LONG   0x0232   0             // S. throw bon
  WRITE_LONG   0x0236   0             // Special
  WRITE_SHORT  0x023a   39            // Opcode
  WRITE_BYTE   0x023c   2             // Target type
  WRITE_BYTE   0x023d   0             // Power
  WRITE_LONG   0x023e   0             // Parameter 1
  WRITE_LONG   0x0242   0             // Parameter 2
  WRITE_BYTE   0x0246   0             // Timing metho
  WRITE_LONG   0x0248   3             // Duration
  WRITE_BYTE   0x024c   100           // Max. prob.
  WRITE_BYTE   0x024d   0             // Min. prob.
  WRITE_ASCII  0x024e   ~~         #8 // Resource
  WRITE_LONG   0x0256   0             // Min level
  WRITE_LONG   0x025a   0             // Max level
  WRITE_LONG   0x025e   4             // S. throw typ
  WRITE_LONG   0x0262   0             // S. throw bon
  WRITE_LONG   0x0266   0             // Special
  WRITE_SHORT  0x026a   123           // Opcode
  WRITE_BYTE   0x026c   1             // Target type
  WRITE_BYTE   0x026d   0             // Power
  WRITE_LONG   0x026e   0             // Parameter 1
  WRITE_LONG   0x0272   0             // Parameter 2
  WRITE_BYTE   0x0276   1             // Timing metho
  WRITE_BYTE   0x0277   0             // Resistance
  WRITE_LONG   0x0278   0             // Duration
  WRITE_BYTE   0x027c   100           // Max. prob.
  WRITE_BYTE   0x027d   0             // Min. prob.
  WRITE_ASCII  0x027e   ~AX1H16~   #8 // Resource
  WRITE_LONG   0x0286   0             // Min level
  WRITE_LONG   0x028a   0             // Max level
  WRITE_LONG   0x028e   0             // S. throw typ
  WRITE_LONG   0x0292   0             // S. throw bon
  WRITE_LONG   0x0296   0             // Special
  WRITE_SHORT  0x029a   122           // Opcode
  WRITE_BYTE   0x029c   1             // Target type
  WRITE_BYTE   0x029d   0             // Power
  WRITE_LONG   0x029e   0             // Parameter 1
  WRITE_LONG   0x02a2   0             // Parameter 2
  WRITE_BYTE   0x02a6   1             // Timing metho
  WRITE_BYTE   0x02a7   0             // Resistance
  WRITE_LONG   0x02a8   0             // Duration
  WRITE_BYTE   0x02ac   100           // Max. prob.
  WRITE_BYTE   0x02ad   0             // Min. prob.
  WRITE_ASCII  0x02ae   ~AX1H16M~  #8 // Resource
  WRITE_LONG   0x02b6   0             // Min level
  WRITE_LONG   0x02ba   0             // Max level
  WRITE_LONG   0x02be   0             // S. throw typ
  WRITE_LONG   0x02c2   0             // S. throw bon
  WRITE_LONG   0x02c6   0             // Special
  SAY NAME2    @10271
  SAY DESC     @10270

  WRITE_BYTE   0x1b7    2             // Resistance
  WRITE_BYTE   0x1e7    2             // Resistance
  WRITE_BYTE   0x217    2             // Resistance
  WRITE_BYTE   0x247    2             // Resistance

COPY_EXISTING ~bearspir.itm~ ~override/bearspir.itm~
  WRITE_SHORT  0x008e   2             // Damagetype
  WRITE_SHORT  0x0090   0             // Feat. count
  DELETE_BYTES 0x10a    48

COPY_EXISTING ~behold.itm~ ~override/behold.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0070   15            // Equip count
  WRITE_SHORT  0x0086   3             // Thac0 bonus
  WRITE_SHORT  0x008e   2             // Damagetype
  WRITE_SHORT  0x0092   15            // Feat. offset
  INSERT_BYTES 0x00aa   48            // new feature block
  WRITE_SHORT  0x00aa   206           // Opcode
  WRITE_BYTE   0x00ac   1             // Target type
  WRITE_BYTE   0x00ad   0             // Power
  WRITE_LONG   0x00ae   0             // Parameter 1
  WRITE_LONG   0x00b2   0             // Parameter 2
  WRITE_BYTE   0x00b6   2             // Timing metho
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_LONG   0x00b8   0             // Duration
  WRITE_BYTE   0x00bc   100           // Max. prob.
  WRITE_BYTE   0x00bd   0             // Min. prob.
  WRITE_ASCII  0x00be   ~SPWI224~  #8 // Resource
  WRITE_LONG   0x00c6   0             // Min level
  WRITE_LONG   0x00ca   0             // Max level
  WRITE_LONG   0x00ce   0             // S. throw typ
  WRITE_LONG   0x00d2   0             // S. throw bon
  WRITE_LONG   0x00d6   0             // Special
  INSERT_BYTES 0x00da   48            // new feature block
  WRITE_SHORT  0x00da   206           // Opcode
  WRITE_BYTE   0x00dc   1             // Target type
  WRITE_BYTE   0x00dd   0             // Power
  WRITE_LONG   0x00de   0             // Parameter 1
  WRITE_LONG   0x00e2   0             // Parameter 2
  WRITE_BYTE   0x00e6   2             // Timing metho
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_LONG   0x00e8   0             // Duration
  WRITE_BYTE   0x00ec   100           // Max. prob.
  WRITE_BYTE   0x00ed   0             // Min. prob.
  WRITE_ASCII  0x00ee   ~SPWI215~  #8 // Resource
  WRITE_LONG   0x00f6   0             // Min level
  WRITE_LONG   0x00fa   0             // Max level
  WRITE_LONG   0x00fe   0             // S. throw typ
  WRITE_LONG   0x0102   0             // S. throw bon
  WRITE_LONG   0x0106   0             // Special
  INSERT_BYTES 0x010a   48            // new feature block
  WRITE_SHORT  0x010a   206           // Opcode
  WRITE_BYTE   0x010c   1             // Target type
  WRITE_BYTE   0x010d   0             // Power
  WRITE_LONG   0x010e   0             // Parameter 1
  WRITE_LONG   0x0112   0             // Parameter 2
  WRITE_BYTE   0x0116   2             // Timing metho
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_LONG   0x0118   0             // Duration
  WRITE_BYTE   0x011c   100           // Max. prob.
  WRITE_BYTE   0x011d   0             // Min. prob.
  WRITE_ASCII  0x011e   ~SPWI415~  #8 // Resource
  WRITE_LONG   0x0126   0             // Min level
  WRITE_LONG   0x012a   0             // Max level
  WRITE_LONG   0x012e   0             // S. throw typ
  WRITE_LONG   0x0132   0             // S. throw bon
  WRITE_LONG   0x0136   0             // Special
  INSERT_BYTES 0x013a   48            // new feature block
  WRITE_SHORT  0x013a   206           // Opcode
  WRITE_BYTE   0x013c   1             // Target type
  WRITE_BYTE   0x013d   0             // Power
  WRITE_LONG   0x013e   0             // Parameter 1
  WRITE_LONG   0x0142   0             // Parameter 2
  WRITE_BYTE   0x0146   2             // Timing metho
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_LONG   0x0148   0             // Duration
  WRITE_BYTE   0x014c   100           // Max. prob.
  WRITE_BYTE   0x014d   0             // Min. prob.
  WRITE_ASCII  0x014e   ~SPWI811~  #8 // Resource
  WRITE_LONG   0x0156   0             // Min level
  WRITE_LONG   0x015a   0             // Max level
  WRITE_LONG   0x015e   0             // S. throw typ
  WRITE_LONG   0x0162   0             // S. throw bon
  WRITE_LONG   0x0166   0             // Special
  INSERT_BYTES 0x016a   48            // new feature block
  WRITE_SHORT  0x016a   206           // Opcode
  WRITE_BYTE   0x016c   1             // Target type
  WRITE_BYTE   0x016d   0             // Power
  WRITE_LONG   0x016e   0             // Parameter 1
  WRITE_LONG   0x0172   0             // Parameter 2
  WRITE_BYTE   0x0176   2             // Timing metho
  WRITE_BYTE   0x0177   0             // Resistance
  WRITE_LONG   0x0178   0             // Duration
  WRITE_BYTE   0x017c   100           // Max. prob.
  WRITE_BYTE   0x017d   0             // Min. prob.
  WRITE_ASCII  0x017e   ~SPWI816~  #8 // Resource
  WRITE_LONG   0x0186   0             // Min level
  WRITE_LONG   0x018a   0             // Max level
  WRITE_LONG   0x018e   0             // S. throw typ
  WRITE_LONG   0x0192   0             // S. throw bon
  WRITE_LONG   0x0196   0             // Special
  INSERT_BYTES 0x019a   48            // new feature block
  WRITE_SHORT  0x019a   206           // Opcode
  WRITE_BYTE   0x019c   1             // Target type
  WRITE_BYTE   0x019d   0             // Power
  WRITE_LONG   0x019e   0             // Parameter 1
  WRITE_LONG   0x01a2   0             // Parameter 2
  WRITE_BYTE   0x01a6   2             // Timing metho
  WRITE_BYTE   0x01a7   0             // Resistance
  WRITE_LONG   0x01a8   0             // Duration
  WRITE_BYTE   0x01ac   100           // Max. prob.
  WRITE_BYTE   0x01ad   0             // Min. prob.
  WRITE_ASCII  0x01ae   ~SPWI817~  #8 // Resource
  WRITE_LONG   0x01b6   0             // Min level
  WRITE_LONG   0x01ba   0             // Max level
  WRITE_LONG   0x01be   0             // S. throw typ
  WRITE_LONG   0x01c2   0             // S. throw bon
  WRITE_LONG   0x01c6   0             // Special
  INSERT_BYTES 0x01ca   48            // new feature block
  WRITE_SHORT  0x01ca   206           // Opcode
  WRITE_BYTE   0x01cc   1             // Target type
  WRITE_BYTE   0x01cd   0             // Power
  WRITE_LONG   0x01ce   0             // Parameter 1
  WRITE_LONG   0x01d2   0             // Parameter 2
  WRITE_BYTE   0x01d6   2             // Timing metho
  WRITE_BYTE   0x01d7   0             // Resistance
  WRITE_LONG   0x01d8   0             // Duration
  WRITE_BYTE   0x01dc   100           // Max. prob.
  WRITE_BYTE   0x01dd   0             // Min. prob.
  WRITE_ASCII  0x01de   ~SPIN986~  #8 // Resource
  WRITE_LONG   0x01e6   0             // Min level
  WRITE_LONG   0x01ea   0             // Max level
  WRITE_LONG   0x01ee   0             // S. throw typ
  WRITE_LONG   0x01f2   0             // S. throw bon
  WRITE_LONG   0x01f6   0             // Special
  INSERT_BYTES 0x01fa   48            // new feature block
  WRITE_SHORT  0x01fa   206           // Opcode
  WRITE_BYTE   0x01fc   1             // Target type
  WRITE_BYTE   0x01fd   0             // Power
  WRITE_LONG   0x01fe   0             // Parameter 1
  WRITE_LONG   0x0202   0             // Parameter 2
  WRITE_BYTE   0x0206   2             // Timing metho
  WRITE_BYTE   0x0207   0             // Resistance
  WRITE_LONG   0x0208   0             // Duration
  WRITE_BYTE   0x020c   100           // Max. prob.
  WRITE_BYTE   0x020d   0             // Min. prob.
  WRITE_ASCII  0x020e   ~SPIN989~  #8 // Resource
  WRITE_LONG   0x0216   0             // Min level
  WRITE_LONG   0x021a   0             // Max level
  WRITE_LONG   0x021e   0             // S. throw typ
  WRITE_LONG   0x0222   0             // S. throw bon
  WRITE_LONG   0x0226   0             // Special
  INSERT_BYTES 0x022a   48            // new feature block
  WRITE_SHORT  0x022a   206           // Opcode
  WRITE_BYTE   0x022c   1             // Target type
  WRITE_BYTE   0x022d   0             // Power
  WRITE_LONG   0x022e   0             // Parameter 1
  WRITE_LONG   0x0232   0             // Parameter 2
  WRITE_BYTE   0x0236   2             // Timing metho
  WRITE_BYTE   0x0237   0             // Resistance
  WRITE_LONG   0x0238   0             // Duration
  WRITE_BYTE   0x023c   100           // Max. prob.
  WRITE_BYTE   0x023d   0             // Min. prob.
  WRITE_ASCII  0x023e   ~SPIN990~  #8 // Resource
  WRITE_LONG   0x0246   0             // Min level
  WRITE_LONG   0x024a   0             // Max level
  WRITE_LONG   0x024e   0             // S. throw typ
  WRITE_LONG   0x0252   0             // S. throw bon
  WRITE_LONG   0x0256   0             // Special
  INSERT_BYTES 0x025a   48            // new feature block
  WRITE_SHORT  0x025a   101           // Opcode
  WRITE_BYTE   0x025c   1             // Target type
  WRITE_BYTE   0x025d   0             // Power
  WRITE_LONG   0x025e   0             // Parameter 1
  WRITE_LONG   0x0262   24            // Parameter 2
  WRITE_BYTE   0x0266   2             // Timing metho
  WRITE_BYTE   0x0267   0             // Resistance
  WRITE_LONG   0x0268   0             // Duration
  WRITE_BYTE   0x026c   100           // Max. prob.
  WRITE_BYTE   0x026d   0             // Min. prob.
  WRITE_ASCII  0x026e   ~~         #8 // Resource
  WRITE_LONG   0x0276   0             // Min level
  WRITE_LONG   0x027a   0             // Max level
  WRITE_LONG   0x027e   0             // S. throw typ
  WRITE_LONG   0x0282   0             // S. throw bon
  WRITE_LONG   0x0286   0             // Special
  INSERT_BYTES 0x028a   48            // new feature block
  WRITE_SHORT  0x028a   101           // Opcode
  WRITE_BYTE   0x028c   1             // Target type
  WRITE_BYTE   0x028d   0             // Power
  WRITE_LONG   0x028e   0             // Parameter 1
  WRITE_LONG   0x0292   38            // Parameter 2
  WRITE_BYTE   0x0296   2             // Timing metho
  WRITE_BYTE   0x0297   0             // Resistance
  WRITE_LONG   0x0298   0             // Duration
  WRITE_BYTE   0x029c   100           // Max. prob.
  WRITE_BYTE   0x029d   0             // Min. prob.
  WRITE_ASCII  0x029e   ~~         #8 // Resource
  WRITE_LONG   0x02a6   0             // Min level
  WRITE_LONG   0x02aa   0             // Max level
  WRITE_LONG   0x02ae   0             // S. throw typ
  WRITE_LONG   0x02b2   0             // S. throw bon
  WRITE_LONG   0x02b6   0             // Special
  INSERT_BYTES 0x02ba   48            // new feature block
  WRITE_SHORT  0x02ba   267           // Opcode
  WRITE_BYTE   0x02bc   1             // Target type
  WRITE_BYTE   0x02bd   0             // Power
  WRITE_LONG   0x02be   14002         // Parameter 1
  WRITE_LONG   0x02c2   0             // Parameter 2
  WRITE_BYTE   0x02c6   2             // Timing metho
  WRITE_BYTE   0x02c7   0             // Resistance
  WRITE_LONG   0x02c8   0             // Duration
  WRITE_BYTE   0x02cc   100           // Max. prob.
  WRITE_BYTE   0x02cd   0             // Min. prob.
  WRITE_ASCII  0x02ce   ~~         #8 // Resource
  WRITE_LONG   0x02d6   0             // Min level
  WRITE_LONG   0x02da   0             // Max level
  WRITE_LONG   0x02de   0             // S. throw typ
  WRITE_LONG   0x02e2   0             // S. throw bon
  WRITE_LONG   0x02e6   0             // Special
  INSERT_BYTES 0x02ea   48            // new feature block
  WRITE_SHORT  0x02ea   31            // Opcode
  WRITE_BYTE   0x02ec   1             // Target type
  WRITE_BYTE   0x02ed   0             // Power
  WRITE_LONG   0x02ee   75            // Parameter 1
  WRITE_LONG   0x02f2   0             // Parameter 2
  WRITE_BYTE   0x02f6   2             // Timing metho
  WRITE_BYTE   0x02f7   0             // Resistance
  WRITE_LONG   0x02f8   0             // Duration
  WRITE_BYTE   0x02fc   100           // Max. prob.
  WRITE_BYTE   0x02fd   0             // Min. prob.
  WRITE_ASCII  0x02fe   ~~         #8 // Resource
  WRITE_LONG   0x0306   0             // Min level
  WRITE_LONG   0x030a   0             // Max level
  WRITE_LONG   0x030e   0             // S. throw typ
  WRITE_LONG   0x0312   0             // S. throw bon
  WRITE_LONG   0x0316   0             // Special
  INSERT_BYTES 0x031a   48            // new feature block
  WRITE_SHORT  0x031a   292           // Opcode
  WRITE_BYTE   0x031c   1             // Target type
  WRITE_BYTE   0x031d   0             // Power
  WRITE_LONG   0x031e   0             // Parameter 1
  WRITE_LONG   0x0322   1             // Parameter 2
  WRITE_BYTE   0x0326   2             // Timing metho
  WRITE_BYTE   0x0327   0             // Resistance
  WRITE_LONG   0x0328   0             // Duration
  WRITE_BYTE   0x032c   100           // Max. prob.
  WRITE_BYTE   0x032d   0             // Min. prob.
  WRITE_ASCII  0x032e   ~~         #8 // Resource
  WRITE_LONG   0x0336   0             // Min level
  WRITE_LONG   0x033a   0             // Max level
  WRITE_LONG   0x033e   0             // S. throw typ
  WRITE_LONG   0x0342   0             // S. throw bon
  WRITE_LONG   0x0346   0             // Special
  INSERT_BYTES 0x034a   48            // new feature block
  WRITE_SHORT  0x034a   193           // Opcode
  WRITE_BYTE   0x034c   1             // Target type
  WRITE_BYTE   0x034d   0             // Power
  WRITE_LONG   0x034e   0             // Parameter 1
  WRITE_LONG   0x0352   1             // Parameter 2
  WRITE_BYTE   0x0356   2             // Timing metho
  WRITE_BYTE   0x0357   0             // Resistance
  WRITE_LONG   0x0358   0             // Duration
  WRITE_BYTE   0x035c   100           // Max. prob.
  WRITE_BYTE   0x035d   0             // Min. prob.
  WRITE_ASCII  0x035e   ~~         #8 // Resource
  WRITE_LONG   0x0366   0             // Min level
  WRITE_LONG   0x036a   0             // Max level
  WRITE_LONG   0x036e   0             // S. throw typ
  WRITE_LONG   0x0372   0             // S. throw bon
  WRITE_LONG   0x0376   0             // Special

COPY_EXISTING ~belt10.itm~ ~override/belt10.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0070   3             // Equip count
  WRITE_BYTE   0x007f   0             // Resistance
  WRITE_SHORT  0x00a2   31            // Opcode
  WRITE_LONG   0x00a6   25            // Parameter 1
  WRITE_LONG   0x00aa   0             // Parameter 2
  WRITE_BYTE   0x00af   0             // Resistance
  WRITE_SHORT  0x00d2   89            // Opcode
  WRITE_LONG   0x00d6   25            // Parameter 1
  WRITE_BYTE   0x00df   0             // Resistance
  DELETE_BYTES 0x102    48
  SAY DESC     @9045

COPY_EXISTING ~berserk.itm~ ~override/berserk.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0070   0             // Equip count
  DELETE_BYTES 0x72     48

COPY_EXISTING ~blakblad.itm~ ~override/blakblad.itm~
  WRITE_SHORT  0x0022   21318         // Animation
  WRITE_ASCII  0x0044   ~GSW1H01~  #8 // Ground
  WRITE_LONG   0x0060   5             // Magiclevel
  WRITE_SHORT  0x0088   12            // Dice size
  WRITE_SHORT  0x008a   2             // Dice count
  WRITE_SHORT  0x008c   0             // Dice bonus
  WRITE_LONG   0x0202   2             // Parameter 2
  WRITE_BYTE   0x0207   2             // Resistance
  WRITE_BYTE   0x022d   0             // Power
  WRITE_BYTE   0x0266   1             // Timing metho
  WRITE_BYTE   0x0267   0             // Resistance
  WRITE_BYTE   0x0297   0             // Resistance
  WRITE_BYTE   0x02f7   0             // Resistance
  WRITE_BYTE   0x0327   0             // Resistance
  WRITE_BYTE   0x0357   0             // Resistance

COPY_EXISTING ~blun12.itm~ ~override/blun12.itm~
  WRITE_SHORT  0x0022   17229         // Animation
  WRITE_LONG   0x0060   1             // Magiclevel
  WRITE_SHORT  0x0070   5             // Equip count
  WRITE_SHORT  0x0090   2             // Feat. count
  WRITE_SHORT  0x0092   5             // Feat. offset
  WRITE_LONG   0x00ae   97            // Parameter 1
  WRITE_SHORT  0x00da   7             // Opcode
  WRITE_LONG   0x00de   97            // Parameter 1
  WRITE_LONG   0x00e2   20            // Parameter 2
  WRITE_LONG   0x010e   97            // Parameter 1
  WRITE_LONG   0x0112   16            // Parameter 2
  WRITE_SHORT  0x013a   177           // Opcode
  WRITE_LONG   0x013e   0             // Parameter 1
  WRITE_LONG   0x0142   2             // Parameter 2
  WRITE_ASCII  0x014e   ~macedisr~ #8 // Resource
  WRITE_SHORT  0x016a   9             // Opcode
  WRITE_BYTE   0x016c   1             // Target type
  WRITE_LONG   0x016e   "-3538944"    // Parameter 1
  WRITE_LONG   0x0172   7208981       // Parameter 2
  WRITE_BYTE   0x0176   2             // Timing metho
  WRITE_ASCII  0x017e   ~~         #8 // Resource
  WRITE_BYTE   0x01a7   2             // Resistance
  WRITE_ASCII  0x01ae   ~MESDIE~   #8 // Resource
  WRITE_BYTE   0x01d7   2             // Resistance
  WRITE_ASCII  0x01de   ~DIE~      #8 // Resource

COPY_EXISTING ~blun14.itm~ ~override/blun14.itm~
  WRITE_LONG   0x0018   108           // Attributes
  WRITE_SHORT  0x0022   19526         // Animation
  WRITE_LONG   0x0034   9000          // Price
  WRITE_SHORT  0x0070   4             // Equip count
  WRITE_SHORT  0x0092   4             // Feat. offset
  WRITE_LONG   0x00ae   25            // Parameter 1
  WRITE_LONG   0x00b2   16            // Parameter 2
  WRITE_LONG   0x00de   99            // Parameter 1
  WRITE_LONG   0x010e   25            // Parameter 1
  WRITE_LONG   0x0112   21            // Parameter 2
  WRITE_SHORT  0x013a   9             // Opcode
  WRITE_LONG   0x013e   1406657792    // Parameter 1
  WRITE_LONG   0x0142   6553621       // Parameter 2
  WRITE_SHORT  0x016a   12            // Opcode
  WRITE_BYTE   0x016c   2             // Target type
  WRITE_LONG   0x016e   10            // Parameter 1
  WRITE_LONG   0x0172   65536         // Parameter 2
  WRITE_BYTE   0x0176   1             // Timing metho
  WRITE_BYTE   0x017c   5             // Max. prob.
  WRITE_LONG   0x018a   2             // Max level
  WRITE_LONG   0x019e   10            // Parameter 1
  WRITE_LONG   0x01a2   524288        // Parameter 2
  WRITE_BYTE   0x01ac   5             // Max. prob.
  WRITE_LONG   0x01ba   4             // Max level
  WRITE_LONG   0x01ce   10            // Parameter 1
  WRITE_LONG   0x01d2   131072        // Parameter 2
  WRITE_BYTE   0x01dc   5             // Max. prob.
  WRITE_LONG   0x01ea   6             // Max level
  WRITE_SHORT  0x01fa   40            // Opcode
  WRITE_LONG   0x01fe   0             // Parameter 1
  WRITE_LONG   0x0202   0             // Parameter 2
  WRITE_BYTE   0x0206   0             // Timing metho
  WRITE_LONG   0x0208   18            // Duration
  WRITE_BYTE   0x020c   33            // Max. prob.
  WRITE_LONG   0x021a   0             // Max level
  WRITE_LONG   0x021e   8             // S. throw typ
  WRITE_LONG   0x0222   "-3"          // S. throw bon
  WRITE_SHORT  0x022a   139           // Opcode
  WRITE_LONG   0x022e   14668         // Parameter 1
  WRITE_BYTE   0x0236   1             // Timing metho
  WRITE_LONG   0x0238   0             // Duration
  WRITE_LONG   0x024e   8             // S. throw typ
  WRITE_LONG   0x0252   "-3"          // S. throw bon
  SET bytes_to_remove = SOURCE_SIZE - 0x25a
  DELETE_BYTES 0x25a    bytes_to_remove
  SAY DESC     @312

COPY_EXISTING ~blun18.itm~ ~override/blun18.itm~
  WRITE_SHORT  0x0022   17229         // Animation
  WRITE_LONG   0x00ae   28            // Parameter 1
  WRITE_LONG   0x00de   28            // Parameter 1
  WRITE_LONG   0x010e   28            // Parameter 1
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_ASCII  0x014e   ~SKULLCR~  #8 // Resource

COPY_EXISTING ~blun22.itm~ ~override/blun22.itm~
  WRITE_SHORT  0x0022   17229         // Animation
  WRITE_LONG   0x0034   20000         // Price
  WRITE_LONG   0x0060   2             // Magiclevel
  WRITE_SHORT  0x0086   2             // Thac0 bonus
  WRITE_SHORT  0x008c   2             // Dice bonus
  WRITE_LONG   0x00ae   47            // Parameter 1
  WRITE_LONG   0x00de   47            // Parameter 1
  WRITE_LONG   0x010e   47            // Parameter 1
  WRITE_LONG   0x013e   10            // Parameter 1
  WRITE_BYTE   0x014c   5             // Max. prob.
  SAY NAME2    @9173
  SAY DESC     @9114

COPY_EXISTING ~blun24.itm~ ~override/blun24.itm~
  WRITE_LONG   0x001e   0xb55fefc2    // Usability
  WRITE_BYTE   0x0029   "-64"         // Kit 1
  WRITE_BYTE   0x002e   14            // MinWis
  WRITE_BYTE   0x002f   56            // Kit 4
  WRITE_SHORT  0x0070   3             // Equip count
  WRITE_SHORT  0x0092   3             // Feat. offset
  WRITE_LONG   0x00ae   22            // Parameter 1
  WRITE_LONG   0x00de   22            // Parameter 1
  WRITE_LONG   0x010e   22            // Parameter 1
  WRITE_LONG   0x0112   16            // Parameter 2
  WRITE_BYTE   0x0116   0             // Timing metho
  WRITE_SHORT  0x013a   12            // Opcode
  WRITE_BYTE   0x013c   2             // Target type
  WRITE_LONG   0x013e   2             // Parameter 1
  WRITE_LONG   0x0142   1048576       // Parameter 2
  WRITE_BYTE   0x0146   1             // Timing metho
  WRITE_BYTE   0x0147   2             // Resistance
  WRITE_LONG   0x015a   6             // Max level
  WRITE_BYTE   0x0176   4             // Timing metho
  WRITE_LONG   0x0178   6             // Duration
  WRITE_LONG   0x01a8   12            // Duration
  WRITE_LONG   0x01d8   18            // Duration
  SET bytes_to_remove = SOURCE_SIZE - 0x1fa
  DELETE_BYTES 0x1fa    bytes_to_remove
  SAY DESC     @9038

COPY_EXISTING ~blun25.itm~ ~override/blun25.itm~
  WRITE_SHORT  0x0022   17229         // Animation
  WRITE_ASCII  0x0044   ~GBLUN06~  #8 // Ground
  WRITE_ASCII  0x0058   ~CBLUN12~  #8 // Desc icon
  WRITE_LONG   0x0060   2             // Magiclevel
  WRITE_SHORT  0x0070   4             // Equip count
  WRITE_SHORT  0x0090   2             // Feat. count
  WRITE_SHORT  0x0092   4             // Feat. offset
  WRITE_LONG   0x00ae   96            // Parameter 1
  WRITE_SHORT  0x00da   7             // Opcode
  WRITE_LONG   0x00de   38            // Parameter 1
  WRITE_LONG   0x00e2   20            // Parameter 2
  WRITE_LONG   0x010e   96            // Parameter 1
  WRITE_LONG   0x0112   16            // Parameter 2
  WRITE_SHORT  0x013a   177           // Opcode
  WRITE_LONG   0x013e   0             // Parameter 1
  WRITE_LONG   0x0142   2             // Parameter 2
  WRITE_ASCII  0x014e   ~macedisr~ #8 // Resource
  WRITE_SHORT  0x016a   177           // Opcode
  WRITE_BYTE   0x016c   2             // Target type
  WRITE_LONG   0x016e   4             // Parameter 1
  WRITE_LONG   0x0172   3             // Parameter 2
  WRITE_BYTE   0x0176   1             // Timing metho
  WRITE_BYTE   0x0177   2             // Resistance
  WRITE_ASCII  0x017e   ~DIE~      #8 // Resource
  WRITE_SHORT  0x019a   177           // Opcode
  WRITE_BYTE   0x019c   2             // Target type
  WRITE_LONG   0x019e   4             // Parameter 1
  WRITE_LONG   0x01a2   3             // Parameter 2
  WRITE_BYTE   0x01a6   1             // Timing metho
  WRITE_BYTE   0x01a7   2             // Resistance
  WRITE_ASCII  0x01ae   ~MESDIE~   #8 // Resource
  SET bytes_to_remove = SOURCE_SIZE - 0x1ca
  DELETE_BYTES 0x1ca    bytes_to_remove
  SAY DESC     @9047

COPY_EXISTING ~blun30.itm~ ~override/blun30.itm~
  WRITE_SHORT  0x0022   19526         // Animation
  WRITE_SHORT  0x0070   6             // Equip count
  WRITE_SHORT  0x0092   6             // Feat. offset
  WRITE_LONG   0x00ae   25            // Parameter 1
  WRITE_LONG   0x00b2   16            // Parameter 2
  WRITE_LONG   0x00de   99            // Parameter 1
  WRITE_LONG   0x010e   25            // Parameter 1
  WRITE_LONG   0x0112   21            // Parameter 2
  WRITE_SHORT  0x013a   9             // Opcode
  WRITE_LONG   0x013e   1406657792    // Parameter 1
  WRITE_LONG   0x0142   6553621       // Parameter 2
  WRITE_SHORT  0x016a   166           // Opcode
  WRITE_LONG   0x016e   5             // Parameter 1
  WRITE_LONG   0x0172   0             // Parameter 2
  WRITE_BYTE   0x0177   2             // Resistance
  WRITE_SHORT  0x019a   142           // Opcode
  WRITE_LONG   0x019e   0             // Parameter 1
  WRITE_LONG   0x01a2   63            // Parameter 2
  WRITE_ASCII  0x01ae   ~~         #8 // Resource
  WRITE_SHORT  0x01ca   12            // Opcode
  WRITE_BYTE   0x01cc   2             // Target type
  WRITE_LONG   0x01ce   20            // Parameter 1
  WRITE_LONG   0x01d2   65536         // Parameter 2
  WRITE_BYTE   0x01d6   1             // Timing metho
  WRITE_BYTE   0x01d7   0             // Resistance
  WRITE_BYTE   0x01dc   5             // Max. prob.
  WRITE_ASCII  0x01de   ~~         #8 // Resource
  WRITE_LONG   0x01ea   2             // Max level
  WRITE_SHORT  0x01fa   12            // Opcode
  WRITE_BYTE   0x01fc   2             // Target type
  WRITE_LONG   0x01fe   20            // Parameter 1
  WRITE_LONG   0x0202   524288        // Parameter 2
  WRITE_BYTE   0x0206   1             // Timing metho
  WRITE_BYTE   0x0207   0             // Resistance
  WRITE_BYTE   0x020c   5             // Max. prob.
  WRITE_LONG   0x021a   4             // Max level
  WRITE_SHORT  0x022a   12            // Opcode
  WRITE_BYTE   0x022c   2             // Target type
  WRITE_LONG   0x022e   20            // Parameter 1
  WRITE_LONG   0x0232   131072        // Parameter 2
  WRITE_BYTE   0x0236   1             // Timing metho
  WRITE_BYTE   0x0237   0             // Resistance
  WRITE_BYTE   0x023c   5             // Max. prob.
  WRITE_LONG   0x024a   6             // Max level
  WRITE_SHORT  0x025a   40            // Opcode
  WRITE_BYTE   0x025c   2             // Target type
  WRITE_LONG   0x025e   0             // Parameter 1
  WRITE_LONG   0x0262   0             // Parameter 2
  WRITE_BYTE   0x0266   0             // Timing metho
  WRITE_BYTE   0x0267   0             // Resistance
  WRITE_LONG   0x0268   30            // Duration
  WRITE_BYTE   0x026c   33            // Max. prob.
  WRITE_LONG   0x027e   8             // S. throw typ
  WRITE_LONG   0x0282   "-5"          // S. throw bon
  WRITE_SHORT  0x028a   12            // Opcode
  WRITE_BYTE   0x028c   2             // Target type
  WRITE_LONG   0x028e   20            // Parameter 1
  WRITE_LONG   0x0292   2097152       // Parameter 2
  WRITE_BYTE   0x0296   1             // Timing metho
  WRITE_BYTE   0x0297   0             // Resistance
  WRITE_BYTE   0x029c   5             // Max. prob.
  WRITE_LONG   0x02aa   6             // Max level
  WRITE_SHORT  0x02ba   12            // Opcode
  WRITE_BYTE   0x02bc   2             // Target type
  WRITE_LONG   0x02be   20            // Parameter 1
  WRITE_LONG   0x02c2   262144        // Parameter 2
  WRITE_BYTE   0x02c6   1             // Timing metho
  WRITE_BYTE   0x02c7   0             // Resistance
  WRITE_BYTE   0x02cc   5             // Max. prob.
  WRITE_ASCII  0x02ce   ~~         #8 // Resource
  WRITE_LONG   0x02da   6             // Max level
  WRITE_SHORT  0x02ea   139           // Opcode
  WRITE_BYTE   0x02ec   2             // Target type
  WRITE_LONG   0x02ee   14668         // Parameter 1
  WRITE_LONG   0x02f2   0             // Parameter 2
  WRITE_BYTE   0x02f6   1             // Timing metho
  WRITE_BYTE   0x02f7   0             // Resistance
  WRITE_BYTE   0x02fc   33            // Max. prob.
  WRITE_ASCII  0x02fe   ~~         #8 // Resource
  WRITE_LONG   0x030e   8             // S. throw typ
  WRITE_LONG   0x0312   "-5"          // S. throw bon
  SET bytes_to_remove = SOURCE_SIZE - 0x31a
  DELETE_BYTES 0x31a    bytes_to_remove
  SAY DESC     @315

COPY_EXISTING ~blun30c.itm~ ~override/blun30c.itm~
  WRITE_SHORT  0x0022   19526         // Animation
  WRITE_SHORT  0x0070   4             // Equip count
  WRITE_SHORT  0x0092   4             // Feat. offset
  WRITE_LONG   0x00ae   25            // Parameter 1
  WRITE_LONG   0x00b2   16            // Parameter 2
  WRITE_LONG   0x00de   99            // Parameter 1
  WRITE_LONG   0x010e   25            // Parameter 1
  WRITE_LONG   0x0112   21            // Parameter 2
  WRITE_SHORT  0x013a   9             // Opcode
  WRITE_LONG   0x013e   1406657792    // Parameter 1
  WRITE_LONG   0x0142   6553621       // Parameter 2
  WRITE_SHORT  0x016a   12            // Opcode
  WRITE_BYTE   0x016c   2             // Target type
  WRITE_LONG   0x016e   10            // Parameter 1
  WRITE_LONG   0x0172   65536         // Parameter 2
  WRITE_BYTE   0x0176   1             // Timing metho
  WRITE_BYTE   0x017c   5             // Max. prob.
  WRITE_LONG   0x018a   2             // Max level
  WRITE_LONG   0x019e   10            // Parameter 1
  WRITE_LONG   0x01a2   524288        // Parameter 2
  WRITE_BYTE   0x01ac   5             // Max. prob.
  WRITE_LONG   0x01ba   4             // Max level
  WRITE_LONG   0x01ce   10            // Parameter 1
  WRITE_LONG   0x01d2   131072        // Parameter 2
  WRITE_BYTE   0x01dc   5             // Max. prob.
  WRITE_LONG   0x01ea   6             // Max level
  WRITE_SHORT  0x01fa   40            // Opcode
  WRITE_LONG   0x01fe   0             // Parameter 1
  WRITE_LONG   0x0202   0             // Parameter 2
  WRITE_BYTE   0x0206   0             // Timing metho
  WRITE_LONG   0x0208   24            // Duration
  WRITE_BYTE   0x020c   33            // Max. prob.
  WRITE_LONG   0x021a   0             // Max level
  WRITE_LONG   0x021e   8             // S. throw typ
  WRITE_LONG   0x0222   "-4"          // S. throw bon
  WRITE_SHORT  0x022a   12            // Opcode
  WRITE_LONG   0x022e   10            // Parameter 1
  WRITE_LONG   0x0232   2097152       // Parameter 2
  WRITE_BYTE   0x0236   1             // Timing metho
  WRITE_LONG   0x0238   0             // Duration
  WRITE_BYTE   0x023c   5             // Max. prob.
  WRITE_LONG   0x024a   6             // Max level
  WRITE_SHORT  0x025a   139           // Opcode
  WRITE_LONG   0x025e   14668         // Parameter 1
  WRITE_LONG   0x0262   0             // Parameter 2
  WRITE_BYTE   0x026c   33            // Max. prob.
  WRITE_LONG   0x027a   0             // Max level
  WRITE_LONG   0x027e   8             // S. throw typ
  WRITE_LONG   0x0282   "-4"          // S. throw bon
  SET bytes_to_remove = SOURCE_SIZE - 0x28a
  DELETE_BYTES 0x28a    bytes_to_remove
  SAY DESC     @313

COPY_EXISTING ~blun30d.itm~ ~override/blun30d.itm~
  WRITE_SHORT  0x0022   19526         // Animation
  WRITE_SHORT  0x0070   4             // Equip count
  WRITE_SHORT  0x0092   4             // Feat. offset
  WRITE_LONG   0x00ae   25            // Parameter 1
  WRITE_LONG   0x00b2   16            // Parameter 2
  WRITE_LONG   0x00de   99            // Parameter 1
  WRITE_LONG   0x010e   25            // Parameter 1
  WRITE_LONG   0x0112   21            // Parameter 2
  WRITE_SHORT  0x013a   9             // Opcode
  WRITE_LONG   0x013e   1406657792    // Parameter 1
  WRITE_LONG   0x0142   6553621       // Parameter 2
  WRITE_SHORT  0x016a   12            // Opcode
  WRITE_BYTE   0x016c   2             // Target type
  WRITE_LONG   0x016e   10            // Parameter 1
  WRITE_LONG   0x0172   65536         // Parameter 2
  WRITE_BYTE   0x0176   1             // Timing metho
  WRITE_BYTE   0x017c   5             // Max. prob.
  WRITE_LONG   0x018a   2             // Max level
  WRITE_LONG   0x019e   10            // Parameter 1
  WRITE_LONG   0x01a2   524288        // Parameter 2
  WRITE_BYTE   0x01ac   5             // Max. prob.
  WRITE_LONG   0x01ba   4             // Max level
  WRITE_LONG   0x01ce   10            // Parameter 1
  WRITE_LONG   0x01d2   131072        // Parameter 2
  WRITE_BYTE   0x01dc   5             // Max. prob.
  WRITE_LONG   0x01ea   6             // Max level
  WRITE_SHORT  0x01fa   40            // Opcode
  WRITE_LONG   0x01fe   0             // Parameter 1
  WRITE_LONG   0x0202   0             // Parameter 2
  WRITE_BYTE   0x0206   0             // Timing metho
  WRITE_LONG   0x0208   24            // Duration
  WRITE_BYTE   0x020c   33            // Max. prob.
  WRITE_LONG   0x021a   0             // Max level
  WRITE_LONG   0x021e   8             // S. throw typ
  WRITE_LONG   0x0222   "-4"          // S. throw bon
  WRITE_SHORT  0x022a   12            // Opcode
  WRITE_LONG   0x022e   10            // Parameter 1
  WRITE_LONG   0x0232   262144        // Parameter 2
  WRITE_BYTE   0x0236   1             // Timing metho
  WRITE_LONG   0x0238   0             // Duration
  WRITE_BYTE   0x023c   5             // Max. prob.
  WRITE_LONG   0x024a   6             // Max level
  WRITE_SHORT  0x025a   139           // Opcode
  WRITE_LONG   0x025e   14668         // Parameter 1
  WRITE_LONG   0x0262   0             // Parameter 2
  WRITE_BYTE   0x026c   33            // Max. prob.
  WRITE_LONG   0x027a   0             // Max level
  WRITE_LONG   0x027e   8             // S. throw typ
  WRITE_LONG   0x0282   "-4"          // S. throw bon
  SET bytes_to_remove = SOURCE_SIZE - 0x28a
  DELETE_BYTES 0x28a    bytes_to_remove
  SAY DESC     @314

COPY_EXISTING ~blun35.itm~ ~override/blun35.itm~
  WRITE_BYTE   0x0206   1             // Timing metho
  WRITE_BYTE   0x020c   5             // Max. prob.
  WRITE_LONG   0x0216   10            // Min level

COPY_EXISTING ~bolt02.itm~ ~override/bolt02.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   200           // Stack
  WRITE_SHORT  0x0070   0             // Equip count
  WRITE_SHORT  0x008c   1             // Dice bonus
  WRITE_SHORT  0x0092   0             // Feat. offset
  WRITE_SHORT  0x009c   12            // Effect anima
  SET bytes_to_remove = SOURCE_SIZE - 0xaa
  DELETE_BYTES 0xaa    bytes_to_remove
  SAY DESC     @276

COPY_EXISTING ~bolt03.itm~ ~override/bolt03.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   200           // Stack
  WRITE_LONG   0x0060   1             // Magiclevel
  WRITE_SHORT  0x0070   0             // Equip count
  WRITE_SHORT  0x0086   1             // Thac0 bonus
  WRITE_SHORT  0x008c   1             // Dice bonus
  WRITE_SHORT  0x0092   0             // Feat. offset
  WRITE_SHORT  0x009c   16            // Effect anima
  WRITE_SHORT  0x00aa   12            // Opcode
  WRITE_BYTE   0x00ac   2             // Target type
  WRITE_BYTE   0x00ad   6             // Power
  WRITE_LONG   0x00ae   0             // Parameter 1
  WRITE_LONG   0x00b2   262144        // Parameter 2
  WRITE_BYTE   0x00b6   1             // Timing metho
  WRITE_BYTE   0x00b7   1             // Resistance
  WRITE_LONG   0x00c6   2             // Min level
  WRITE_LONG   0x00ca   4             // Max level
  WRITE_BYTE   0x00dd   6             // Power
  WRITE_LONG   0x00fe   2             // S. throw typ
  WRITE_SHORT  0x010a   174           // Opcode
  WRITE_BYTE   0x010c   1             // Target type
  WRITE_LONG   0x0112   0             // Parameter 2
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_ASCII  0x011e   ~EFF_M22C~ #8 // Resource
  WRITE_LONG   0x0126   0             // Min level
  WRITE_LONG   0x012a   0             // Max level
  WRITE_LONG   0x012e   0             // S. throw typ
  SET bytes_to_remove = SOURCE_SIZE - 0x13a
  DELETE_BYTES 0x13a    bytes_to_remove
  SAY DESC     @9131

COPY_EXISTING ~bolt06.itm~ ~override/bolt06.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   200           // Stack
  WRITE_SHORT  0x0070   0             // Equip count
  WRITE_SHORT  0x008c   2             // Dice bonus
  WRITE_SHORT  0x0092   0             // Feat. offset
  WRITE_SHORT  0x009c   12            // Effect anima
  SET bytes_to_remove = SOURCE_SIZE - 0xaa
  DELETE_BYTES 0xaa    bytes_to_remove
  SAY DESC     @277

COPY_EXISTING ~bolt07.itm~ ~override/bolt07.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x0029   0             // Kit 1
  WRITE_SHORT  0x0038   20            // Stack
  WRITE_LONG   0x004c   1             // Weight
  WRITE_SHORT  0x0070   0             // Equip count
  WRITE_SHORT  0x0092   0             // Feat. offset
  WRITE_SHORT  0x00aa   45            // Opcode
  WRITE_BYTE   0x00ac   2             // Target type
  WRITE_BYTE   0x00ad   0             // Power
  WRITE_LONG   0x00b2   0             // Parameter 2
  WRITE_BYTE   0x00b6   0             // Timing metho
  WRITE_BYTE   0x00b7   2             // Resistance
  WRITE_LONG   0x00b8   12            // Duration
  WRITE_ASCII  0x00be   ~~         #8 // Resource
  WRITE_LONG   0x00ca   "-1"          // Max level
  WRITE_LONG   0x00ce   1             // S. throw typ
  WRITE_LONG   0x00d2   "-1"          // S. throw bon
  WRITE_LONG   0x00d6   0             // Special
  WRITE_SHORT  0x00da   139           // Opcode
  WRITE_LONG   0x00de   1280          // Parameter 1
  WRITE_BYTE   0x00e6   1             // Timing metho
  WRITE_LONG   0x00e8   0             // Duration
  WRITE_LONG   0x00fa   0             // Max level
  WRITE_LONG   0x0102   "-1"          // S. throw bon
  WRITE_SHORT  0x010a   142           // Opcode
  WRITE_LONG   0x010e   0             // Parameter 1
  WRITE_LONG   0x0112   55            // Parameter 2
  WRITE_BYTE   0x0116   0             // Timing metho
  WRITE_LONG   0x0118   12            // Duration
  WRITE_LONG   0x012a   "-1"          // Max level
  WRITE_LONG   0x0132   "-1"          // S. throw bon
  WRITE_SHORT  0x013a   50            // Opcode
  WRITE_LONG   0x013e   6520320       // Parameter 1
  WRITE_LONG   0x0142   1638400       // Parameter 2
  WRITE_LONG   0x0148   2             // Duration
  WRITE_LONG   0x015a   0             // Max level
  WRITE_LONG   0x0162   "-1"          // S. throw bon
  SET bytes_to_remove = SOURCE_SIZE - 0x16a
  DELETE_BYTES 0x16a    bytes_to_remove

COPY_EXISTING ~bolt09.itm~ ~override/bolt09.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   200           // Stack
  WRITE_SHORT  0x008c   3             // Dice bonus
  SAY DESC     @278

COPY_EXISTING ~boot01.itm~ ~override/boot01.itm~
  WRITE_LONG   0x001e   0x20000000    // Usability
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0034   11500         // Price
  WRITE_SHORT  0x0072   16            // Opcode
  WRITE_LONG   0x0076   0             // Parameter 1
  WRITE_LONG   0x007a   0             // Parameter 2
  WRITE_BYTE   0x00af   0             // Resistance
  SAY DESC     @9002

COPY_EXISTING ~boot03.itm~ ~override/boot03.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x00aa   25            // Parameter 2
  WRITE_BYTE   0x00af   0             // Resistance

COPY_EXISTING ~bootdriz.itm~ ~override/bootdriz.itm~
  WRITE_LONG   0x0018   40            // Attributes
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0070   3             // Equip count
  WRITE_SHORT  0x0072   16            // Opcode
  WRITE_LONG   0x0076   0             // Parameter 1
  INSERT_BYTES 0x00a2   48            // new feature block
  WRITE_SHORT  0x00a2   206           // Opcode
  WRITE_BYTE   0x00a4   1             // Target type
  WRITE_BYTE   0x00a5   0             // Power
  WRITE_LONG   0x00a6   0             // Parameter 1
  WRITE_LONG   0x00aa   0             // Parameter 2
  WRITE_BYTE   0x00ae   2             // Timing metho
  WRITE_BYTE   0x00af   0             // Resistance
  WRITE_LONG   0x00b0   0             // Duration
  WRITE_BYTE   0x00b4   100           // Max. prob.
  WRITE_BYTE   0x00b5   0             // Min. prob.
  WRITE_ASCII  0x00b6   ~SPRA301~  #8 // Resource
  WRITE_LONG   0x00be   0             // Min level
  WRITE_LONG   0x00c2   0             // Max level
  WRITE_LONG   0x00c6   0             // S. throw typ
  WRITE_LONG   0x00ca   0             // S. throw bon
  WRITE_LONG   0x00ce   0             // Special
  INSERT_BYTES 0x00d2   48            // new feature block
  WRITE_SHORT  0x00d2   206           // Opcode
  WRITE_BYTE   0x00d4   1             // Target type
  WRITE_BYTE   0x00d5   0             // Power
  WRITE_LONG   0x00d6   0             // Parameter 1
  WRITE_LONG   0x00da   0             // Parameter 2
  WRITE_BYTE   0x00de   2             // Timing metho
  WRITE_BYTE   0x00df   0             // Resistance
  WRITE_LONG   0x00e0   0             // Duration
  WRITE_BYTE   0x00e4   100           // Max. prob.
  WRITE_BYTE   0x00e5   0             // Min. prob.
  WRITE_ASCII  0x00e6   ~SPWI305~  #8 // Resource
  WRITE_LONG   0x00ee   0             // Min level
  WRITE_LONG   0x00f2   0             // Max level
  WRITE_LONG   0x00f6   0             // S. throw typ
  WRITE_LONG   0x00fa   0             // S. throw bon
  WRITE_LONG   0x00fe   0             // Special

COPY_EXISTING ~brdflute.itm~ ~override/brdflute.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x0029   0             // Kit 1
  WRITE_LONG   0x004c   1             // Weight
  WRITE_SHORT  0x0090   13            // Feat. count
  WRITE_SHORT  0x00ca   14            // Feat. offset
  WRITE_ASCII  0x00e6   ~SPWI303B~ #8 // Use icon
  WRITE_BYTE   0x00ee   1             // Target type
  WRITE_SHORT  0x0102   16            // Feat. offset
  WRITE_SHORT  0x014a   23            // Opcode
  WRITE_BYTE   0x0156   1             // Timing metho
  WRITE_LONG   0x0158   40            // Duration
  WRITE_ASCII  0x015e   ~~         #8 // Resource
  WRITE_SHORT  0x017a   161           // Opcode
  WRITE_BYTE   0x0186   1             // Timing metho
  WRITE_ASCII  0x018e   ~~         #8 // Resource
  WRITE_SHORT  0x01aa   101           // Opcode
  WRITE_LONG   0x01b2   24            // Parameter 2
  WRITE_LONG   0x01b8   60            // Duration
  WRITE_ASCII  0x01be   ~~         #8 // Resource
  WRITE_SHORT  0x01da   50            // Opcode
  WRITE_LONG   0x01de   1449132032    // Parameter 1
  WRITE_LONG   0x01e2   1638400       // Parameter 2
  WRITE_BYTE   0x01e6   0             // Timing metho
  WRITE_LONG   0x01e8   1             // Duration
  WRITE_SHORT  0x020a   142           // Opcode
  WRITE_LONG   0x0212   37            // Parameter 2
  WRITE_BYTE   0x0216   0             // Timing metho
  WRITE_LONG   0x0218   60            // Duration
  WRITE_SHORT  0x023a   174           // Opcode
  WRITE_LONG   0x0242   0             // Parameter 2
  WRITE_BYTE   0x0246   4             // Timing metho
  WRITE_LONG   0x0248   60            // Duration
  WRITE_ASCII  0x024e   ~EFF_E04~  #8 // Resource
  WRITE_SHORT  0x026a   240           // Opcode
  WRITE_LONG   0x026e   0             // Parameter 1
  WRITE_LONG   0x0272   36            // Parameter 2
  WRITE_BYTE   0x0276   1             // Timing metho
  WRITE_LONG   0x0278   0             // Duration
  WRITE_SHORT  0x029a   267           // Opcode
  WRITE_LONG   0x029e   14007         // Parameter 1
  WRITE_LONG   0x02a2   0             // Parameter 2
  WRITE_LONG   0x02a8   60            // Duration
  WRITE_SHORT  0x02ca   267           // Opcode
  WRITE_LONG   0x02ce   17427         // Parameter 1
  WRITE_BYTE   0x02d6   0             // Timing metho
  WRITE_LONG   0x02d8   60            // Duration
  WRITE_ASCII  0x02de   ~~         #8 // Resource
  WRITE_SHORT  0x02fa   169           // Opcode
  WRITE_BYTE   0x0306   0             // Timing metho
  WRITE_LONG   0x0308   60            // Duration
  WRITE_SHORT  0x032a   106           // Opcode
  WRITE_LONG   0x032e   1             // Parameter 1
  WRITE_LONG   0x0332   1             // Parameter 2
  WRITE_LONG   0x0338   60            // Duration
  WRITE_SHORT  0x035a   101           // Opcode
  WRITE_LONG   0x035e   0             // Parameter 1
  WRITE_LONG   0x0362   106           // Parameter 2
  WRITE_LONG   0x0368   60            // Duration
  WRITE_SHORT  0x038a   215           // Opcode
  WRITE_BYTE   0x038d   1             // Power
  WRITE_LONG   0x0392   1             // Parameter 2
  WRITE_LONG   0x0398   1             // Duration
  WRITE_ASCII  0x039e   ~ICrmpari~ #8 // Resource
  WRITE_SHORT  0x03ba   146           // Opcode
  WRITE_BYTE   0x03bc   1             // Target type
  WRITE_BYTE   0x03bd   0             // Power
  WRITE_LONG   0x03be   12            // Parameter 1
  WRITE_BYTE   0x03c6   1             // Timing metho
  WRITE_BYTE   0x03c7   0             // Resistance
  WRITE_LONG   0x03c8   0             // Duration
  WRITE_ASCII  0x03ce   ~SPWI602~  #8 // Resource
  WRITE_SHORT  0x03ea   174           // Opcode
  WRITE_BYTE   0x03ec   1             // Target type
  WRITE_BYTE   0x03ed   0             // Power
  WRITE_LONG   0x03f2   0             // Parameter 2
  WRITE_BYTE   0x03f6   1             // Timing metho
  WRITE_BYTE   0x03f7   2             // Resistance
  WRITE_LONG   0x03f8   0             // Duration
  WRITE_ASCII  0x03fe   ~m_flute~  #8 // Resource
  WRITE_SHORT  0x041a   146           // Opcode
  WRITE_BYTE   0x041c   2             // Target type
  WRITE_BYTE   0x041d   0             // Power
  WRITE_LONG   0x041e   5             // Parameter 1
  WRITE_BYTE   0x0426   1             // Timing metho
  WRITE_BYTE   0x0427   1             // Resistance
  WRITE_LONG   0x0428   0             // Duration
  WRITE_ASCII  0x042e   ~SPWI303~  #8 // Resource
  WRITE_SHORT  0x044a   174           // Opcode
  WRITE_BYTE   0x044c   1             // Target type
  WRITE_BYTE   0x044d   0             // Power
  WRITE_LONG   0x0452   0             // Parameter 2
  WRITE_BYTE   0x0456   1             // Timing metho
  WRITE_BYTE   0x0457   2             // Resistance
  WRITE_LONG   0x0458   0             // Duration
  WRITE_ASCII  0x045e   ~m_flute~  #8 // Resource
  SET bytes_to_remove = SOURCE_SIZE - 0x47a
  DELETE_BYTES 0x47a    bytes_to_remove

COPY_EXISTING ~clck05.itm~ ~override/clck05.itm~
  INSERT_BYTES 450      8             // extend file to new size
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0068   1             // Ext. count
  WRITE_LONG   0x006a   170           // Feat. offset
  WRITE_SHORT  0x0070   6             // Equip count
  WRITE_BYTE   0x0072   0             // Attacktype
  WRITE_BYTE   0x0073   0             // Force ID
  WRITE_SHORT  0x0074   0             // Use location
  WRITE_ASCII  0x0076   ~~         #8 // Use icon
  WRITE_BYTE   0x007e   0             // Target type
  WRITE_BYTE   0x007f   0             // Target #
  WRITE_SHORT  0x0080   1             // Range
  WRITE_SHORT  0x0082   "-1"          // Proj. type
  WRITE_SHORT  0x0084   0             // Speed
  WRITE_SHORT  0x0086   0             // Thac0 bonus
  WRITE_SHORT  0x0088   0             // Dice size
  WRITE_SHORT  0x008a   0             // Dice count
  WRITE_SHORT  0x008c   0             // Dice bonus
  WRITE_SHORT  0x008e   0             // Damagetype
  WRITE_SHORT  0x0090   0             // Feat. count
  WRITE_SHORT  0x0092   6             // Feat. offset
  WRITE_SHORT  0x0096   0             // Drain type
  WRITE_LONG   0x0098   0             // Flags
  WRITE_SHORT  0x009c   0             // Effect anima
  WRITE_SHORT  0x009e   34            // Melee anim 1
  WRITE_SHORT  0x00a0   33            // Melee anim 2
  WRITE_SHORT  0x00a2   33            // Melee anim 3
  WRITE_SHORT  0x00a4   0             // Bow
  WRITE_SHORT  0x00a6   0             // Crossbow
  WRITE_SHORT  0x00a8   0             // Throwing
  WRITE_SHORT  0x00aa   0             // Opcode
  WRITE_BYTE   0x00ac   1             // Target type
  WRITE_BYTE   0x00ad   0             // Power
  WRITE_LONG   0x00ae   1             // Parameter 1
  WRITE_LONG   0x00b2   0             // Parameter 2
  WRITE_BYTE   0x00b6   2             // Timing metho
  WRITE_LONG   0x00b8   0             // Duration
  WRITE_BYTE   0x00bc   100           // Max. prob.
  WRITE_BYTE   0x00bd   0             // Min. prob.
  WRITE_ASCII  0x00be   ~~         #8 // Resource
  WRITE_LONG   0x00c6   0             // Min level
  WRITE_LONG   0x00ca   0             // Max level
  WRITE_LONG   0x00ce   0             // S. throw typ
  WRITE_LONG   0x00d2   0             // S. throw bon
  WRITE_LONG   0x00d6   0             // Special
  WRITE_SHORT  0x00da   33            // Opcode
  WRITE_BYTE   0x00dc   1             // Target type
  WRITE_BYTE   0x00dd   0             // Power
  WRITE_LONG   0x00de   1             // Parameter 1
  WRITE_LONG   0x00e2   0             // Parameter 2
  WRITE_BYTE   0x00e6   2             // Timing metho
  WRITE_LONG   0x00e8   0             // Duration
  WRITE_BYTE   0x00ec   100           // Max. prob.
  WRITE_BYTE   0x00ed   0             // Min. prob.
  WRITE_ASCII  0x00ee   ~~         #8 // Resource
  WRITE_LONG   0x00f6   0             // Min level
  WRITE_LONG   0x00fa   0             // Max level
  WRITE_LONG   0x00fe   0             // S. throw typ
  WRITE_LONG   0x0102   0             // S. throw bon
  WRITE_LONG   0x0106   0             // Special
  WRITE_SHORT  0x010a   34            // Opcode
  WRITE_BYTE   0x010c   1             // Target type
  WRITE_BYTE   0x010d   0             // Power
  WRITE_LONG   0x010e   1             // Parameter 1
  WRITE_LONG   0x0112   0             // Parameter 2
  WRITE_BYTE   0x0116   2             // Timing metho
  WRITE_LONG   0x0118   0             // Duration
  WRITE_BYTE   0x011c   100           // Max. prob.
  WRITE_BYTE   0x011d   0             // Min. prob.
  WRITE_ASCII  0x011e   ~~         #8 // Resource
  WRITE_LONG   0x0126   0             // Min level
  WRITE_LONG   0x012a   0             // Max level
  WRITE_LONG   0x012e   0             // S. throw typ
  WRITE_LONG   0x0132   0             // S. throw bon
  WRITE_LONG   0x0136   0             // Special
  WRITE_SHORT  0x013a   35            // Opcode
  WRITE_BYTE   0x013c   1             // Target type
  WRITE_BYTE   0x013d   0             // Power
  WRITE_LONG   0x013e   1             // Parameter 1
  WRITE_LONG   0x0142   0             // Parameter 2
  WRITE_BYTE   0x0146   2             // Timing metho
  WRITE_LONG   0x0148   0             // Duration
  WRITE_BYTE   0x014c   100           // Max. prob.
  WRITE_BYTE   0x014d   0             // Min. prob.
  WRITE_ASCII  0x014e   ~~         #8 // Resource
  WRITE_LONG   0x0156   0             // Min level
  WRITE_LONG   0x015a   0             // Max level
  WRITE_LONG   0x015e   0             // S. throw typ
  WRITE_LONG   0x0162   0             // S. throw bon
  WRITE_LONG   0x0166   0             // Special
  WRITE_SHORT  0x016a   37            // Opcode
  WRITE_BYTE   0x016c   1             // Target type
  WRITE_BYTE   0x016d   0             // Power
  WRITE_LONG   0x016e   1             // Parameter 1
  WRITE_LONG   0x0172   0             // Parameter 2
  WRITE_BYTE   0x0176   2             // Timing metho
  WRITE_LONG   0x0178   0             // Duration
  WRITE_BYTE   0x017c   100           // Max. prob.
  WRITE_BYTE   0x017d   0             // Min. prob.
  WRITE_ASCII  0x017e   ~~         #8 // Resource
  WRITE_LONG   0x0186   0             // Min level
  WRITE_LONG   0x018a   0             // Max level
  WRITE_LONG   0x018e   0             // S. throw typ
  WRITE_LONG   0x0192   0             // S. throw bon
  WRITE_LONG   0x0196   0             // Special
  WRITE_SHORT  0x019a   36            // Opcode
  WRITE_BYTE   0x019c   1             // Target type
  WRITE_BYTE   0x019d   0             // Power
  WRITE_LONG   0x019e   1             // Parameter 1
  WRITE_LONG   0x01a2   0             // Parameter 2
  WRITE_BYTE   0x01a6   2             // Timing metho
  WRITE_BYTE   0x01a7   0             // Resistance
  WRITE_LONG   0x01a8   0             // Duration
  WRITE_BYTE   0x01ac   100           // Max. prob.
  WRITE_BYTE   0x01ad   0             // Min. prob.
  WRITE_ASCII  0x01ae   ~~         #8 // Resource
  WRITE_LONG   0x01b6   0             // Min level
  WRITE_LONG   0x01ba   0             // Max level
  WRITE_LONG   0x01be   0             // S. throw typ
  WRITE_LONG   0x01c2   0             // S. throw bon
  WRITE_LONG   0x01c6   0             // Special
  SAY DESC     @328

COPY_EXISTING ~clck06.itm~ ~override/clck06.itm~
  INSERT_BYTES 210      248           // extend file to new size
  WRITE_LONG   0x000c   4405          // ID name
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0034   5000          // Price
  WRITE_ASCII  0x003a   ~ICLCK01~  #8 // Inventory
  WRITE_SHORT  0x0042   55            // Lore to ID
  WRITE_LONG   0x0054   17240         // ID desc
  WRITE_ASCII  0x0058   ~CCLCK01~  #8 // Desc icon
  WRITE_SHORT  0x0068   1             // Ext. count
  WRITE_LONG   0x006a   170           // Feat. offset
  WRITE_SHORT  0x0070   6             // Equip count
  WRITE_BYTE   0x0072   0             // Attacktype
  WRITE_BYTE   0x0073   0             // Force ID
  WRITE_SHORT  0x0074   0             // Use location
  WRITE_ASCII  0x0076   ~~         #8 // Use icon
  WRITE_BYTE   0x007e   0             // Target type
  WRITE_BYTE   0x007f   0             // Target #
  WRITE_SHORT  0x0080   1             // Range
  WRITE_SHORT  0x0082   "-1"          // Proj. type
  WRITE_SHORT  0x0084   0             // Speed
  WRITE_SHORT  0x0086   0             // Thac0 bonus
  WRITE_SHORT  0x0088   0             // Dice size
  WRITE_SHORT  0x008a   0             // Dice count
  WRITE_SHORT  0x008c   0             // Dice bonus
  WRITE_SHORT  0x008e   0             // Damagetype
  WRITE_SHORT  0x0090   0             // Feat. count
  WRITE_SHORT  0x0092   6             // Feat. offset
  WRITE_SHORT  0x0096   0             // Drain type
  WRITE_LONG   0x0098   0             // Flags
  WRITE_SHORT  0x009c   0             // Effect anima
  WRITE_SHORT  0x009e   34            // Melee anim 1
  WRITE_SHORT  0x00a0   33            // Melee anim 2
  WRITE_SHORT  0x00a2   33            // Melee anim 3
  WRITE_SHORT  0x00a4   0             // Bow
  WRITE_SHORT  0x00a6   0             // Crossbow
  WRITE_SHORT  0x00a8   0             // Throwing
  WRITE_SHORT  0x00aa   0             // Opcode
  WRITE_BYTE   0x00ac   1             // Target type
  WRITE_BYTE   0x00ad   0             // Power
  WRITE_LONG   0x00ae   1             // Parameter 1
  WRITE_LONG   0x00b2   0             // Parameter 2
  WRITE_BYTE   0x00b6   2             // Timing metho
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_LONG   0x00b8   0             // Duration
  WRITE_BYTE   0x00bc   100           // Max. prob.
  WRITE_BYTE   0x00bd   0             // Min. prob.
  WRITE_ASCII  0x00be   ~~         #8 // Resource
  WRITE_LONG   0x00c6   0             // Min level
  WRITE_LONG   0x00ca   0             // Max level
  WRITE_LONG   0x00ce   0             // S. throw typ
  WRITE_LONG   0x00d2   0             // S. throw bon
  WRITE_LONG   0x00d6   0             // Special
  WRITE_SHORT  0x00da   33            // Opcode
  WRITE_BYTE   0x00dc   1             // Target type
  WRITE_BYTE   0x00dd   0             // Power
  WRITE_LONG   0x00de   1             // Parameter 1
  WRITE_LONG   0x00e2   0             // Parameter 2
  WRITE_BYTE   0x00e6   2             // Timing metho
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_LONG   0x00e8   0             // Duration
  WRITE_BYTE   0x00ec   100           // Max. prob.
  WRITE_BYTE   0x00ed   0             // Min. prob.
  WRITE_ASCII  0x00ee   ~~         #8 // Resource
  WRITE_LONG   0x00f6   0             // Min level
  WRITE_LONG   0x00fa   0             // Max level
  WRITE_LONG   0x00fe   0             // S. throw typ
  WRITE_LONG   0x0102   0             // S. throw bon
  WRITE_LONG   0x0106   0             // Special
  WRITE_SHORT  0x010a   34            // Opcode
  WRITE_BYTE   0x010c   1             // Target type
  WRITE_BYTE   0x010d   0             // Power
  WRITE_LONG   0x010e   1             // Parameter 1
  WRITE_LONG   0x0112   0             // Parameter 2
  WRITE_BYTE   0x0116   2             // Timing metho
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_LONG   0x0118   0             // Duration
  WRITE_BYTE   0x011c   100           // Max. prob.
  WRITE_BYTE   0x011d   0             // Min. prob.
  WRITE_ASCII  0x011e   ~~         #8 // Resource
  WRITE_LONG   0x0126   0             // Min level
  WRITE_LONG   0x012a   0             // Max level
  WRITE_LONG   0x012e   0             // S. throw typ
  WRITE_LONG   0x0132   0             // S. throw bon
  WRITE_LONG   0x0136   0             // Special
  WRITE_SHORT  0x013a   35            // Opcode
  WRITE_BYTE   0x013c   1             // Target type
  WRITE_BYTE   0x013d   0             // Power
  WRITE_LONG   0x013e   1             // Parameter 1
  WRITE_LONG   0x0142   0             // Parameter 2
  WRITE_BYTE   0x0146   2             // Timing metho
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_LONG   0x0148   0             // Duration
  WRITE_BYTE   0x014c   100           // Max. prob.
  WRITE_BYTE   0x014d   0             // Min. prob.
  WRITE_ASCII  0x014e   ~~         #8 // Resource
  WRITE_LONG   0x0156   0             // Min level
  WRITE_LONG   0x015a   0             // Max level
  WRITE_LONG   0x015e   0             // S. throw typ
  WRITE_LONG   0x0162   0             // S. throw bon
  WRITE_LONG   0x0166   0             // Special
  WRITE_SHORT  0x016a   36            // Opcode
  WRITE_BYTE   0x016c   1             // Target type
  WRITE_BYTE   0x016d   0             // Power
  WRITE_LONG   0x016e   1             // Parameter 1
  WRITE_LONG   0x0172   0             // Parameter 2
  WRITE_BYTE   0x0176   2             // Timing metho
  WRITE_BYTE   0x0177   0             // Resistance
  WRITE_LONG   0x0178   0             // Duration
  WRITE_BYTE   0x017c   100           // Max. prob.
  WRITE_BYTE   0x017d   0             // Min. prob.
  WRITE_ASCII  0x017e   ~~         #8 // Resource
  WRITE_LONG   0x0186   0             // Min level
  WRITE_LONG   0x018a   0             // Max level
  WRITE_LONG   0x018e   0             // S. throw typ
  WRITE_LONG   0x0192   0             // S. throw bon
  WRITE_LONG   0x0196   0             // Special
  WRITE_SHORT  0x019a   37            // Opcode
  WRITE_BYTE   0x019c   1             // Target type
  WRITE_BYTE   0x019d   0             // Power
  WRITE_LONG   0x019e   1             // Parameter 1
  WRITE_LONG   0x01a2   0             // Parameter 2
  WRITE_BYTE   0x01a6   2             // Timing metho
  WRITE_BYTE   0x01a7   0             // Resistance
  WRITE_LONG   0x01a8   0             // Duration
  WRITE_BYTE   0x01ac   100           // Max. prob.
  WRITE_BYTE   0x01ad   0             // Min. prob.
  WRITE_ASCII  0x01ae   ~~         #8 // Resource
  WRITE_LONG   0x01b6   0             // Min level
  WRITE_LONG   0x01ba   0             // Max level
  WRITE_LONG   0x01be   0             // S. throw typ
  WRITE_LONG   0x01c2   0             // S. throw bon
  WRITE_LONG   0x01c6   0             // Special

COPY_EXISTING ~clck07.itm~ ~override/clck07.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x002d   8             // Kit 3
  WRITE_SHORT  0x0032   9             // MinCha
  WRITE_LONG   0x0034   27000         // Price
  WRITE_ASCII  0x0076   ~SPWI104B~ #8 // Use icon
  WRITE_SHORT  0x0080   60            // Range
  WRITE_SHORT  0x0090   1             // Feat. count
  WRITE_SHORT  0x00da   146           // Opcode
  WRITE_LONG   0x00de   10            // Parameter 1
  WRITE_LONG   0x00e2   0             // Parameter 2
  WRITE_BYTE   0x00e6   1             // Timing metho
  WRITE_BYTE   0x00ec   100           // Max. prob.
  WRITE_ASCII  0x00ee   ~SPWI104~  #8 // Resource
  SET bytes_to_remove = SOURCE_SIZE - 0x10a
  DELETE_BYTES 0x10a    bytes_to_remove
  SAY DESC     @9043

COPY_EXISTING ~clck26.itm~ ~override/clck26.itm~
  WRITE_LONG   0x000c   4405          // ID name
  WRITE_LONG   0x0018   104           // Attributes
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0054   17240         // ID desc
  WRITE_SHORT  0x0070   1             // Equip count
  WRITE_SHORT  0x0072   31            // Opcode
  WRITE_LONG   0x0076   50            // Parameter 1
  WRITE_LONG   0x007a   0             // Parameter 2
  SET bytes_to_remove = SOURCE_SIZE - 0xa2
  DELETE_BYTES 0xa2    bytes_to_remove
  SAY NAME2    @240
  SAY DESC     @241

COPY_EXISTING ~clck30.itm~ ~override/clck30.itm~
  WRITE_LONG   0x001e   0x00300400    // Usability
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x002b   3             // Kit 2
  WRITE_BYTE   0x002d   128           // Kit 3
  WRITE_BYTE   0x002f   58            // Kit 4
  WRITE_ASCII  0x003a   ~ICLCK27~  #8 // Inventory
  WRITE_ASCII  0x0044   ~gclck02~  #8 // Ground
  WRITE_SHORT  0x0070   5             // Equip count
  WRITE_SHORT  0x0072   7             // Opcode
  WRITE_LONG   0x0076   27            // Parameter 1
  WRITE_LONG   0x007a   5             // Parameter 2
  WRITE_ASCII  0x0086   ~~         #8 // Resource
  WRITE_SHORT  0x00a2   7             // Opcode
  WRITE_LONG   0x00a6   15            // Parameter 1
  WRITE_LONG   0x00aa   0             // Parameter 2
  WRITE_SHORT  0x00d2   7             // Opcode
  WRITE_LONG   0x00d6   48            // Parameter 1
  WRITE_LONG   0x00da   4             // Parameter 2
  WRITE_SHORT  0x0102   101           // Opcode
  WRITE_LONG   0x0106   0             // Parameter 1
  WRITE_SHORT  0x0132   142           // Opcode
  WRITE_LONG   0x0136   0             // Parameter 1
  WRITE_LONG   0x013a   37            // Parameter 2
  WRITE_BYTE   0x013f   2             // Resistance
  SET bytes_to_remove = SOURCE_SIZE - 0x162
  DELETE_BYTES 0x162    bytes_to_remove
  SAY DESC     @9022

COPY_EXISTING ~compon05.itm~ ~override/compon05.itm~
  WRITE_SHORT  0x0022   13128         // Animation
  WRITE_ASCII  0x003a   ~ICOMPO05~ #8 // Inventory
  WRITE_SHORT  0x0070   3             // Equip count
  WRITE_SHORT  0x0072   0             // Opcode
  WRITE_LONG   0x0076   3             // Parameter 1
  WRITE_LONG   0x007a   1             // Parameter 2
  WRITE_LONG   0x00a6   51            // Parameter 1
  WRITE_LONG   0x00aa   53            // Parameter 2
  WRITE_LONG   0x00d6   13            // Parameter 1
  WRITE_LONG   0x00da   48            // Parameter 2
  SET bytes_to_remove = SOURCE_SIZE - 0x102
  DELETE_BYTES 0x102    bytes_to_remove
  SAY DESC     @340

COPY_EXISTING ~dart03.itm~ ~override/dart03.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   40            // Stack
  WRITE_LONG   0x0060   1             // Magiclevel
  WRITE_SHORT  0x0086   1             // Thac0 bonus
  WRITE_SHORT  0x008c   1             // Dice bonus
  WRITE_SHORT  0x0090   2             // Feat. count
  WRITE_SHORT  0x009c   32            // Effect anima
  WRITE_BYTE   0x00dd   7             // Power
  WRITE_LONG   0x00e8   42            // Duration
  WRITE_BYTE   0x010d   7             // Power
  WRITE_LONG   0x0112   13            // Parameter 2
  WRITE_LONG   0x0118   42            // Duration
  SET bytes_to_remove = SOURCE_SIZE - 0x13a
  DELETE_BYTES 0x13a    bytes_to_remove
  SAY DESC     @9079

COPY_EXISTING ~dart04.itm~ ~override/dart04.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   40            // Stack
  WRITE_LONG   0x0060   1             // Magiclevel
  WRITE_SHORT  0x0086   1             // Thac0 bonus
  WRITE_SHORT  0x008c   1             // Dice bonus
  WRITE_SHORT  0x009c   32            // Effect anima
  WRITE_BYTE   0x00dd   7             // Power
  WRITE_BYTE   0x00e7   1             // Resistance
  WRITE_BYTE   0x010d   7             // Power
  SAY DESC     @9080

COPY_EXISTING ~deva.itm~ ~override/deva.itm~
  WRITE_SHORT  0x001c   17            // Itemtype
  WRITE_SHORT  0x0022   17229         // Animation
  WRITE_BYTE   0x0031   101           // Proficiency
  WRITE_LONG   0x004c   6             // Weight
  WRITE_SHORT  0x0070   8             // Equip count
  WRITE_SHORT  0x0084   4             // Speed
  WRITE_SHORT  0x008a   1             // Dice count
  WRITE_SHORT  0x008c   4             // Dice bonus
  WRITE_SHORT  0x0090   3             // Feat. count
  WRITE_SHORT  0x0092   8             // Feat. offset
  WRITE_SHORT  0x00aa   7             // Opcode
  WRITE_LONG   0x00ae   96            // Parameter 1
  WRITE_LONG   0x00b2   21            // Parameter 2
  WRITE_SHORT  0x00da   7             // Opcode
  WRITE_LONG   0x00de   38            // Parameter 1
  WRITE_LONG   0x00e2   20            // Parameter 2
  WRITE_SHORT  0x010a   7             // Opcode
  WRITE_LONG   0x010e   96            // Parameter 1
  WRITE_LONG   0x0112   16            // Parameter 2
  WRITE_SHORT  0x013a   177           // Opcode
  WRITE_LONG   0x013e   0             // Parameter 1
  WRITE_LONG   0x0142   2             // Parameter 2
  WRITE_ASCII  0x014e   ~macedisr~ #8 // Resource
  WRITE_SHORT  0x016a   98            // Opcode
  WRITE_LONG   0x016e   3             // Parameter 1
  WRITE_LONG   0x0172   3             // Parameter 2
  WRITE_SHORT  0x019a   296           // Opcode
  WRITE_LONG   0x019e   0             // Parameter 1
  WRITE_LONG   0x01a2   0             // Parameter 2
  WRITE_ASCII  0x01ae   ~SPCONFUS~ #8 // Resource
  WRITE_SHORT  0x01ca   267           // Opcode
  WRITE_LONG   0x01ce   14782         // Parameter 1
  WRITE_LONG   0x01d2   0             // Parameter 2
  WRITE_SHORT  0x01fa   233           // Opcode
  WRITE_LONG   0x01fe   1             // Parameter 1
  WRITE_LONG   0x0202   101           // Parameter 2
  WRITE_SHORT  0x022a   177           // Opcode
  WRITE_BYTE   0x022c   2             // Target type
  WRITE_LONG   0x022e   4             // Parameter 1
  WRITE_LONG   0x0232   3             // Parameter 2
  WRITE_BYTE   0x0236   1             // Timing metho
  WRITE_BYTE   0x0237   2             // Resistance
  WRITE_ASCII  0x023e   ~DIE~      #8 // Resource
  WRITE_LONG   0x024e   4             // S. throw typ
  WRITE_LONG   0x0252   "-4"          // S. throw bon
  WRITE_SHORT  0x025a   177           // Opcode
  WRITE_BYTE   0x025c   2             // Target type
  WRITE_LONG   0x025e   4             // Parameter 1
  WRITE_LONG   0x0262   3             // Parameter 2
  WRITE_BYTE   0x0266   1             // Timing metho
  WRITE_BYTE   0x0267   2             // Resistance
  WRITE_ASCII  0x026e   ~MESDIE~   #8 // Resource
  WRITE_SHORT  0x028a   177           // Opcode
  WRITE_LONG   0x028e   7             // Parameter 1
  WRITE_LONG   0x0292   7             // Parameter 2
  WRITE_ASCII  0x029e   ~DIE~      #8 // Resource
  DELETE_BYTES 0x2ba    672

COPY_EXISTING ~devaevil.itm~ ~override/devaevil.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0090   1             // Feat. count
  WRITE_SHORT  0x016a   177           // Opcode
  WRITE_BYTE   0x016d   0             // Power
  WRITE_LONG   0x016e   7             // Parameter 1
  WRITE_LONG   0x0172   7             // Parameter 2
  WRITE_BYTE   0x0177   2             // Resistance
  WRITE_ASCII  0x017e   ~DIE~      #8 // Resource
  DELETE_BYTES 0x19a    528

COPY_EXISTING ~dragblaw.itm~ ~override/dragblaw.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0070   2             // Equip count
  WRITE_SHORT  0x0090   2             // Feat. count
  WRITE_SHORT  0x0092   2             // Feat. offset
  INSERT_BYTES 0x00da   48            // new feature block
  WRITE_SHORT  0x00da   98            // Opcode
  WRITE_BYTE   0x00dc   1             // Target type
  WRITE_BYTE   0x00dd   0             // Power
  WRITE_LONG   0x00de   2             // Parameter 1
  WRITE_LONG   0x00e2   3             // Parameter 2
  WRITE_BYTE   0x00e6   2             // Timing metho
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_LONG   0x00e8   0             // Duration
  WRITE_BYTE   0x00ec   100           // Max. prob.
  WRITE_BYTE   0x00ed   0             // Min. prob.
  WRITE_ASCII  0x00ee   ~~         #8 // Resource
  WRITE_LONG   0x00f6   0             // Min level
  WRITE_LONG   0x00fa   0             // Max level
  WRITE_LONG   0x00fe   0             // S. throw typ
  WRITE_LONG   0x0102   0             // S. throw bon
  WRITE_LONG   0x0106   0             // Special
  INSERT_BYTES 0x010a   48            // new feature block
  WRITE_SHORT  0x010a   27            // Opcode
  WRITE_BYTE   0x010c   2             // Target type
  WRITE_BYTE   0x010d   0             // Power
  WRITE_LONG   0x010e   "-20"         // Parameter 1
  WRITE_LONG   0x0112   0             // Parameter 2
  WRITE_BYTE   0x0116   0             // Timing metho
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_LONG   0x0118   30            // Duration
  WRITE_BYTE   0x011c   25            // Max. prob.
  WRITE_BYTE   0x011d   0             // Min. prob.
  WRITE_ASCII  0x011e   ~~         #8 // Resource
  WRITE_LONG   0x0126   0             // Min level
  WRITE_LONG   0x012a   0             // Max level
  WRITE_LONG   0x012e   0             // S. throw typ
  WRITE_LONG   0x0132   0             // S. throw bon
  WRITE_LONG   0x0136   0             // Special
  INSERT_BYTES 0x013a   48            // new feature block
  WRITE_SHORT  0x013a   12            // Opcode
  WRITE_BYTE   0x013c   2             // Target type
  WRITE_BYTE   0x013d   0             // Power
  WRITE_LONG   0x013e   0             // Parameter 1
  WRITE_LONG   0x0142   65536         // Parameter 2
  WRITE_BYTE   0x0146   1             // Timing metho
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_LONG   0x0148   0             // Duration
  WRITE_BYTE   0x014c   100           // Max. prob.
  WRITE_BYTE   0x014d   0             // Min. prob.
  WRITE_ASCII  0x014e   ~~         #8 // Resource
  WRITE_LONG   0x0156   2             // Min level
  WRITE_LONG   0x015a   6             // Max level
  WRITE_LONG   0x015e   0             // S. throw typ
  WRITE_LONG   0x0162   0             // S. throw bon
  WRITE_LONG   0x0166   0             // Special

COPY_EXISTING ~earthrn.itm~ ~override/earthrn.itm~
  WRITE_LONG   0x0018   96            // Attributes
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0060   3             // Magiclevel
  WRITE_SHORT  0x0070   1             // Equip count
  WRITE_SHORT  0x0092   1             // Feat. offset
  WRITE_SHORT  0x00aa   120           // Opcode
  WRITE_LONG   0x00b2   2             // Parameter 2
  SET bytes_to_remove = SOURCE_SIZE - 0xda
  DELETE_BYTES 0xda    bytes_to_remove

COPY_EXISTING ~elemchan.itm~ ~override/elemchan.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0060   4             // Magiclevel
  WRITE_SHORT  0x008a   2             // Dice count
  WRITE_SHORT  0x0090   1             // Feat. count
  WRITE_BYTE   0x00b7   3             // Resistance
  WRITE_SHORT  0x010a   12            // Opcode
  WRITE_BYTE   0x010d   5             // Power
  WRITE_LONG   0x0112   262144        // Parameter 2
  WRITE_LONG   0x0126   2             // Min level
  WRITE_LONG   0x012a   10            // Max level
  DELETE_BYTES 0x13a    480

COPY_EXISTING ~elemogre.itm~ ~override/elemogre.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0060   4             // Magiclevel
  WRITE_SHORT  0x0070   3             // Equip count
  WRITE_SHORT  0x0086   4             // Thac0 bonus
  WRITE_SHORT  0x0090   42            // Feat. count
  WRITE_SHORT  0x0092   3             // Feat. offset
  WRITE_SHORT  0x00aa   31            // Opcode
  WRITE_BYTE   0x00ac   1             // Target type
  WRITE_BYTE   0x00ad   0             // Power
  WRITE_LONG   0x00ae   30            // Parameter 1
  WRITE_LONG   0x00b2   0             // Parameter 2
  WRITE_BYTE   0x00b6   2             // Timing metho
  WRITE_SHORT  0x00da   98            // Opcode
  WRITE_BYTE   0x00dc   1             // Target type
  WRITE_BYTE   0x00dd   0             // Power
  WRITE_LONG   0x00de   3             // Parameter 1
  WRITE_LONG   0x00e2   3             // Parameter 2
  WRITE_BYTE   0x00e6   2             // Timing metho
  WRITE_SHORT  0x010a   206           // Opcode
  WRITE_BYTE   0x010c   1             // Target type
  WRITE_BYTE   0x010d   0             // Power
  WRITE_LONG   0x010e   0             // Parameter 1
  WRITE_LONG   0x0112   0             // Parameter 2
  WRITE_BYTE   0x0116   2             // Timing metho
  WRITE_ASCII  0x011e   ~SPWI513~  #8 // Resource
  WRITE_BYTE   0x013d   0             // Power
  WRITE_LONG   0x0142   0             // Parameter 2
  WRITE_SHORT  0x016a   221           // Opcode
  WRITE_BYTE   0x016d   0             // Power
  WRITE_LONG   0x016e   9             // Parameter 1
  WRITE_LONG   0x0172   2             // Parameter 2
  WRITE_SHORT  0x019a   221           // Opcode
  WRITE_BYTE   0x019d   0             // Power
  WRITE_LONG   0x019e   9             // Parameter 1
  WRITE_LONG   0x01a2   3             // Parameter 2
  WRITE_BYTE   0x01a6   1             // Timing metho
  WRITE_ASCII  0x01ae   ~~         #8 // Resource
  WRITE_SHORT  0x01ca   139           // Opcode
  WRITE_BYTE   0x01cd   0             // Power
  WRITE_LONG   0x01ce   14056         // Parameter 1
  WRITE_LONG   0x01d2   0             // Parameter 2
  WRITE_BYTE   0x01d7   0             // Resistance
  WRITE_ASCII  0x01de   ~~         #8 // Resource
  WRITE_SHORT  0x01fa   112           // Opcode
  WRITE_LONG   0x0202   0             // Parameter 2
  WRITE_BYTE   0x0206   1             // Timing metho
  WRITE_LONG   0x0208   0             // Duration
  WRITE_ASCII  0x020e   ~fblade~   #8 // Resource
  WRITE_SHORT  0x022a   112           // Opcode
  WRITE_ASCII  0x023e   ~shammr~   #8 // Resource
  WRITE_SHORT  0x025a   112           // Opcode
  WRITE_LONG   0x0262   0             // Parameter 2
  WRITE_ASCII  0x026e   ~shille~   #8 // Resource
  INSERT_BYTES 0x028a   48            // new feature block
  WRITE_SHORT  0x028a   112           // Opcode
  WRITE_BYTE   0x028c   2             // Target type
  WRITE_BYTE   0x028d   15            // Power
  WRITE_LONG   0x028e   0             // Parameter 1
  WRITE_LONG   0x0292   0             // Parameter 2
  WRITE_BYTE   0x0296   1             // Timing metho
  WRITE_BYTE   0x0297   0             // Resistance
  WRITE_LONG   0x0298   0             // Duration
  WRITE_BYTE   0x029c   100           // Max. prob.
  WRITE_BYTE   0x029d   0             // Min. prob.
  WRITE_ASCII  0x029e   ~ghoult~   #8 // Resource
  WRITE_LONG   0x02a6   0             // Min level
  WRITE_LONG   0x02aa   0             // Max level
  WRITE_LONG   0x02ae   0             // S. throw typ
  WRITE_LONG   0x02b2   0             // S. throw bon
  WRITE_LONG   0x02b6   0             // Special
  INSERT_BYTES 0x02ba   48            // new feature block
  WRITE_SHORT  0x02ba   112           // Opcode
  WRITE_BYTE   0x02bc   2             // Target type
  WRITE_BYTE   0x02bd   15            // Power
  WRITE_LONG   0x02be   0             // Parameter 1
  WRITE_LONG   0x02c2   0             // Parameter 2
  WRITE_BYTE   0x02c6   1             // Timing metho
  WRITE_BYTE   0x02c7   0             // Resistance
  WRITE_LONG   0x02c8   0             // Duration
  WRITE_BYTE   0x02cc   100           // Max. prob.
  WRITE_BYTE   0x02cd   0             // Min. prob.
  WRITE_ASCII  0x02ce   ~chillt~   #8 // Resource
  WRITE_LONG   0x02d6   0             // Min level
  WRITE_LONG   0x02da   0             // Max level
  WRITE_LONG   0x02de   0             // S. throw typ
  WRITE_LONG   0x02e2   0             // S. throw bon
  WRITE_LONG   0x02e6   0             // Special
  INSERT_BYTES 0x02ea   48            // new feature block
  WRITE_SHORT  0x02ea   174           // Opcode
  WRITE_BYTE   0x02ec   2             // Target type
  WRITE_BYTE   0x02ed   15            // Power
  WRITE_LONG   0x02ee   0             // Parameter 1
  WRITE_LONG   0x02f2   0             // Parameter 2
  WRITE_BYTE   0x02f6   0             // Timing metho
  WRITE_BYTE   0x02f7   0             // Resistance
  WRITE_LONG   0x02f8   0             // Duration
  WRITE_BYTE   0x02fc   100           // Max. prob.
  WRITE_BYTE   0x02fd   0             // Min. prob.
  WRITE_ASCII  0x02fe   ~EFF_M10~  #8 // Resource
  WRITE_LONG   0x0306   0             // Min level
  WRITE_LONG   0x030a   0             // Max level
  WRITE_LONG   0x030e   0             // S. throw typ
  WRITE_LONG   0x0312   0             // S. throw bon
  WRITE_LONG   0x0316   0             // Special
  INSERT_BYTES 0x031a   48            // new feature block
  WRITE_SHORT  0x031a   177           // Opcode
  WRITE_BYTE   0x031c   2             // Target type
  WRITE_BYTE   0x031d   15            // Power
  WRITE_LONG   0x031e   7             // Parameter 1
  WRITE_LONG   0x0322   7             // Parameter 2
  WRITE_BYTE   0x0326   1             // Timing metho
  WRITE_BYTE   0x0327   2             // Resistance
  WRITE_LONG   0x0328   0             // Duration
  WRITE_BYTE   0x032c   100           // Max. prob.
  WRITE_BYTE   0x032d   0             // Min. prob.
  WRITE_ASCII  0x032e   ~die~      #8 // Resource
  WRITE_LONG   0x0336   0             // Min level
  WRITE_LONG   0x033a   0             // Max level
  WRITE_LONG   0x033e   0             // S. throw typ
  WRITE_LONG   0x0342   0             // S. throw bon
  WRITE_LONG   0x0346   0             // Special
  INSERT_BYTES 0x034a   48            // new feature block
  WRITE_SHORT  0x034a   112           // Opcode
  WRITE_BYTE   0x034c   2             // Target type
  WRITE_BYTE   0x034d   15            // Power
  WRITE_LONG   0x034e   0             // Parameter 1
  WRITE_LONG   0x0352   0             // Parameter 2
  WRITE_BYTE   0x0356   1             // Timing metho
  WRITE_BYTE   0x0357   0             // Resistance
  WRITE_LONG   0x0358   0             // Duration
  WRITE_BYTE   0x035c   100           // Max. prob.
  WRITE_BYTE   0x035d   0             // Min. prob.
  WRITE_ASCII  0x035e   ~hsword~   #8 // Resource
  WRITE_LONG   0x0366   0             // Min level
  WRITE_LONG   0x036a   0             // Max level
  WRITE_LONG   0x036e   0             // S. throw typ
  WRITE_LONG   0x0372   0             // S. throw bon
  WRITE_LONG   0x0376   0             // Special
  INSERT_BYTES 0x037a   48            // new feature block
  WRITE_SHORT  0x037a   215           // Opcode
  WRITE_BYTE   0x037c   2             // Target type
  WRITE_BYTE   0x037d   15            // Power
  WRITE_LONG   0x037e   0             // Parameter 1
  WRITE_LONG   0x0382   1             // Parameter 2
  WRITE_BYTE   0x0386   0             // Timing metho
  WRITE_BYTE   0x0387   1             // Resistance
  WRITE_LONG   0x0388   1             // Duration
  WRITE_BYTE   0x038c   100           // Max. prob.
  WRITE_BYTE   0x038d   0             // Min. prob.
  WRITE_ASCII  0x038e   ~SPDISPMA~ #8 // Resource
  WRITE_LONG   0x0396   0             // Min level
  WRITE_LONG   0x039a   0             // Max level
  WRITE_LONG   0x039e   0             // S. throw typ
  WRITE_LONG   0x03a2   0             // S. throw bon
  WRITE_LONG   0x03a6   0             // Special
  INSERT_BYTES 0x03aa   48            // new feature block
  WRITE_SHORT  0x03aa   112           // Opcode
  WRITE_BYTE   0x03ac   2             // Target type
  WRITE_BYTE   0x03ad   15            // Power
  WRITE_LONG   0x03ae   0             // Parameter 1
  WRITE_LONG   0x03b2   0             // Parameter 2
  WRITE_BYTE   0x03b6   1             // Timing metho
  WRITE_BYTE   0x03b7   0             // Resistance
  WRITE_LONG   0x03b8   0             // Duration
  WRITE_BYTE   0x03bc   100           // Max. prob.
  WRITE_BYTE   0x03bd   0             // Min. prob.
  WRITE_ASCII  0x03be   ~sgrasp~   #8 // Resource
  WRITE_LONG   0x03c6   0             // Min level
  WRITE_LONG   0x03ca   "-1"          // Max level
  WRITE_LONG   0x03ce   0             // S. throw typ
  WRITE_LONG   0x03d2   0             // S. throw bon
  WRITE_LONG   0x03d6   0             // Special
  INSERT_BYTES 0x03da   48            // new feature block
  WRITE_SHORT  0x03da   112           // Opcode
  WRITE_BYTE   0x03dc   2             // Target type
  WRITE_BYTE   0x03dd   15            // Power
  WRITE_LONG   0x03de   0             // Parameter 1
  WRITE_LONG   0x03e2   0             // Parameter 2
  WRITE_BYTE   0x03e6   1             // Timing metho
  WRITE_BYTE   0x03e7   0             // Resistance
  WRITE_LONG   0x03e8   0             // Duration
  WRITE_BYTE   0x03ec   100           // Max. prob.
  WRITE_BYTE   0x03ed   0             // Min. prob.
  WRITE_ASCII  0x03ee   ~sgrasp01~ #8 // Resource
  WRITE_LONG   0x03f6   0             // Min level
  WRITE_LONG   0x03fa   "-1"          // Max level
  WRITE_LONG   0x03fe   0             // S. throw typ
  WRITE_LONG   0x0402   0             // S. throw bon
  WRITE_LONG   0x0406   0             // Special
  INSERT_BYTES 0x040a   48            // new feature block
  WRITE_SHORT  0x040a   112           // Opcode
  WRITE_BYTE   0x040c   2             // Target type
  WRITE_BYTE   0x040d   15            // Power
  WRITE_LONG   0x040e   0             // Parameter 1
  WRITE_LONG   0x0412   0             // Parameter 2
  WRITE_BYTE   0x0416   1             // Timing metho
  WRITE_BYTE   0x0417   0             // Resistance
  WRITE_LONG   0x0418   0             // Duration
  WRITE_BYTE   0x041c   100           // Max. prob.
  WRITE_BYTE   0x041d   0             // Min. prob.
  WRITE_ASCII  0x041e   ~sgrasp02~ #8 // Resource
  WRITE_LONG   0x0426   0             // Min level
  WRITE_LONG   0x042a   "-1"          // Max level
  WRITE_LONG   0x042e   0             // S. throw typ
  WRITE_LONG   0x0432   0             // S. throw bon
  WRITE_LONG   0x0436   0             // Special
  INSERT_BYTES 0x043a   48            // new feature block
  WRITE_SHORT  0x043a   112           // Opcode
  WRITE_BYTE   0x043c   2             // Target type
  WRITE_BYTE   0x043d   15            // Power
  WRITE_LONG   0x043e   0             // Parameter 1
  WRITE_LONG   0x0442   0             // Parameter 2
  WRITE_BYTE   0x0446   1             // Timing metho
  WRITE_BYTE   0x0447   0             // Resistance
  WRITE_LONG   0x0448   0             // Duration
  WRITE_BYTE   0x044c   100           // Max. prob.
  WRITE_BYTE   0x044d   0             // Min. prob.
  WRITE_ASCII  0x044e   ~sgrasp03~ #8 // Resource
  WRITE_LONG   0x0456   0             // Min level
  WRITE_LONG   0x045a   "-1"          // Max level
  WRITE_LONG   0x045e   0             // S. throw typ
  WRITE_LONG   0x0462   0             // S. throw bon
  WRITE_LONG   0x0466   0             // Special
  INSERT_BYTES 0x046a   48            // new feature block
  WRITE_SHORT  0x046a   112           // Opcode
  WRITE_BYTE   0x046c   2             // Target type
  WRITE_BYTE   0x046d   15            // Power
  WRITE_LONG   0x046e   0             // Parameter 1
  WRITE_LONG   0x0472   0             // Parameter 2
  WRITE_BYTE   0x0476   1             // Timing metho
  WRITE_BYTE   0x0477   0             // Resistance
  WRITE_LONG   0x0478   0             // Duration
  WRITE_BYTE   0x047c   100           // Max. prob.
  WRITE_BYTE   0x047d   0             // Min. prob.
  WRITE_ASCII  0x047e   ~sgrasp04~ #8 // Resource
  WRITE_LONG   0x0486   0             // Min level
  WRITE_LONG   0x048a   "-1"          // Max level
  WRITE_LONG   0x048e   0             // S. throw typ
  WRITE_LONG   0x0492   0             // S. throw bon
  WRITE_LONG   0x0496   0             // Special
  INSERT_BYTES 0x049a   48            // new feature block
  WRITE_SHORT  0x049a   112           // Opcode
  WRITE_BYTE   0x049c   2             // Target type
  WRITE_BYTE   0x049d   15            // Power
  WRITE_LONG   0x049e   0             // Parameter 1
  WRITE_LONG   0x04a2   0             // Parameter 2
  WRITE_BYTE   0x04a6   1             // Timing metho
  WRITE_BYTE   0x04a7   0             // Resistance
  WRITE_LONG   0x04a8   0             // Duration
  WRITE_BYTE   0x04ac   100           // Max. prob.
  WRITE_BYTE   0x04ad   0             // Min. prob.
  WRITE_ASCII  0x04ae   ~sgrasp05~ #8 // Resource
  WRITE_LONG   0x04b6   0             // Min level
  WRITE_LONG   0x04ba   "-1"          // Max level
  WRITE_LONG   0x04be   0             // S. throw typ
  WRITE_LONG   0x04c2   0             // S. throw bon
  WRITE_LONG   0x04c6   0             // Special
  INSERT_BYTES 0x04ca   48            // new feature block
  WRITE_SHORT  0x04ca   112           // Opcode
  WRITE_BYTE   0x04cc   2             // Target type
  WRITE_BYTE   0x04cd   15            // Power
  WRITE_LONG   0x04ce   0             // Parameter 1
  WRITE_LONG   0x04d2   0             // Parameter 2
  WRITE_BYTE   0x04d6   1             // Timing metho
  WRITE_BYTE   0x04d7   0             // Resistance
  WRITE_LONG   0x04d8   0             // Duration
  WRITE_BYTE   0x04dc   100           // Max. prob.
  WRITE_BYTE   0x04dd   0             // Min. prob.
  WRITE_ASCII  0x04de   ~sgrasp06~ #8 // Resource
  WRITE_LONG   0x04e6   0             // Min level
  WRITE_LONG   0x04ea   "-1"          // Max level
  WRITE_LONG   0x04ee   0             // S. throw typ
  WRITE_LONG   0x04f2   0             // S. throw bon
  WRITE_LONG   0x04f6   0             // Special
  INSERT_BYTES 0x04fa   48            // new feature block
  WRITE_SHORT  0x04fa   112           // Opcode
  WRITE_BYTE   0x04fc   2             // Target type
  WRITE_BYTE   0x04fd   15            // Power
  WRITE_LONG   0x04fe   0             // Parameter 1
  WRITE_LONG   0x0502   0             // Parameter 2
  WRITE_BYTE   0x0506   1             // Timing metho
  WRITE_BYTE   0x0507   0             // Resistance
  WRITE_LONG   0x0508   0             // Duration
  WRITE_BYTE   0x050c   100           // Max. prob.
  WRITE_BYTE   0x050d   0             // Min. prob.
  WRITE_ASCII  0x050e   ~sgrasp07~ #8 // Resource
  WRITE_LONG   0x0516   0             // Min level
  WRITE_LONG   0x051a   "-1"          // Max level
  WRITE_LONG   0x051e   0             // S. throw typ
  WRITE_LONG   0x0522   0             // S. throw bon
  WRITE_LONG   0x0526   0             // Special
  INSERT_BYTES 0x052a   48            // new feature block
  WRITE_SHORT  0x052a   112           // Opcode
  WRITE_BYTE   0x052c   2             // Target type
  WRITE_BYTE   0x052d   15            // Power
  WRITE_LONG   0x052e   0             // Parameter 1
  WRITE_LONG   0x0532   0             // Parameter 2
  WRITE_BYTE   0x0536   1             // Timing metho
  WRITE_BYTE   0x0537   0             // Resistance
  WRITE_LONG   0x0538   0             // Duration
  WRITE_BYTE   0x053c   100           // Max. prob.
  WRITE_BYTE   0x053d   0             // Min. prob.
  WRITE_ASCII  0x053e   ~sgrasp08~ #8 // Resource
  WRITE_LONG   0x0546   0             // Min level
  WRITE_LONG   0x054a   "-1"          // Max level
  WRITE_LONG   0x054e   0             // S. throw typ
  WRITE_LONG   0x0552   0             // S. throw bon
  WRITE_LONG   0x0556   0             // Special
  INSERT_BYTES 0x055a   48            // new feature block
  WRITE_SHORT  0x055a   112           // Opcode
  WRITE_BYTE   0x055c   2             // Target type
  WRITE_BYTE   0x055d   15            // Power
  WRITE_LONG   0x055e   0             // Parameter 1
  WRITE_LONG   0x0562   0             // Parameter 2
  WRITE_BYTE   0x0566   1             // Timing metho
  WRITE_BYTE   0x0567   0             // Resistance
  WRITE_LONG   0x0568   0             // Duration
  WRITE_BYTE   0x056c   100           // Max. prob.
  WRITE_BYTE   0x056d   0             // Min. prob.
  WRITE_ASCII  0x056e   ~sgrasp09~ #8 // Resource
  WRITE_LONG   0x0576   0             // Min level
  WRITE_LONG   0x057a   "-1"          // Max level
  WRITE_LONG   0x057e   0             // S. throw typ
  WRITE_LONG   0x0582   0             // S. throw bon
  WRITE_LONG   0x0586   0             // Special
  INSERT_BYTES 0x058a   48            // new feature block
  WRITE_SHORT  0x058a   112           // Opcode
  WRITE_BYTE   0x058c   2             // Target type
  WRITE_BYTE   0x058d   15            // Power
  WRITE_LONG   0x058e   0             // Parameter 1
  WRITE_LONG   0x0592   0             // Parameter 2
  WRITE_BYTE   0x0596   1             // Timing metho
  WRITE_BYTE   0x0597   0             // Resistance
  WRITE_LONG   0x0598   0             // Duration
  WRITE_BYTE   0x059c   100           // Max. prob.
  WRITE_BYTE   0x059d   0             // Min. prob.
  WRITE_ASCII  0x059e   ~sgrasp10~ #8 // Resource
  WRITE_LONG   0x05a6   0             // Min level
  WRITE_LONG   0x05aa   "-1"          // Max level
  WRITE_LONG   0x05ae   0             // S. throw typ
  WRITE_LONG   0x05b2   0             // S. throw bon
  WRITE_LONG   0x05b6   0             // Special
  INSERT_BYTES 0x05ba   48            // new feature block
  WRITE_SHORT  0x05ba   112           // Opcode
  WRITE_BYTE   0x05bc   2             // Target type
  WRITE_BYTE   0x05bd   15            // Power
  WRITE_LONG   0x05be   0             // Parameter 1
  WRITE_LONG   0x05c2   0             // Parameter 2
  WRITE_BYTE   0x05c6   1             // Timing metho
  WRITE_BYTE   0x05c7   0             // Resistance
  WRITE_LONG   0x05c8   0             // Duration
  WRITE_BYTE   0x05cc   100           // Max. prob.
  WRITE_BYTE   0x05cd   0             // Min. prob.
  WRITE_ASCII  0x05ce   ~sgrasp11~ #8 // Resource
  WRITE_LONG   0x05d6   0             // Min level
  WRITE_LONG   0x05da   "-1"          // Max level
  WRITE_LONG   0x05de   0             // S. throw typ
  WRITE_LONG   0x05e2   0             // S. throw bon
  WRITE_LONG   0x05e6   0             // Special
  INSERT_BYTES 0x05ea   48            // new feature block
  WRITE_SHORT  0x05ea   112           // Opcode
  WRITE_BYTE   0x05ec   2             // Target type
  WRITE_BYTE   0x05ed   15            // Power
  WRITE_LONG   0x05ee   0             // Parameter 1
  WRITE_LONG   0x05f2   0             // Parameter 2
  WRITE_BYTE   0x05f6   1             // Timing metho
  WRITE_BYTE   0x05f7   0             // Resistance
  WRITE_LONG   0x05f8   0             // Duration
  WRITE_BYTE   0x05fc   100           // Max. prob.
  WRITE_BYTE   0x05fd   0             // Min. prob.
  WRITE_ASCII  0x05fe   ~sgrasp12~ #8 // Resource
  WRITE_LONG   0x0606   0             // Min level
  WRITE_LONG   0x060a   "-1"          // Max level
  WRITE_LONG   0x060e   0             // S. throw typ
  WRITE_LONG   0x0612   0             // S. throw bon
  WRITE_LONG   0x0616   0             // Special
  INSERT_BYTES 0x061a   48            // new feature block
  WRITE_SHORT  0x061a   112           // Opcode
  WRITE_BYTE   0x061c   2             // Target type
  WRITE_BYTE   0x061d   15            // Power
  WRITE_LONG   0x061e   0             // Parameter 1
  WRITE_LONG   0x0622   0             // Parameter 2
  WRITE_BYTE   0x0626   1             // Timing metho
  WRITE_BYTE   0x0627   0             // Resistance
  WRITE_LONG   0x0628   0             // Duration
  WRITE_BYTE   0x062c   100           // Max. prob.
  WRITE_BYTE   0x062d   0             // Min. prob.
  WRITE_ASCII  0x062e   ~sgrasp13~ #8 // Resource
  WRITE_LONG   0x0636   0             // Min level
  WRITE_LONG   0x063a   "-1"          // Max level
  WRITE_LONG   0x063e   0             // S. throw typ
  WRITE_LONG   0x0642   0             // S. throw bon
  WRITE_LONG   0x0646   0             // Special
  INSERT_BYTES 0x064a   48            // new feature block
  WRITE_SHORT  0x064a   112           // Opcode
  WRITE_BYTE   0x064c   2             // Target type
  WRITE_BYTE   0x064d   15            // Power
  WRITE_LONG   0x064e   0             // Parameter 1
  WRITE_LONG   0x0652   0             // Parameter 2
  WRITE_BYTE   0x0656   1             // Timing metho
  WRITE_BYTE   0x0657   0             // Resistance
  WRITE_LONG   0x0658   0             // Duration
  WRITE_BYTE   0x065c   100           // Max. prob.
  WRITE_BYTE   0x065d   0             // Min. prob.
  WRITE_ASCII  0x065e   ~sgrasp14~ #8 // Resource
  WRITE_LONG   0x0666   0             // Min level
  WRITE_LONG   0x066a   "-1"          // Max level
  WRITE_LONG   0x066e   0             // S. throw typ
  WRITE_LONG   0x0672   0             // S. throw bon
  WRITE_LONG   0x0676   0             // Special
  INSERT_BYTES 0x067a   48            // new feature block
  WRITE_SHORT  0x067a   112           // Opcode
  WRITE_BYTE   0x067c   2             // Target type
  WRITE_BYTE   0x067d   15            // Power
  WRITE_LONG   0x067e   0             // Parameter 1
  WRITE_LONG   0x0682   0             // Parameter 2
  WRITE_BYTE   0x0686   1             // Timing metho
  WRITE_BYTE   0x0687   0             // Resistance
  WRITE_LONG   0x0688   0             // Duration
  WRITE_BYTE   0x068c   100           // Max. prob.
  WRITE_BYTE   0x068d   0             // Min. prob.
  WRITE_ASCII  0x068e   ~sgrasp15~ #8 // Resource
  WRITE_LONG   0x0696   0             // Min level
  WRITE_LONG   0x069a   "-1"          // Max level
  WRITE_LONG   0x069e   0             // S. throw typ
  WRITE_LONG   0x06a2   0             // S. throw bon
  WRITE_LONG   0x06a6   0             // Special
  INSERT_BYTES 0x06aa   48            // new feature block
  WRITE_SHORT  0x06aa   112           // Opcode
  WRITE_BYTE   0x06ac   2             // Target type
  WRITE_BYTE   0x06ad   15            // Power
  WRITE_LONG   0x06ae   0             // Parameter 1
  WRITE_LONG   0x06b2   0             // Parameter 2
  WRITE_BYTE   0x06b6   1             // Timing metho
  WRITE_BYTE   0x06b7   0             // Resistance
  WRITE_LONG   0x06b8   0             // Duration
  WRITE_BYTE   0x06bc   100           // Max. prob.
  WRITE_BYTE   0x06bd   0             // Min. prob.
  WRITE_ASCII  0x06be   ~sgrasp17~ #8 // Resource
  WRITE_LONG   0x06c6   0             // Min level
  WRITE_LONG   0x06ca   "-1"          // Max level
  WRITE_LONG   0x06ce   0             // S. throw typ
  WRITE_LONG   0x06d2   0             // S. throw bon
  WRITE_LONG   0x06d6   0             // Special
  INSERT_BYTES 0x06da   48            // new feature block
  WRITE_SHORT  0x06da   112           // Opcode
  WRITE_BYTE   0x06dc   2             // Target type
  WRITE_BYTE   0x06dd   15            // Power
  WRITE_LONG   0x06de   0             // Parameter 1
  WRITE_LONG   0x06e2   0             // Parameter 2
  WRITE_BYTE   0x06e6   1             // Timing metho
  WRITE_BYTE   0x06e7   0             // Resistance
  WRITE_LONG   0x06e8   0             // Duration
  WRITE_BYTE   0x06ec   100           // Max. prob.
  WRITE_BYTE   0x06ed   0             // Min. prob.
  WRITE_ASCII  0x06ee   ~sgrasp18~ #8 // Resource
  WRITE_LONG   0x06f6   0             // Min level
  WRITE_LONG   0x06fa   "-1"          // Max level
  WRITE_LONG   0x06fe   0             // S. throw typ
  WRITE_LONG   0x0702   0             // S. throw bon
  WRITE_LONG   0x0706   0             // Special
  INSERT_BYTES 0x070a   48            // new feature block
  WRITE_SHORT  0x070a   112           // Opcode
  WRITE_BYTE   0x070c   2             // Target type
  WRITE_BYTE   0x070d   15            // Power
  WRITE_LONG   0x070e   0             // Parameter 1
  WRITE_LONG   0x0712   0             // Parameter 2
  WRITE_BYTE   0x0716   1             // Timing metho
  WRITE_BYTE   0x0717   0             // Resistance
  WRITE_LONG   0x0718   0             // Duration
  WRITE_BYTE   0x071c   100           // Max. prob.
  WRITE_BYTE   0x071d   0             // Min. prob.
  WRITE_ASCII  0x071e   ~sgrasp19~ #8 // Resource
  WRITE_LONG   0x0726   0             // Min level
  WRITE_LONG   0x072a   "-1"          // Max level
  WRITE_LONG   0x072e   0             // S. throw typ
  WRITE_LONG   0x0732   0             // S. throw bon
  WRITE_LONG   0x0736   0             // Special
  INSERT_BYTES 0x073a   48            // new feature block
  WRITE_SHORT  0x073a   112           // Opcode
  WRITE_BYTE   0x073c   2             // Target type
  WRITE_BYTE   0x073d   15            // Power
  WRITE_LONG   0x073e   0             // Parameter 1
  WRITE_LONG   0x0742   0             // Parameter 2
  WRITE_BYTE   0x0746   1             // Timing metho
  WRITE_BYTE   0x0747   0             // Resistance
  WRITE_LONG   0x0748   0             // Duration
  WRITE_BYTE   0x074c   100           // Max. prob.
  WRITE_BYTE   0x074d   0             // Min. prob.
  WRITE_ASCII  0x074e   ~sgrasp20~ #8 // Resource
  WRITE_LONG   0x0756   0             // Min level
  WRITE_LONG   0x075a   "-1"          // Max level
  WRITE_LONG   0x075e   0             // S. throw typ
  WRITE_LONG   0x0762   0             // S. throw bon
  WRITE_LONG   0x0766   0             // Special
  INSERT_BYTES 0x076a   48            // new feature block
  WRITE_SHORT  0x076a   112           // Opcode
  WRITE_BYTE   0x076c   2             // Target type
  WRITE_BYTE   0x076d   15            // Power
  WRITE_LONG   0x076e   0             // Parameter 1
  WRITE_LONG   0x0772   0             // Parameter 2
  WRITE_BYTE   0x0776   1             // Timing metho
  WRITE_BYTE   0x0777   0             // Resistance
  WRITE_LONG   0x0778   0             // Duration
  WRITE_BYTE   0x077c   100           // Max. prob.
  WRITE_BYTE   0x077d   0             // Min. prob.
  WRITE_ASCII  0x077e   ~shammr3~  #8 // Resource
  WRITE_LONG   0x0786   0             // Min level
  WRITE_LONG   0x078a   "-1"          // Max level
  WRITE_LONG   0x078e   0             // S. throw typ
  WRITE_LONG   0x0792   0             // S. throw bon
  WRITE_LONG   0x0796   0             // Special
  INSERT_BYTES 0x079a   48            // new feature block
  WRITE_SHORT  0x079a   112           // Opcode
  WRITE_BYTE   0x079c   2             // Target type
  WRITE_BYTE   0x079d   15            // Power
  WRITE_LONG   0x079e   0             // Parameter 1
  WRITE_LONG   0x07a2   0             // Parameter 2
  WRITE_BYTE   0x07a6   1             // Timing metho
  WRITE_BYTE   0x07a7   0             // Resistance
  WRITE_LONG   0x07a8   0             // Duration
  WRITE_BYTE   0x07ac   100           // Max. prob.
  WRITE_BYTE   0x07ad   0             // Min. prob.
  WRITE_ASCII  0x07ae   ~shammr2~  #8 // Resource
  WRITE_LONG   0x07b6   0             // Min level
  WRITE_LONG   0x07ba   "-1"          // Max level
  WRITE_LONG   0x07be   0             // S. throw typ
  WRITE_LONG   0x07c2   0             // S. throw bon
  WRITE_LONG   0x07c6   0             // Special
  INSERT_BYTES 0x07ca   48            // new feature block
  WRITE_SHORT  0x07ca   112           // Opcode
  WRITE_BYTE   0x07cc   2             // Target type
  WRITE_BYTE   0x07cd   15            // Power
  WRITE_LONG   0x07ce   0             // Parameter 1
  WRITE_LONG   0x07d2   0             // Parameter 2
  WRITE_BYTE   0x07d6   1             // Timing metho
  WRITE_BYTE   0x07d7   0             // Resistance
  WRITE_LONG   0x07d8   0             // Duration
  WRITE_BYTE   0x07dc   100           // Max. prob.
  WRITE_BYTE   0x07dd   0             // Min. prob.
  WRITE_ASCII  0x07de   ~melfmet~  #8 // Resource
  WRITE_LONG   0x07e6   0             // Min level
  WRITE_LONG   0x07ea   "-1"          // Max level
  WRITE_LONG   0x07ee   0             // S. throw typ
  WRITE_LONG   0x07f2   0             // S. throw bon
  WRITE_LONG   0x07f6   0             // Special
  INSERT_BYTES 0x07fa   48            // new feature block
  WRITE_SHORT  0x07fa   112           // Opcode
  WRITE_BYTE   0x07fc   2             // Target type
  WRITE_BYTE   0x07fd   15            // Power
  WRITE_LONG   0x07fe   0             // Parameter 1
  WRITE_LONG   0x0802   0             // Parameter 2
  WRITE_BYTE   0x0806   1             // Timing metho
  WRITE_BYTE   0x0807   0             // Resistance
  WRITE_LONG   0x0808   0             // Duration
  WRITE_BYTE   0x080c   100           // Max. prob.
  WRITE_BYTE   0x080d   0             // Min. prob.
  WRITE_ASCII  0x080e   ~critical~ #8 // Resource
  WRITE_LONG   0x0816   0             // Min level
  WRITE_LONG   0x081a   "-1"          // Max level
  WRITE_LONG   0x081e   0             // S. throw typ
  WRITE_LONG   0x0822   0             // S. throw bon
  WRITE_LONG   0x0826   0             // Special
  INSERT_BYTES 0x082a   48            // new feature block
  WRITE_SHORT  0x082a   112           // Opcode
  WRITE_BYTE   0x082c   2             // Target type
  WRITE_BYTE   0x082d   15            // Power
  WRITE_LONG   0x082e   0             // Parameter 1
  WRITE_LONG   0x0832   0             // Parameter 2
  WRITE_BYTE   0x0836   1             // Timing metho
  WRITE_BYTE   0x0837   0             // Resistance
  WRITE_LONG   0x0838   0             // Duration
  WRITE_BYTE   0x083c   100           // Max. prob.
  WRITE_BYTE   0x083d   0             // Min. prob.
  WRITE_ASCII  0x083e   ~slaylive~ #8 // Resource
  WRITE_LONG   0x0846   0             // Min level
  WRITE_LONG   0x084a   "-1"          // Max level
  WRITE_LONG   0x084e   0             // S. throw typ
  WRITE_LONG   0x0852   0             // S. throw bon
  WRITE_LONG   0x0856   0             // Special
  INSERT_BYTES 0x085a   48            // new feature block
  WRITE_SHORT  0x085a   112           // Opcode
  WRITE_BYTE   0x085c   2             // Target type
  WRITE_BYTE   0x085d   15            // Power
  WRITE_LONG   0x085e   0             // Parameter 1
  WRITE_LONG   0x0862   0             // Parameter 2
  WRITE_BYTE   0x0866   1             // Timing metho
  WRITE_BYTE   0x0867   0             // Resistance
  WRITE_LONG   0x0868   0             // Duration
  WRITE_BYTE   0x086c   100           // Max. prob.
  WRITE_BYTE   0x086d   0             // Min. prob.
  WRITE_ASCII  0x086e   ~serious~  #8 // Resource
  WRITE_LONG   0x0876   0             // Min level
  WRITE_LONG   0x087a   "-1"          // Max level
  WRITE_LONG   0x087e   0             // S. throw typ
  WRITE_LONG   0x0882   0             // S. throw bon
  WRITE_LONG   0x0886   0             // Special
  INSERT_BYTES 0x088a   48            // new feature block
  WRITE_SHORT  0x088a   112           // Opcode
  WRITE_BYTE   0x088c   2             // Target type
  WRITE_BYTE   0x088d   15            // Power
  WRITE_LONG   0x088e   0             // Parameter 1
  WRITE_LONG   0x0892   0             // Parameter 2
  WRITE_BYTE   0x0896   1             // Timing metho
  WRITE_BYTE   0x0897   0             // Resistance
  WRITE_LONG   0x0898   0             // Duration
  WRITE_BYTE   0x089c   100           // Max. prob.
  WRITE_BYTE   0x089d   0             // Min. prob.
  WRITE_ASCII  0x089e   ~harm~     #8 // Resource
  WRITE_LONG   0x08a6   0             // Min level
  WRITE_LONG   0x08aa   "-1"          // Max level
  WRITE_LONG   0x08ae   0             // S. throw typ
  WRITE_LONG   0x08b2   0             // S. throw bon
  WRITE_LONG   0x08b6   0             // Special
  INSERT_BYTES 0x08ba   48            // new feature block
  WRITE_SHORT  0x08ba   112           // Opcode
  WRITE_BYTE   0x08bc   2             // Target type
  WRITE_BYTE   0x08bd   15            // Power
  WRITE_LONG   0x08be   0             // Parameter 1
  WRITE_LONG   0x08c2   0             // Parameter 2
  WRITE_BYTE   0x08c6   1             // Timing metho
  WRITE_BYTE   0x08c7   0             // Resistance
  WRITE_LONG   0x08c8   0             // Duration
  WRITE_BYTE   0x08cc   100           // Max. prob.
  WRITE_BYTE   0x08cd   0             // Min. prob.
  WRITE_ASCII  0x08ce   ~sorb~     #8 // Resource
  WRITE_LONG   0x08d6   0             // Min level
  WRITE_LONG   0x08da   "-1"          // Max level
  WRITE_LONG   0x08de   0             // S. throw typ
  WRITE_LONG   0x08e2   0             // S. throw bon
  WRITE_LONG   0x08e6   0             // Special
  INSERT_BYTES 0x08ea   48            // new feature block
  WRITE_SHORT  0x08ea   112           // Opcode
  WRITE_BYTE   0x08ec   2             // Target type
  WRITE_BYTE   0x08ed   15            // Power
  WRITE_LONG   0x08ee   0             // Parameter 1
  WRITE_LONG   0x08f2   0             // Parameter 2
  WRITE_BYTE   0x08f6   1             // Timing metho
  WRITE_BYTE   0x08f7   0             // Resistance
  WRITE_LONG   0x08f8   0             // Duration
  WRITE_BYTE   0x08fc   100           // Max. prob.
  WRITE_BYTE   0x08fd   0             // Min. prob.
  WRITE_ASCII  0x08fe   ~stardart~ #8 // Resource
  WRITE_LONG   0x0906   0             // Min level
  WRITE_LONG   0x090a   "-1"          // Max level
  WRITE_LONG   0x090e   0             // S. throw typ
  WRITE_LONG   0x0912   0             // S. throw bon
  WRITE_LONG   0x0916   0             // Special

COPY_EXISTING ~elemsunn.itm~ ~override/elemsunn.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0060   4             // Magiclevel
  WRITE_SHORT  0x0090   0             // Feat. count
  DELETE_BYTES 0xaa     480

COPY_EXISTING ~elemzaam.itm~ ~override/elemzaam.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0060   4             // Magiclevel
  WRITE_SHORT  0x008a   2             // Dice count
  WRITE_SHORT  0x0090   1             // Feat. count
  WRITE_SHORT  0x013a   12            // Opcode
  WRITE_BYTE   0x013d   5             // Power
  WRITE_LONG   0x0142   524288        // Parameter 2
  WRITE_LONG   0x0156   3             // Min level
  WRITE_LONG   0x015a   10            // Max level
  DELETE_BYTES 0x16a    480

COPY_EXISTING ~eneblade.itm~ ~override/eneblade.itm~
  WRITE_LONG   0x0018   104           // Attributes
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   40            // Stack
  WRITE_ASCII  0x0044   ~GBULL01~  #8 // Ground
  WRITE_ASCII  0x0058   ~CGBER01~  #8 // Desc icon
  WRITE_SHORT  0x0070   5             // Equip count
  WRITE_SHORT  0x0088   4             // Dice size
  WRITE_SHORT  0x008a   1             // Dice count
  WRITE_SHORT  0x0092   5             // Feat. offset
  WRITE_SHORT  0x010a   206           // Opcode
  WRITE_BYTE   0x010c   1             // Target type
  WRITE_BYTE   0x010d   0             // Power
  WRITE_LONG   0x0112   0             // Parameter 2
  WRITE_BYTE   0x0116   2             // Timing metho
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_ASCII  0x011e   ~SPWI305~  #8 // Resource
  WRITE_LONG   0x0126   0             // Min level
  WRITE_LONG   0x012a   0             // Max level
  INSERT_BYTES 0x013a   48            // new feature block
  WRITE_SHORT  0x013a   206           // Opcode
  WRITE_BYTE   0x013c   1             // Target type
  WRITE_BYTE   0x013d   0             // Power
  WRITE_LONG   0x013e   0             // Parameter 1
  WRITE_LONG   0x0142   0             // Parameter 2
  WRITE_BYTE   0x0146   2             // Timing metho
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_LONG   0x0148   0             // Duration
  WRITE_BYTE   0x014c   100           // Max. prob.
  WRITE_BYTE   0x014d   0             // Min. prob.
  WRITE_ASCII  0x014e   ~SPIN978~  #8 // Resource
  WRITE_LONG   0x0156   0             // Min level
  WRITE_LONG   0x015a   0             // Max level
  WRITE_LONG   0x015e   0             // S. throw typ
  WRITE_LONG   0x0162   0             // S. throw bon
  WRITE_LONG   0x0166   0             // Special
  INSERT_BYTES 0x016a   48            // new feature block
  WRITE_SHORT  0x016a   206           // Opcode
  WRITE_BYTE   0x016c   1             // Target type
  WRITE_BYTE   0x016d   0             // Power
  WRITE_LONG   0x016e   0             // Parameter 1
  WRITE_LONG   0x0172   0             // Parameter 2
  WRITE_BYTE   0x0176   2             // Timing metho
  WRITE_BYTE   0x0177   0             // Resistance
  WRITE_LONG   0x0178   0             // Duration
  WRITE_BYTE   0x017c   100           // Max. prob.
  WRITE_BYTE   0x017d   0             // Min. prob.
  WRITE_ASCII  0x017e   ~SPRA301~  #8 // Resource
  WRITE_LONG   0x0186   0             // Min level
  WRITE_LONG   0x018a   0             // Max level
  WRITE_LONG   0x018e   0             // S. throw typ
  WRITE_LONG   0x0192   0             // S. throw bon
  WRITE_LONG   0x0196   0             // Special
  INSERT_BYTES 0x019a   48            // new feature block
  WRITE_SHORT  0x019a   12            // Opcode
  WRITE_BYTE   0x019c   2             // Target type
  WRITE_BYTE   0x019d   0             // Power
  WRITE_LONG   0x019e   0             // Parameter 1
  WRITE_LONG   0x01a2   262144        // Parameter 2
  WRITE_BYTE   0x01a6   1             // Timing metho
  WRITE_BYTE   0x01a7   1             // Resistance
  WRITE_LONG   0x01a8   0             // Duration
  WRITE_BYTE   0x01ac   100           // Max. prob.
  WRITE_BYTE   0x01ad   0             // Min. prob.
  WRITE_ASCII  0x01ae   ~~         #8 // Resource
  WRITE_LONG   0x01b6   1             // Min level
  WRITE_LONG   0x01ba   10            // Max level
  WRITE_LONG   0x01be   0             // S. throw typ
  WRITE_LONG   0x01c2   0             // S. throw bon
  WRITE_LONG   0x01c6   0             // Special

COPY_EXISTING ~firern.itm~ ~override/firern.itm~
  WRITE_LONG   0x0018   96            // Attributes
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0060   3             // Magiclevel
  WRITE_SHORT  0x0070   1             // Equip count
  WRITE_SHORT  0x0092   1             // Feat. offset
  WRITE_SHORT  0x00aa   120           // Opcode
  WRITE_LONG   0x00b2   2             // Parameter 2
  WRITE_BYTE   0x00b7   2             // Resistance
  WRITE_SHORT  0x00da   12            // Opcode
  WRITE_BYTE   0x00dc   2             // Target type
  WRITE_LONG   0x00e2   524288        // Parameter 2
  WRITE_BYTE   0x00e6   1             // Timing metho
  WRITE_ASCII  0x00ee   ~~         #8 // Resource
  WRITE_LONG   0x00f6   1             // Min level
  WRITE_LONG   0x00fa   6             // Max level
  SET bytes_to_remove = SOURCE_SIZE - 0x10a
  DELETE_BYTES 0x10a    bytes_to_remove

COPY_EXISTING ~ghast1.itm~ ~override/ghast1.itm~
  WRITE_LONG   0x0008   12683         // UnID name
  WRITE_LONG   0x000c   "-1"          // ID name
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0090   10            // Feat. count
  WRITE_SHORT  0x013a   54            // Opcode
  WRITE_LONG   0x013e   "-2"          // Parameter 1
  WRITE_LONG   0x0142   0             // Parameter 2
  WRITE_BYTE   0x0147   1             // Resistance
  WRITE_LONG   0x0148   200           // Duration
  WRITE_LONG   0x015e   2             // S. throw typ
  WRITE_SHORT  0x016a   141           // Opcode
  WRITE_LONG   0x0172   33            // Parameter 2
  WRITE_ASCII  0x017e   ~~         #8 // Resource
  WRITE_LONG   0x018e   2             // S. throw typ
  WRITE_SHORT  0x019a   50            // Opcode
  WRITE_LONG   0x019e   4544256       // Parameter 1
  WRITE_LONG   0x01a2   1638400       // Parameter 2
  WRITE_BYTE   0x01a6   0             // Timing metho
  WRITE_LONG   0x01a8   2             // Duration
  WRITE_ASCII  0x01ae   ~~         #8 // Resource
  WRITE_BYTE   0x01d6   1             // Timing metho
  WRITE_BYTE   0x01d7   0             // Resistance
  WRITE_LONG   0x01d8   0             // Duration
  WRITE_ASCII  0x01de   ~EFF_P11~  #8 // Resource
  WRITE_LONG   0x01ee   4             // S. throw typ
  WRITE_SHORT  0x01fa   174           // Opcode
  WRITE_LONG   0x01fe   0             // Parameter 1
  WRITE_BYTE   0x0206   1             // Timing metho
  WRITE_BYTE   0x0207   0             // Resistance
  WRITE_LONG   0x0208   0             // Duration
  WRITE_ASCII  0x020e   ~EFF_P17~  #8 // Resource
  WRITE_SHORT  0x022a   174           // Opcode
  WRITE_LONG   0x0232   0             // Parameter 2
  WRITE_BYTE   0x0236   4             // Timing metho
  WRITE_BYTE   0x0237   0             // Resistance
  WRITE_LONG   0x0238   42            // Duration
  WRITE_ASCII  0x023e   ~EFF_E05~  #8 // Resource
  WRITE_LONG   0x024e   4             // S. throw typ
  WRITE_SHORT  0x025a   174           // Opcode
  WRITE_LONG   0x0262   0             // Parameter 2
  WRITE_BYTE   0x0266   4             // Timing metho
  WRITE_BYTE   0x0267   1             // Resistance
  WRITE_LONG   0x0268   200           // Duration
  WRITE_ASCII  0x026e   ~EFF_E07~  #8 // Resource
  DELETE_BYTES 0x28a    48

COPY_EXISTING ~giafir.itm~ ~override/giafir.itm~
  WRITE_LONG   0x0060   5             // Magiclevel
  WRITE_SHORT  0x0084   2             // Speed
  WRITE_SHORT  0x0086   5             // Thac0 bonus
  WRITE_SHORT  0x0088   12            // Dice size
  WRITE_SHORT  0x008a   4             // Dice count
  WRITE_SHORT  0x008c   5             // Dice bonus
  WRITE_SHORT  0x0090   3             // Feat. count
  WRITE_BYTE   0x0116   0             // Timing metho
  WRITE_BYTE   0x0146   1             // Timing metho
  WRITE_LONG   0x0156   2             // Min level
  WRITE_LONG   0x015a   12            // Max level
  INSERT_BYTES 0x016a   48            // new feature block
  WRITE_SHORT  0x016a   39            // Opcode
  WRITE_BYTE   0x016c   2             // Target type
  WRITE_BYTE   0x016d   0             // Power
  WRITE_LONG   0x016e   0             // Parameter 1
  WRITE_LONG   0x0172   0             // Parameter 2
  WRITE_BYTE   0x0176   0             // Timing metho
  WRITE_BYTE   0x0177   0             // Resistance
  WRITE_LONG   0x0178   4             // Duration
  WRITE_BYTE   0x017c   30            // Max. prob.
  WRITE_BYTE   0x017d   0             // Min. prob.
  WRITE_ASCII  0x017e   ~~         #8 // Resource
  WRITE_LONG   0x0186   0             // Min level
  WRITE_LONG   0x018a   0             // Max level
  WRITE_LONG   0x018e   0             // S. throw typ
  WRITE_LONG   0x0192   0             // S. throw bon
  WRITE_LONG   0x0196   0             // Special
  INSERT_BYTES 0x019a   48            // new feature block
  WRITE_SHORT  0x019a   235           // Opcode
  WRITE_BYTE   0x019c   2             // Target type
  WRITE_BYTE   0x019d   0             // Power
  WRITE_LONG   0x019e   30            // Parameter 1
  WRITE_LONG   0x01a2   2             // Parameter 2
  WRITE_BYTE   0x01a6   0             // Timing metho
  WRITE_BYTE   0x01a7   0             // Resistance
  WRITE_LONG   0x01a8   2             // Duration
  WRITE_BYTE   0x01ac   30            // Max. prob.
  WRITE_BYTE   0x01ad   0             // Min. prob.
  WRITE_ASCII  0x01ae   ~~         #8 // Resource
  WRITE_LONG   0x01b6   0             // Min level
  WRITE_LONG   0x01ba   0             // Max level
  WRITE_LONG   0x01be   0             // S. throw typ
  WRITE_LONG   0x01c2   0             // S. throw bon
  WRITE_LONG   0x01c6   0             // Special

COPY_EXISTING ~giafir2.itm~ ~override/giafir2.itm~
  WRITE_LONG   0x001e   0x00000000    // Usability
  WRITE_BYTE   0x002b   0             // Kit 2
  WRITE_LONG   0x0060   4             // Magiclevel
  WRITE_SHORT  0x0070   6             // Equip count
  WRITE_SHORT  0x0086   5             // Thac0 bonus
  WRITE_SHORT  0x008a   3             // Dice count
  WRITE_SHORT  0x008c   4             // Dice bonus
  WRITE_SHORT  0x0090   3             // Feat. count
  WRITE_SHORT  0x0092   6             // Feat. offset
  WRITE_BYTE   0x0116   0             // Timing metho
  WRITE_SHORT  0x013a   98            // Opcode
  WRITE_BYTE   0x013c   1             // Target type
  WRITE_LONG   0x013e   3             // Parameter 1
  WRITE_LONG   0x0142   2             // Parameter 2
  WRITE_BYTE   0x0146   2             // Timing metho
  WRITE_LONG   0x0156   0             // Min level
  WRITE_LONG   0x015a   0             // Max level
  INSERT_BYTES 0x016a   48            // new feature block
  WRITE_SHORT  0x016a   16            // Opcode
  WRITE_BYTE   0x016c   1             // Target type
  WRITE_BYTE   0x016d   0             // Power
  WRITE_LONG   0x016e   0             // Parameter 1
  WRITE_LONG   0x0172   1             // Parameter 2
  WRITE_BYTE   0x0176   2             // Timing metho
  WRITE_BYTE   0x0177   0             // Resistance
  WRITE_LONG   0x0178   0             // Duration
  WRITE_BYTE   0x017c   100           // Max. prob.
  WRITE_BYTE   0x017d   0             // Min. prob.
  WRITE_ASCII  0x017e   ~~         #8 // Resource
  WRITE_LONG   0x0186   0             // Min level
  WRITE_LONG   0x018a   0             // Max level
  WRITE_LONG   0x018e   0             // S. throw typ
  WRITE_LONG   0x0192   0             // S. throw bon
  WRITE_LONG   0x0196   0             // Special
  INSERT_BYTES 0x019a   48            // new feature block
  WRITE_SHORT  0x019a   233           // Opcode
  WRITE_BYTE   0x019c   1             // Target type
  WRITE_BYTE   0x019d   0             // Power
  WRITE_LONG   0x019e   5             // Parameter 1
  WRITE_LONG   0x01a2   92            // Parameter 2
  WRITE_BYTE   0x01a6   2             // Timing metho
  WRITE_BYTE   0x01a7   0             // Resistance
  WRITE_LONG   0x01a8   0             // Duration
  WRITE_BYTE   0x01ac   100           // Max. prob.
  WRITE_BYTE   0x01ad   0             // Min. prob.
  WRITE_ASCII  0x01ae   ~~         #8 // Resource
  WRITE_LONG   0x01b6   0             // Min level
  WRITE_LONG   0x01ba   0             // Max level
  WRITE_LONG   0x01be   0             // S. throw typ
  WRITE_LONG   0x01c2   0             // S. throw bon
  WRITE_LONG   0x01c6   0             // Special
  INSERT_BYTES 0x01ca   48            // new feature block
  WRITE_SHORT  0x01ca   12            // Opcode
  WRITE_BYTE   0x01cc   2             // Target type
  WRITE_BYTE   0x01cd   0             // Power
  WRITE_LONG   0x01ce   0             // Parameter 1
  WRITE_LONG   0x01d2   524288        // Parameter 2
  WRITE_BYTE   0x01d6   1             // Timing metho
  WRITE_BYTE   0x01d7   0             // Resistance
  WRITE_LONG   0x01d8   0             // Duration
  WRITE_BYTE   0x01dc   100           // Max. prob.
  WRITE_BYTE   0x01dd   0             // Min. prob.
  WRITE_ASCII  0x01de   ~~         #8 // Resource
  WRITE_LONG   0x01e6   1             // Min level
  WRITE_LONG   0x01ea   12            // Max level
  WRITE_LONG   0x01ee   0             // S. throw typ
  WRITE_LONG   0x01f2   0             // S. throw bon
  WRITE_LONG   0x01f6   0             // Special
  INSERT_BYTES 0x01fa   48            // new feature block
  WRITE_SHORT  0x01fa   39            // Opcode
  WRITE_BYTE   0x01fc   2             // Target type
  WRITE_BYTE   0x01fd   0             // Power
  WRITE_LONG   0x01fe   0             // Parameter 1
  WRITE_LONG   0x0202   0             // Parameter 2
  WRITE_BYTE   0x0206   0             // Timing metho
  WRITE_BYTE   0x0207   0             // Resistance
  WRITE_LONG   0x0208   4             // Duration
  WRITE_BYTE   0x020c   20            // Max. prob.
  WRITE_BYTE   0x020d   0             // Min. prob.
  WRITE_ASCII  0x020e   ~~         #8 // Resource
  WRITE_LONG   0x0216   0             // Min level
  WRITE_LONG   0x021a   0             // Max level
  WRITE_LONG   0x021e   0             // S. throw typ
  WRITE_LONG   0x0222   0             // S. throw bon
  WRITE_LONG   0x0226   0             // Special
  INSERT_BYTES 0x022a   48            // new feature block
  WRITE_SHORT  0x022a   235           // Opcode
  WRITE_BYTE   0x022c   2             // Target type
  WRITE_BYTE   0x022d   0             // Power
  WRITE_LONG   0x022e   30            // Parameter 1
  WRITE_LONG   0x0232   2             // Parameter 2
  WRITE_BYTE   0x0236   0             // Timing metho
  WRITE_BYTE   0x0237   0             // Resistance
  WRITE_LONG   0x0238   2             // Duration
  WRITE_BYTE   0x023c   20            // Max. prob.
  WRITE_BYTE   0x023d   0             // Min. prob.
  WRITE_ASCII  0x023e   ~~         #8 // Resource
  WRITE_LONG   0x0246   0             // Min level
  WRITE_LONG   0x024a   0             // Max level
  WRITE_LONG   0x024e   0             // S. throw typ
  WRITE_LONG   0x0252   0             // S. throw bon
  WRITE_LONG   0x0256   0             // Special

COPY_EXISTING ~gith.itm~ ~override/gith.itm~
  WRITE_SHORT  0x0090   1             // Feat. count
  WRITE_BYTE   0x014c   20            // Max. prob.
  WRITE_LONG   0x0162   "-2"          // S. throw bon
  DELETE_BYTES 0x16a    48

COPY_EXISTING ~goliro.itm~ ~override/goliro.itm~
  WRITE_LONG   0x0018   96            // Attributes
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0060   3             // Magiclevel
  WRITE_SHORT  0x0070   0             // Equip count
  WRITE_SHORT  0x0080   1             // Range
  WRITE_SHORT  0x008a   3             // Dice count
  WRITE_SHORT  0x0092   0             // Feat. offset
  DELETE_BYTES 0xaa     48

COPY_EXISTING ~golsto.itm~ ~override/golsto.itm~
  WRITE_LONG   0x0008   "-1"          // UnID name
  WRITE_LONG   0x000c   "-1"          // ID name
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0070   2             // Equip count
  WRITE_SHORT  0x0092   2             // Feat. offset
  INSERT_BYTES 0x00da   48            // new feature block
  WRITE_SHORT  0x00da   31            // Opcode
  WRITE_BYTE   0x00dc   1             // Target type
  WRITE_BYTE   0x00dd   0             // Power
  WRITE_LONG   0x00de   60            // Parameter 1
  WRITE_LONG   0x00e2   0             // Parameter 2
  WRITE_BYTE   0x00e6   2             // Timing metho
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_LONG   0x00e8   0             // Duration
  WRITE_BYTE   0x00ec   100           // Max. prob.
  WRITE_BYTE   0x00ed   0             // Min. prob.
  WRITE_ASCII  0x00ee   ~~         #8 // Resource
  WRITE_LONG   0x00f6   0             // Min level
  WRITE_LONG   0x00fa   0             // Max level
  WRITE_LONG   0x00fe   0             // S. throw typ
  WRITE_LONG   0x0102   0             // S. throw bon
  WRITE_LONG   0x0106   0             // Special

COPY_EXISTING ~halb05.itm~ ~override/halb05.itm~
  WRITE_SHORT  0x008c   4             // Dice bonus
  WRITE_SHORT  0x008e   1             // Damagetype
  WRITE_LONG   0x00ae   10            // Parameter 1
  WRITE_LONG   0x00b2   21            // Parameter 2
  WRITE_LONG   0x00de   10            // Parameter 1
  WRITE_LONG   0x00e2   20            // Parameter 2
  WRITE_LONG   0x010e   10            // Parameter 1
  WRITE_LONG   0x013e   "-1946157312"    // Parameter 1
  WRITE_LONG   0x0142   2293781       // Parameter 2
  WRITE_LONG   0x016e   "-1946157312"    // Parameter 1
  WRITE_LONG   0x0172   2293780       // Parameter 2
  WRITE_LONG   0x01ce   5             // Parameter 1
  WRITE_BYTE   0x01d7   0             // Resistance
  WRITE_BYTE   0x01dc   5             // Max. prob.
  WRITE_LONG   0x01ea   0             // Max level
  WRITE_LONG   0x01fe   5             // Parameter 1
  WRITE_BYTE   0x0207   0             // Resistance
  WRITE_BYTE   0x020c   5             // Max. prob.
  WRITE_LONG   0x021a   0             // Max level
  WRITE_LONG   0x022e   5             // Parameter 1
  WRITE_BYTE   0x0237   0             // Resistance
  WRITE_BYTE   0x023c   5             // Max. prob.
  WRITE_LONG   0x024a   0             // Max level
  WRITE_LONG   0x025e   5             // Parameter 1
  WRITE_BYTE   0x0267   0             // Resistance
  WRITE_BYTE   0x026c   5             // Max. prob.
  WRITE_LONG   0x027a   0             // Max level
  WRITE_LONG   0x028e   5             // Parameter 1
  WRITE_BYTE   0x0297   0             // Resistance
  WRITE_BYTE   0x029c   5             // Max. prob.
  WRITE_LONG   0x02aa   0             // Max level
  SAY DESC     @9090

COPY_EXISTING ~halb06.itm~ ~override/halb06.itm~
  WRITE_SHORT  0x008e   1             // Damagetype
  WRITE_SHORT  0x00c8   11            // Feat. count
  WRITE_SHORT  0x00cc   1             // Charges
  WRITE_SHORT  0x00d4   184           // Effect anima
  WRITE_LONG   0x00e6   27            // Parameter 1
  WRITE_LONG   0x00ea   21            // Parameter 2
  WRITE_LONG   0x0116   29            // Parameter 1
  WRITE_LONG   0x011a   20            // Parameter 2
  WRITE_LONG   0x0146   27            // Parameter 1
  WRITE_BYTE   0x0175   1             // Power
  WRITE_LONG   0x0180   30            // Duration
  WRITE_SHORT  0x01a2   0             // Opcode
  WRITE_BYTE   0x01a5   1             // Power
  WRITE_LONG   0x01a6   "-4"          // Parameter 1
  WRITE_LONG   0x01aa   0             // Parameter 2
  WRITE_LONG   0x01b0   30            // Duration
  WRITE_SHORT  0x01d2   50            // Opcode
  WRITE_BYTE   0x01d5   1             // Power
  WRITE_LONG   0x01d6   "-256"        // Parameter 1
  WRITE_LONG   0x01da   1966080       // Parameter 2
  WRITE_BYTE   0x01de   0             // Timing metho
  WRITE_LONG   0x01e0   1             // Duration
  WRITE_SHORT  0x0202   141           // Opcode
  WRITE_BYTE   0x0205   0             // Power
  WRITE_LONG   0x0206   0             // Parameter 1
  WRITE_LONG   0x020a   18            // Parameter 2
  WRITE_SHORT  0x0232   139           // Opcode
  WRITE_BYTE   0x0235   0             // Power
  WRITE_LONG   0x0236   14674         // Parameter 1
  WRITE_LONG   0x023a   0             // Parameter 2
  WRITE_BYTE   0x023e   1             // Timing metho
  WRITE_LONG   0x0240   0             // Duration
  WRITE_SHORT  0x0262   142           // Opcode
  WRITE_BYTE   0x0265   1             // Power
  WRITE_LONG   0x026a   8             // Parameter 2
  WRITE_LONG   0x0270   30            // Duration
  WRITE_ASCII  0x0276   ~~         #8 // Resource
  WRITE_LONG   0x0286   1             // S. throw typ
  WRITE_BYTE   0x0295   1             // Power
  WRITE_LONG   0x02a0   0             // Duration
  WRITE_ASCII  0x02a6   ~EFF_M02~  #8 // Resource
  WRITE_LONG   0x02b6   0             // S. throw typ
  INSERT_BYTES 0x02c2   48            // new feature block
  WRITE_SHORT  0x02c2   174           // Opcode
  WRITE_BYTE   0x02c4   2             // Target type
  WRITE_BYTE   0x02c5   1             // Power
  WRITE_LONG   0x02c6   0             // Parameter 1
  WRITE_LONG   0x02ca   0             // Parameter 2
  WRITE_BYTE   0x02ce   0             // Timing metho
  WRITE_BYTE   0x02cf   1             // Resistance
  WRITE_LONG   0x02d0   30            // Duration
  WRITE_BYTE   0x02d4   100           // Max. prob.
  WRITE_BYTE   0x02d5   0             // Min. prob.
  WRITE_ASCII  0x02d6   ~EFF_E07~  #8 // Resource
  WRITE_LONG   0x02de   0             // Min level
  WRITE_LONG   0x02e2   0             // Max level
  WRITE_LONG   0x02e6   1             // S. throw typ
  WRITE_LONG   0x02ea   0             // S. throw bon
  WRITE_LONG   0x02ee   0             // Special
  INSERT_BYTES 0x02f2   48            // new feature block
  WRITE_SHORT  0x02f2   206           // Opcode
  WRITE_BYTE   0x02f4   2             // Target type
  WRITE_BYTE   0x02f5   1             // Power
  WRITE_LONG   0x02f6   0             // Parameter 1
  WRITE_LONG   0x02fa   0             // Parameter 2
  WRITE_BYTE   0x02fe   0             // Timing metho
  WRITE_BYTE   0x02ff   1             // Resistance
  WRITE_LONG   0x0300   30            // Duration
  WRITE_BYTE   0x0304   100           // Max. prob.
  WRITE_BYTE   0x0305   0             // Min. prob.
  WRITE_ASCII  0x0306   ~SPWI106~  #8 // Resource
  WRITE_LONG   0x030e   0             // Min level
  WRITE_LONG   0x0312   0             // Max level
  WRITE_LONG   0x0316   1             // S. throw typ
  WRITE_LONG   0x031a   0             // S. throw bon
  WRITE_LONG   0x031e   0             // Special
  INSERT_BYTES 0x0322   48            // new feature block
  WRITE_SHORT  0x0322   206           // Opcode
  WRITE_BYTE   0x0324   2             // Target type
  WRITE_BYTE   0x0325   1             // Power
  WRITE_LONG   0x0326   0             // Parameter 1
  WRITE_LONG   0x032a   0             // Parameter 2
  WRITE_BYTE   0x032e   0             // Timing metho
  WRITE_BYTE   0x032f   1             // Resistance
  WRITE_LONG   0x0330   30            // Duration
  WRITE_BYTE   0x0334   100           // Max. prob.
  WRITE_BYTE   0x0335   0             // Min. prob.
  WRITE_ASCII  0x0336   ~SPWI224~  #8 // Resource
  WRITE_LONG   0x033e   0             // Min level
  WRITE_LONG   0x0342   0             // Max level
  WRITE_LONG   0x0346   1             // S. throw typ
  WRITE_LONG   0x034a   0             // S. throw bon
  WRITE_LONG   0x034e   0             // Special
  INSERT_BYTES 0x0352   48            // new feature block
  WRITE_SHORT  0x0352   206           // Opcode
  WRITE_BYTE   0x0354   2             // Target type
  WRITE_BYTE   0x0355   1             // Power
  WRITE_LONG   0x0356   0             // Parameter 1
  WRITE_LONG   0x035a   0             // Parameter 2
  WRITE_BYTE   0x035e   0             // Timing metho
  WRITE_BYTE   0x035f   1             // Resistance
  WRITE_LONG   0x0360   30            // Duration
  WRITE_BYTE   0x0364   100           // Max. prob.
  WRITE_BYTE   0x0365   0             // Min. prob.
  WRITE_ASCII  0x0366   ~SPWI815~  #8 // Resource
  WRITE_LONG   0x036e   0             // Min level
  WRITE_LONG   0x0372   0             // Max level
  WRITE_LONG   0x0376   1             // S. throw typ
  WRITE_LONG   0x037a   0             // S. throw bon
  WRITE_LONG   0x037e   0             // Special
  SAY DESC     @9012

COPY_EXISTING ~hamm09.itm~ ~override/hamm09.itm~
  WRITE_SHORT  0x0070   5             // Equip count
  WRITE_SHORT  0x008c   6             // Dice bonus
  WRITE_SHORT  0x0090   3             // Feat. count
  WRITE_SHORT  0x0092   5             // Feat. offset
  WRITE_SHORT  0x009c   1             // Effect anima
  WRITE_LONG   0x00ae   97            // Parameter 1
  WRITE_LONG   0x00de   40            // Parameter 1
  WRITE_LONG   0x010e   97            // Parameter 1
  WRITE_SHORT  0x013a   9             // Opcode
  WRITE_LONG   0x013e   "-557358336"    // Parameter 1
  WRITE_LONG   0x0142   3276821       // Parameter 2
  WRITE_SHORT  0x016a   44            // Opcode
  WRITE_LONG   0x016e   25            // Parameter 1
  WRITE_LONG   0x0172   1             // Parameter 2
  WRITE_SHORT  0x019a   55            // Opcode
  WRITE_BYTE   0x019c   2             // Target type
  WRITE_LONG   0x019e   184           // Parameter 1
  WRITE_LONG   0x01a2   5             // Parameter 2
  WRITE_BYTE   0x01a6   1             // Timing metho
  WRITE_LONG   0x01ce   185           // Parameter 1
  WRITE_LONG   0x01d2   5             // Parameter 2
  WRITE_SHORT  0x01fa   12            // Opcode
  WRITE_LONG   0x01fe   25            // Parameter 1
  WRITE_LONG   0x0202   262144        // Parameter 2
  WRITE_BYTE   0x0207   0             // Resistance
  WRITE_BYTE   0x020c   10            // Max. prob.
  WRITE_ASCII  0x020e   ~~         #8 // Resource
  WRITE_LONG   0x021a   6             // Max level
  SET bytes_to_remove = SOURCE_SIZE - 0x22a
  DELETE_BYTES 0x22a    bytes_to_remove
  SAY DESC     @9019

COPY_EXISTING ~hamm10.itm~ ~override/hamm10.itm~
  WRITE_SHORT  0x0070   14            // Equip count
  WRITE_SHORT  0x0090   2             // Feat. count
  WRITE_SHORT  0x0092   14            // Feat. offset
  WRITE_SHORT  0x009c   1             // Effect anima
  WRITE_LONG   0x00ae   97            // Parameter 1
  WRITE_LONG   0x00de   51            // Parameter 1
  WRITE_LONG   0x010e   97            // Parameter 1
  WRITE_LONG   0x016e   "-1063231488"    // Parameter 1
  WRITE_LONG   0x0172   2621461       // Parameter 2
  WRITE_LONG   0x01a2   2621460       // Parameter 2
  WRITE_SHORT  0x01ca   177           // Opcode
  WRITE_LONG   0x01d2   2             // Parameter 2
  WRITE_ASCII  0x01de   ~macedisr~ #8 // Resource
  WRITE_SHORT  0x034a   177           // Opcode
  WRITE_BYTE   0x034c   2             // Target type
  WRITE_BYTE   0x034d   0             // Power
  WRITE_LONG   0x034e   4             // Parameter 1
  WRITE_LONG   0x0352   3             // Parameter 2
  WRITE_BYTE   0x0356   1             // Timing metho
  WRITE_LONG   0x0358   0             // Duration
  WRITE_ASCII  0x035e   ~DIE~      #8 // Resource
  WRITE_BYTE   0x0387   2             // Resistance
  WRITE_ASCII  0x038e   ~MESDIE~   #8 // Resource
  SET bytes_to_remove = SOURCE_SIZE - 0x3aa
  DELETE_BYTES 0x3aa    bytes_to_remove

COPY_EXISTING ~hamm11.itm~ ~override/hamm11.itm~
  WRITE_SHORT  0x0070   17            // Equip count
  WRITE_SHORT  0x0090   2             // Feat. count
  WRITE_SHORT  0x0092   17            // Feat. offset
  WRITE_SHORT  0x009c   1             // Effect anima
  WRITE_ASCII  0x00ae   ~SPWI607B~ #8 // Use icon
  WRITE_SHORT  0x00ca   19            // Feat. offset
  WRITE_SHORT  0x0102   22            // Feat. offset
  WRITE_LONG   0x011e   97            // Parameter 1
  WRITE_LONG   0x014e   51            // Parameter 1
  WRITE_LONG   0x017e   97            // Parameter 1
  WRITE_LONG   0x01de   "-1063231488"    // Parameter 1
  WRITE_LONG   0x01e2   2621461       // Parameter 2
  WRITE_LONG   0x020e   "-1063231488"    // Parameter 1
  WRITE_LONG   0x0212   2621460       // Parameter 2
  WRITE_SHORT  0x023a   177           // Opcode
  WRITE_LONG   0x0242   2             // Parameter 2
  WRITE_BYTE   0x0247   0             // Resistance
  WRITE_ASCII  0x024e   ~macedisr~ #8 // Resource
  WRITE_SHORT  0x026a   101           // Opcode
  WRITE_LONG   0x0272   216           // Parameter 2
  WRITE_BYTE   0x0277   0             // Resistance
  WRITE_SHORT  0x029a   142           // Opcode
  WRITE_LONG   0x029e   0             // Parameter 1
  WRITE_LONG   0x02a2   90            // Parameter 2
  WRITE_BYTE   0x02a7   0             // Resistance
  WRITE_SHORT  0x02ca   101           // Opcode
  WRITE_LONG   0x02ce   0             // Parameter 1
  WRITE_SHORT  0x02fa   142           // Opcode
  WRITE_LONG   0x02fe   0             // Parameter 1
  WRITE_LONG   0x0302   37            // Parameter 2
  WRITE_SHORT  0x032a   267           // Opcode
  WRITE_BYTE   0x032d   4             // Power
  WRITE_LONG   0x032e   41495         // Parameter 1
  WRITE_LONG   0x0338   30            // Duration
  WRITE_SHORT  0x035a   267           // Opcode
  WRITE_BYTE   0x035d   4             // Power
  WRITE_LONG   0x035e   40968         // Parameter 1
  WRITE_LONG   0x0368   30            // Duration
  WRITE_SHORT  0x038a   267           // Opcode
  WRITE_BYTE   0x038d   4             // Power
  WRITE_LONG   0x038e   40969         // Parameter 1
  WRITE_LONG   0x0392   0             // Parameter 2
  WRITE_BYTE   0x0397   2             // Resistance
  WRITE_LONG   0x0398   30            // Duration
  WRITE_SHORT  0x03ba   267           // Opcode
  WRITE_BYTE   0x03bd   4             // Power
  WRITE_LONG   0x03be   40979         // Parameter 1
  WRITE_LONG   0x03c2   0             // Parameter 2
  WRITE_BYTE   0x03c7   2             // Resistance
  WRITE_LONG   0x03c8   30            // Duration
  WRITE_SHORT  0x03ea   267           // Opcode
  WRITE_BYTE   0x03ed   4             // Power
  WRITE_LONG   0x03ee   41616         // Parameter 1
  WRITE_LONG   0x03f2   0             // Parameter 2
  WRITE_BYTE   0x03f7   2             // Resistance
  WRITE_LONG   0x03f8   30            // Duration
  WRITE_SHORT  0x041a   169           // Opcode
  WRITE_LONG   0x0422   36            // Parameter 2
  WRITE_SHORT  0x044a   177           // Opcode
  WRITE_BYTE   0x044c   2             // Target type
  WRITE_LONG   0x044e   4             // Parameter 1
  WRITE_LONG   0x0452   3             // Parameter 2
  WRITE_BYTE   0x0456   1             // Timing metho
  WRITE_ASCII  0x045e   ~DIE~      #8 // Resource
  WRITE_SHORT  0x047a   177           // Opcode
  WRITE_BYTE   0x047c   2             // Target type
  WRITE_BYTE   0x047d   0             // Power
  WRITE_LONG   0x047e   4             // Parameter 1
  WRITE_LONG   0x0482   3             // Parameter 2
  WRITE_BYTE   0x0486   1             // Timing metho
  WRITE_LONG   0x0488   0             // Duration
  WRITE_ASCII  0x048e   ~MESDIE~   #8 // Resource
  WRITE_SHORT  0x04aa   44            // Opcode
  WRITE_BYTE   0x04ad   0             // Power
  WRITE_LONG   0x04ae   22            // Parameter 1
  WRITE_LONG   0x04b2   1             // Parameter 2
  WRITE_BYTE   0x04b6   0             // Timing metho
  WRITE_LONG   0x04b8   60            // Duration
  WRITE_SHORT  0x04da   142           // Opcode
  WRITE_BYTE   0x04dd   0             // Power
  WRITE_LONG   0x04de   0             // Parameter 1
  WRITE_LONG   0x04e2   21            // Parameter 2
  WRITE_BYTE   0x04e6   0             // Timing metho
  WRITE_LONG   0x04e8   60            // Duration
  WRITE_SHORT  0x050a   215           // Opcode
  WRITE_BYTE   0x050d   0             // Power
  WRITE_LONG   0x050e   0             // Parameter 1
  WRITE_BYTE   0x0516   0             // Timing metho
  WRITE_LONG   0x0518   0             // Duration
  WRITE_ASCII  0x051e   ~icstreni~ #8 // Resource
  WRITE_SHORT  0x053a   146           // Opcode
  WRITE_BYTE   0x053d   0             // Power
  WRITE_LONG   0x053e   20            // Parameter 1
  WRITE_BYTE   0x0546   9             // Timing metho
  WRITE_BYTE   0x0547   0             // Resistance
  WRITE_LONG   0x0548   0             // Duration
  WRITE_ASCII  0x054e   ~SpPr514~  #8 // Resource
  SET bytes_to_remove = SOURCE_SIZE - 0x56a
  DELETE_BYTES 0x56a    bytes_to_remove

COPY_EXISTING ~harm.itm~ ~override/harm.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0060   5             // Magiclevel
  WRITE_SHORT  0x0086   0             // Thac0 bonus
  WRITE_SHORT  0x0088   6             // Dice size
  WRITE_SHORT  0x008a   0             // Dice count
  WRITE_SHORT  0x0090   2             // Feat. count
  WRITE_SHORT  0x00aa   12            // Opcode
  WRITE_LONG   0x00ae   1             // Parameter 1
  WRITE_LONG   0x00b2   4194305       // Parameter 2
  WRITE_LONG   0x00ca   6             // Max level
  WRITE_LONG   0x00ce   1             // S. throw typ
  WRITE_SHORT  0x00da   215           // Opcode
  WRITE_LONG   0x00de   0             // Parameter 1
  WRITE_LONG   0x00e2   1             // Parameter 2
  WRITE_BYTE   0x00e6   0             // Timing metho
  WRITE_LONG   0x00e8   1             // Duration
  WRITE_ASCII  0x00ee   ~ICMAGICH~ #8 // Resource
  WRITE_LONG   0x00fa   0             // Max level
  WRITE_LONG   0x00fe   1             // S. throw typ
  SET bytes_to_remove = SOURCE_SIZE - 0x10a
  DELETE_BYTES 0x10a    bytes_to_remove

COPY_EXISTING ~helm21.itm~ ~override/helm21.itm~
  WRITE_SHORT  0x0022   12872         // Animation
  WRITE_SHORT  0x0070   5             // Equip count
  WRITE_LONG   0x0076   33            // Parameter 1
  WRITE_LONG   0x007a   53            // Parameter 2
  WRITE_LONG   0x00a6   33            // Parameter 1
  WRITE_LONG   0x00aa   48            // Parameter 2
  WRITE_SHORT  0x00d2   30            // Opcode
  WRITE_LONG   0x00d6   25            // Parameter 1
  WRITE_LONG   0x00da   1             // Parameter 2
  WRITE_SHORT  0x0102   28            // Opcode
  WRITE_LONG   0x0106   25            // Parameter 1
  WRITE_LONG   0x010a   1             // Parameter 2
  WRITE_SHORT  0x0132   29            // Opcode
  WRITE_LONG   0x0136   25            // Parameter 1
  WRITE_LONG   0x013a   1             // Parameter 2
  SET bytes_to_remove = SOURCE_SIZE - 0x162
  DELETE_BYTES 0x162    bytes_to_remove

COPY_EXISTING ~helm24.itm~ ~override/helm24.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0034   22000         // Price
  WRITE_SHORT  0x00d2   18            // Opcode
  WRITE_LONG   0x00d6   10            // Parameter 1
  WRITE_LONG   0x00da   3             // Parameter 2
  WRITE_BYTE   0x00df   0             // Resistance

COPY_EXISTING ~helm30.itm~ ~override/helm30.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x0029   0             // Kit 1
  WRITE_SHORT  0x0070   6             // Equip count
  WRITE_SHORT  0x0092   6             // Feat. offset
  WRITE_SHORT  0x00aa   7             // Opcode
  WRITE_LONG   0x00ae   79            // Parameter 1
  WRITE_LONG   0x00b2   53            // Parameter 2
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_SHORT  0x00da   7             // Opcode
  WRITE_LONG   0x00de   79            // Parameter 1
  WRITE_LONG   0x00e2   48            // Parameter 2
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_SHORT  0x010a   101           // Opcode
  WRITE_LONG   0x0112   25            // Parameter 2
  WRITE_SHORT  0x013a   142           // Opcode
  WRITE_LONG   0x013e   0             // Parameter 1
  WRITE_LONG   0x0142   30            // Parameter 2
  WRITE_BYTE   0x0147   2             // Resistance
  WRITE_SHORT  0x016a   173           // Opcode
  WRITE_LONG   0x016e   100           // Parameter 1
  WRITE_LONG   0x0172   0             // Parameter 2
  WRITE_BYTE   0x0177   2             // Resistance
  WRITE_SHORT  0x019a   169           // Opcode
  WRITE_LONG   0x01a2   6             // Parameter 2
  WRITE_SHORT  0x01ca   146           // Opcode
  WRITE_LONG   0x01ce   1             // Parameter 1
  WRITE_BYTE   0x01d6   1             // Timing metho
  WRITE_ASCII  0x01de   ~SPWI609~  #8 // Resource
  SET bytes_to_remove = SOURCE_SIZE - 0x1fa
  DELETE_BYTES 0x1fa    bytes_to_remove

COPY_EXISTING ~helm31.itm~ ~override/helm31.itm~
  WRITE_SHORT  0x0022   12360         // Animation
  WRITE_ASCII  0x0058   ~PHELM31~  #8 // Desc icon
  WRITE_SHORT  0x0070   8             // Equip count
  WRITE_LONG   0x0076   30            // Parameter 1
  WRITE_LONG   0x007a   53            // Parameter 2
  WRITE_LONG   0x00a6   27            // Parameter 1
  WRITE_LONG   0x00aa   48            // Parameter 2
  WRITE_LONG   0x00d6   27            // Parameter 1
  WRITE_SHORT  0x0102   27            // Opcode
  WRITE_LONG   0x0106   25            // Parameter 1
  WRITE_LONG   0x010a   0             // Parameter 2
  WRITE_BYTE   0x010f   2             // Resistance
  WRITE_SHORT  0x0132   28            // Opcode
  WRITE_LONG   0x0136   25            // Parameter 1
  WRITE_LONG   0x013a   0             // Parameter 2
  WRITE_BYTE   0x013f   2             // Resistance
  WRITE_SHORT  0x0162   29            // Opcode
  WRITE_SHORT  0x0192   30            // Opcode
  WRITE_SHORT  0x01c2   0             // Opcode
  WRITE_LONG   0x01c6   1             // Parameter 1
  WRITE_LONG   0x01ca   1             // Parameter 2
  WRITE_BYTE   0x01cf   0             // Resistance
  SET bytes_to_remove = SOURCE_SIZE - 0x1f2
  DELETE_BYTES 0x1f2    bytes_to_remove
  SAY DESC     @9116

COPY_EXISTING ~helm32.itm~ ~override/helm32.itm~
  WRITE_SHORT  0x0022   12616         // Animation
  WRITE_ASCII  0x0058   ~PHELM32~  #8 // Desc icon
  WRITE_SHORT  0x0070   8             // Equip count
  WRITE_ASCII  0x0076   ~SPWI205B~ #8 // Use icon
  WRITE_BYTE   0x007e   4             // Target type
  WRITE_SHORT  0x0090   1             // Feat. count
  WRITE_SHORT  0x0092   8             // Feat. offset
  WRITE_SHORT  0x0094   1             // Charges
  WRITE_SHORT  0x009c   1             // Effect anima
  WRITE_LONG   0x00ae   30            // Parameter 1
  WRITE_LONG   0x00b2   53            // Parameter 2
  WRITE_LONG   0x00de   27            // Parameter 1
  WRITE_LONG   0x00e2   48            // Parameter 2
  WRITE_LONG   0x010e   27            // Parameter 1
  WRITE_LONG   0x0112   52            // Parameter 2
  WRITE_SHORT  0x01fa   0             // Opcode
  WRITE_LONG   0x01fe   1             // Parameter 1
  WRITE_LONG   0x0202   1             // Parameter 2
  WRITE_BYTE   0x0207   0             // Resistance
  WRITE_SHORT  0x022a   148           // Opcode
  WRITE_BYTE   0x022c   2             // Target type
  WRITE_LONG   0x022e   10            // Parameter 1
  WRITE_LONG   0x0232   1             // Parameter 2
  WRITE_BYTE   0x0236   1             // Timing metho
  WRITE_BYTE   0x0237   0             // Resistance
  WRITE_ASCII  0x023e   ~SPWI205~  #8 // Resource
  DELETE_BYTES 0x25a    336
  SAY DESC     @9115

COPY_EXISTING ~imp.itm~ ~override/imp.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_ASCII  0x003a   ~~         #8 // Inventory
  WRITE_ASCII  0x0076   ~~         #8 // Use icon
  WRITE_SHORT  0x0088   4             // Dice size
  WRITE_LONG   0x0098   0             // Flags

COPY_EXISTING ~killsw01.itm~ ~override/killsw01.itm~
  WRITE_LONG   0x000c   6741          // ID name
  WRITE_ASCII  0x0010   ~MISC56~   #8 // Used up
  WRITE_LONG   0x0018   44            // Attributes
  WRITE_LONG   0x001e   0x4004d780    // Usability
  WRITE_SHORT  0x0026   6             // MinStr
  WRITE_BYTE   0x002b   2             // Kit 2
  WRITE_LONG   0x0034   15            // Price
  WRITE_ASCII  0x003a   ~ISW1H04~  #8 // Inventory
  WRITE_LONG   0x004c   4             // Weight
  WRITE_LONG   0x0054   "-1"          // ID desc
  WRITE_ASCII  0x0058   ~CSW1H04~  #8 // Desc icon
  WRITE_LONG   0x0060   0             // Magiclevel
  WRITE_SHORT  0x0070   3             // Equip count
  WRITE_ASCII  0x0076   ~ISW1H04~  #8 // Use icon
  WRITE_SHORT  0x0080   1             // Range
  WRITE_SHORT  0x0084   5             // Speed
  WRITE_SHORT  0x0086   0             // Thac0 bonus
  WRITE_SHORT  0x0088   8             // Dice size
  WRITE_SHORT  0x008c   0             // Dice bonus
  WRITE_SHORT  0x008e   3             // Damagetype
  WRITE_SHORT  0x0090   0             // Feat. count
  WRITE_SHORT  0x0092   3             // Feat. offset
  WRITE_SHORT  0x0096   2             // Drain type
  WRITE_LONG   0x0098   3             // Flags
  WRITE_SHORT  0x00aa   7             // Opcode
  WRITE_LONG   0x00ae   5             // Parameter 1
  WRITE_LONG   0x00b2   21            // Parameter 2
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_SHORT  0x00da   7             // Opcode
  WRITE_LONG   0x00de   22            // Parameter 1
  WRITE_LONG   0x00e2   20            // Parameter 2
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_SHORT  0x010a   7             // Opcode
  WRITE_LONG   0x010e   99            // Parameter 1
  WRITE_LONG   0x0112   16            // Parameter 2
  WRITE_BYTE   0x0117   0             // Resistance
  SET bytes_to_remove = SOURCE_SIZE - 0x13a
  DELETE_BYTES 0x13a    bytes_to_remove

COPY_EXISTING ~kuobolt.itm~ ~override/kuobolt.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0034   5             // Price
  WRITE_SHORT  0x0038   200           // Stack
  WRITE_SHORT  0x0086   1             // Thac0 bonus
  WRITE_SHORT  0x008c   1             // Dice bonus
  WRITE_BYTE   0x00b7   1             // Resistance
  WRITE_LONG   0x00b8   24            // Duration
  WRITE_BYTE   0x00e7   1             // Resistance
  WRITE_LONG   0x00e8   24            // Duration
  SAY NAME2    @279
  SAY DESC     @280

COPY_EXISTING ~kuobolt2.itm~ ~override/kuobolt2.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   200           // Stack
  WRITE_LONG   0x0060   3             // Magiclevel
  WRITE_SHORT  0x0086   3             // Thac0 bonus
  WRITE_SHORT  0x008c   3             // Dice bonus
  WRITE_BYTE   0x00b7   1             // Resistance
  WRITE_LONG   0x00b8   24            // Duration
  WRITE_BYTE   0x00e7   1             // Resistance
  WRITE_LONG   0x00e8   24            // Duration
  SAY NAME2    @337
  SAY DESC     @338

COPY_EXISTING ~leat09.itm~ ~override/leat09.itm~
  WRITE_LONG   0x001e   0x603fffc0    // Usability
  WRITE_SHORT  0x0026   0             // MinStr
  WRITE_BYTE   0x0029   "-1"          // Kit 1
  WRITE_BYTE   0x002b   "-17"         // Kit 2
  WRITE_BYTE   0x002d   "-1"          // Kit 3
  WRITE_BYTE   0x002f   "-1"          // Kit 4
  WRITE_LONG   0x0034   8000          // Price
  WRITE_SHORT  0x0042   0             // Lore to ID
  WRITE_LONG   0x004c   2             // Weight
  WRITE_SHORT  0x0070   9             // Equip count
  WRITE_SHORT  0x00a2   0             // Opcode
  WRITE_LONG   0x00a6   3             // Parameter 1
  WRITE_LONG   0x00aa   16            // Parameter 2
  WRITE_SHORT  0x00d2   0             // Opcode
  WRITE_LONG   0x00d6   2             // Parameter 1
  WRITE_LONG   0x00da   1             // Parameter 2
  WRITE_SHORT  0x0102   18            // Opcode
  WRITE_LONG   0x0106   15            // Parameter 1
  WRITE_LONG   0x010a   3             // Parameter 2
  WRITE_SHORT  0x0132   87            // Opcode
  WRITE_LONG   0x0136   10            // Parameter 1
  WRITE_LONG   0x013a   0             // Parameter 2
  WRITE_SHORT  0x0162   7             // Opcode
  WRITE_LONG   0x0166   22            // Parameter 1
  WRITE_LONG   0x016a   4             // Parameter 2
  WRITE_SHORT  0x0192   7             // Opcode
  WRITE_LONG   0x0196   27            // Parameter 1
  INSERT_BYTES 0x01c2   48            // new feature block
  WRITE_SHORT  0x01c2   145           // Opcode
  WRITE_BYTE   0x01c4   1             // Target type
  WRITE_BYTE   0x01c5   0             // Power
  WRITE_LONG   0x01c6   0             // Parameter 1
  WRITE_LONG   0x01ca   0             // Parameter 2
  WRITE_BYTE   0x01ce   2             // Timing metho
  WRITE_BYTE   0x01cf   0             // Resistance
  WRITE_LONG   0x01d0   0             // Duration
  WRITE_BYTE   0x01d4   100           // Max. prob.
  WRITE_BYTE   0x01d5   0             // Min. prob.
  WRITE_ASCII  0x01d6   ~~         #8 // Resource
  WRITE_LONG   0x01de   0             // Min level
  WRITE_LONG   0x01e2   0             // Max level
  WRITE_LONG   0x01e6   0             // S. throw typ
  WRITE_LONG   0x01ea   0             // S. throw bon
  WRITE_LONG   0x01ee   0             // Special
  INSERT_BYTES 0x01f2   48            // new feature block
  WRITE_SHORT  0x01f2   144           // Opcode
  WRITE_BYTE   0x01f4   1             // Target type
  WRITE_BYTE   0x01f5   0             // Power
  WRITE_LONG   0x01f6   0             // Parameter 1
  WRITE_LONG   0x01fa   0             // Parameter 2
  WRITE_BYTE   0x01fe   9             // Timing metho
  WRITE_BYTE   0x01ff   0             // Resistance
  WRITE_LONG   0x0200   0             // Duration
  WRITE_BYTE   0x0204   100           // Max. prob.
  WRITE_BYTE   0x0205   0             // Min. prob.
  WRITE_ASCII  0x0206   ~~         #8 // Resource
  WRITE_LONG   0x020e   0             // Min level
  WRITE_LONG   0x0212   0             // Max level
  WRITE_LONG   0x0216   0             // S. throw typ
  WRITE_LONG   0x021a   0             // S. throw bon
  WRITE_LONG   0x021e   0             // Special

COPY_EXISTING ~leat24.itm~ ~override/leat24.itm~
  WRITE_LONG   0x0076   21            // Parameter 1
  WRITE_SHORT  0x00a2   0             // Opcode
  WRITE_LONG   0x00a6   1             // Parameter 1
  WRITE_LONG   0x00aa   16            // Parameter 2
  WRITE_LONG   0x00d6   21            // Parameter 1
  WRITE_LONG   0x00da   4             // Parameter 2
  WRITE_SHORT  0x0102   7             // Opcode
  WRITE_LONG   0x0106   25            // Parameter 1
  WRITE_LONG   0x010a   0             // Parameter 2
  WRITE_SHORT  0x01f2   16            // Opcode
  WRITE_LONG   0x01f6   0             // Parameter 1
  WRITE_LONG   0x01fa   0             // Parameter 2
  WRITE_BYTE   0x022f   0             // Resistance
  SAY DESC     @9083

COPY_EXISTING ~marili.itm~ ~override/marili.itm~
  WRITE_LONG   0x001e   0x4000d780    // Usability
  WRITE_SHORT  0x0070   7             // Equip count
  WRITE_SHORT  0x0086   4             // Thac0 bonus
  WRITE_SHORT  0x008c   4             // Dice bonus
  WRITE_SHORT  0x0092   7             // Feat. offset
  WRITE_SHORT  0x01ca   98            // Opcode
  WRITE_BYTE   0x01cc   1             // Target type
  WRITE_LONG   0x01ce   3             // Parameter 1
  WRITE_LONG   0x01d2   2             // Parameter 2
  WRITE_BYTE   0x01d6   2             // Timing metho
  WRITE_BYTE   0x01d7   0             // Resistance
  WRITE_BYTE   0x01dc   100           // Max. prob.
  WRITE_LONG   0x01e6   0             // Min level
  WRITE_LONG   0x01ea   0             // Max level
  WRITE_LONG   0x0202   524288        // Parameter 2
  WRITE_BYTE   0x0207   0             // Resistance
  WRITE_BYTE   0x020c   10            // Max. prob.
  WRITE_BYTE   0x020d   0             // Min. prob.
  WRITE_LONG   0x0232   65536         // Parameter 2
  WRITE_BYTE   0x0237   0             // Resistance
  WRITE_BYTE   0x023c   20            // Max. prob.
  WRITE_BYTE   0x023d   11            // Min. prob.
  WRITE_LONG   0x0262   131072        // Parameter 2
  WRITE_BYTE   0x0267   0             // Resistance
  WRITE_BYTE   0x026c   30            // Max. prob.
  WRITE_BYTE   0x026d   21            // Min. prob.
  WRITE_LONG   0x0292   262144        // Parameter 2
  WRITE_BYTE   0x0297   0             // Resistance
  WRITE_BYTE   0x029c   40            // Max. prob.
  WRITE_BYTE   0x029d   31            // Min. prob.
  WRITE_LONG   0x02c2   4194304       // Parameter 2
  WRITE_BYTE   0x02c7   0             // Resistance
  WRITE_BYTE   0x02cc   50            // Max. prob.
  WRITE_BYTE   0x02cd   41            // Min. prob.
  WRITE_SHORT  0x02ea   12            // Opcode
  WRITE_LONG   0x02ee   0             // Parameter 1
  WRITE_LONG   0x02f2   1048576       // Parameter 2
  WRITE_BYTE   0x02f6   1             // Timing metho
  WRITE_BYTE   0x02f7   0             // Resistance
  WRITE_LONG   0x02f8   0             // Duration
  WRITE_BYTE   0x02fc   60            // Max. prob.
  WRITE_BYTE   0x02fd   51            // Min. prob.
  WRITE_LONG   0x0306   1             // Min level
  WRITE_LONG   0x030a   6             // Max level
  WRITE_SHORT  0x031a   25            // Opcode
  WRITE_LONG   0x031e   2             // Parameter 1
  WRITE_LONG   0x0322   2             // Parameter 2
  WRITE_BYTE   0x0326   0             // Timing metho
  WRITE_BYTE   0x0327   0             // Resistance
  WRITE_LONG   0x0328   6             // Duration
  WRITE_BYTE   0x032c   90            // Max. prob.
  WRITE_BYTE   0x032d   61            // Min. prob.
  WRITE_LONG   0x0336   0             // Min level
  WRITE_LONG   0x033a   0             // Max level
  WRITE_SHORT  0x034a   12            // Opcode
  WRITE_LONG   0x0352   2097152       // Parameter 2
  WRITE_BYTE   0x0356   1             // Timing metho
  WRITE_BYTE   0x0357   0             // Resistance
  WRITE_LONG   0x0358   0             // Duration
  WRITE_BYTE   0x035c   100           // Max. prob.
  WRITE_BYTE   0x035d   91            // Min. prob.
  WRITE_LONG   0x0366   1             // Min level
  WRITE_LONG   0x036a   6             // Max level
  INSERT_BYTES 0x037a   48            // new feature block
  WRITE_SHORT  0x037a   142           // Opcode
  WRITE_BYTE   0x037c   2             // Target type
  WRITE_BYTE   0x037d   0             // Power
  WRITE_LONG   0x037e   0             // Parameter 1
  WRITE_LONG   0x0382   6             // Parameter 2
  WRITE_BYTE   0x0386   0             // Timing metho
  WRITE_BYTE   0x0387   0             // Resistance
  WRITE_LONG   0x0388   6             // Duration
  WRITE_BYTE   0x038c   90            // Max. prob.
  WRITE_BYTE   0x038d   61            // Min. prob.
  WRITE_ASCII  0x038e   ~~         #8 // Resource
  WRITE_LONG   0x0396   0             // Min level
  WRITE_LONG   0x039a   0             // Max level
  WRITE_LONG   0x039e   0             // S. throw typ
  WRITE_LONG   0x03a2   0             // S. throw bon
  WRITE_LONG   0x03a6   0             // Special

COPY_EXISTING ~mdog1.itm~ ~override/mdog1.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0070   14            // Equip count
  WRITE_SHORT  0x0072   7             // Opcode
  WRITE_LONG   0x0076   14            // Parameter 1
  WRITE_LONG   0x007a   6             // Parameter 2
  WRITE_SHORT  0x00a2   7             // Opcode
  WRITE_LONG   0x00a6   14            // Parameter 1
  WRITE_LONG   0x00aa   3             // Parameter 2
  WRITE_SHORT  0x00d2   7             // Opcode
  WRITE_LONG   0x00d6   14            // Parameter 1
  WRITE_LONG   0x00da   4             // Parameter 2
  WRITE_SHORT  0x0102   7             // Opcode
  WRITE_LONG   0x0106   14            // Parameter 1
  WRITE_LONG   0x010a   0             // Parameter 2
  WRITE_ASCII  0x0116   ~~         #8 // Resource
  WRITE_SHORT  0x0132   7             // Opcode
  WRITE_LONG   0x0136   14            // Parameter 1
  WRITE_LONG   0x013a   2             // Parameter 2
  WRITE_SHORT  0x0162   7             // Opcode
  WRITE_LONG   0x0166   14            // Parameter 1
  WRITE_LONG   0x016a   1             // Parameter 2
  WRITE_SHORT  0x0192   7             // Opcode
  WRITE_LONG   0x0196   14            // Parameter 1
  WRITE_LONG   0x019a   5             // Parameter 2
  WRITE_BYTE   0x019f   0             // Resistance
  WRITE_ASCII  0x01a6   ~~         #8 // Resource
  WRITE_SHORT  0x01c2   9             // Opcode
  WRITE_LONG   0x01c6   17920         // Parameter 1
  WRITE_LONG   0x01ca   2293765       // Parameter 2
  WRITE_BYTE   0x01cf   0             // Resistance
  WRITE_SHORT  0x01f2   9             // Opcode
  WRITE_LONG   0x01f6   436535296     // Parameter 1
  WRITE_LONG   0x01fa   2621446       // Parameter 2
  WRITE_BYTE   0x01ff   0             // Resistance
  WRITE_SHORT  0x0222   9             // Opcode
  WRITE_LONG   0x0226   436535296     // Parameter 1
  WRITE_LONG   0x022a   2621443       // Parameter 2
  WRITE_BYTE   0x022f   0             // Resistance
  WRITE_SHORT  0x0252   9             // Opcode
  WRITE_LONG   0x0256   436535296     // Parameter 1
  WRITE_LONG   0x025a   2621444       // Parameter 2
  WRITE_BYTE   0x025f   0             // Resistance
  WRITE_SHORT  0x0282   9             // Opcode
  WRITE_LONG   0x0286   436535296     // Parameter 1
  WRITE_LONG   0x028a   2621440       // Parameter 2
  WRITE_BYTE   0x028f   0             // Resistance
  WRITE_SHORT  0x02b2   9             // Opcode
  WRITE_LONG   0x02b6   436535296     // Parameter 1
  WRITE_LONG   0x02ba   2621442       // Parameter 2
  WRITE_SHORT  0x02e2   9             // Opcode
  WRITE_LONG   0x02e6   436535296     // Parameter 1
  WRITE_LONG   0x02ea   2621441       // Parameter 2
  SET bytes_to_remove = SOURCE_SIZE - 0x312
  DELETE_BYTES 0x312    bytes_to_remove

COPY_EXISTING ~melfmet.itm~ ~override/melfmet.itm~
  WRITE_LONG   0x0018   104           // Attributes
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   20            // Stack
  WRITE_LONG   0x004c   1             // Weight
  WRITE_LONG   0x0060   3             // Magiclevel
  WRITE_SHORT  0x0086   3             // Thac0 bonus
  WRITE_SHORT  0x0088   4             // Dice size
  WRITE_SHORT  0x008a   1             // Dice count
  WRITE_SHORT  0x008e   4             // Damagetype
  WRITE_BYTE   0x00dd   0             // Power
  WRITE_ASCII  0x00ee   ~ICFIRSDI~ #8 // Resource
  WRITE_BYTE   0x010d   0             // Power

COPY_EXISTING ~misc3a.itm~ ~override/misc3a.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0042   0             // Lore to ID
  WRITE_BYTE   0x0073   0             // Force ID
  WRITE_ASCII  0x0076   ~IMISC3A~  #8 // Use icon
  WRITE_BYTE   0x007e   1             // Target type
  WRITE_SHORT  0x0080   40            // Range
  WRITE_BYTE   0x00ab   0             // Force ID
  WRITE_ASCII  0x00ae   ~ISCRL02~  #8 // Use icon
  WRITE_SHORT  0x00c8   3             // Feat. count
  WRITE_SHORT  0x00e2   146           // Opcode
  WRITE_BYTE   0x00e4   2             // Target type
  WRITE_SHORT  0x0112   122           // Opcode
  WRITE_LONG   0x0116   1             // Parameter 1
  WRITE_ASCII  0x0126   ~MISC3A1~  #8 // Resource
  WRITE_SHORT  0x0142   123           // Opcode
  WRITE_LONG   0x0146   0             // Parameter 1
  WRITE_BYTE   0x0154   100           // Max. prob.
  WRITE_ASCII  0x0156   ~misc3a~   #8 // Resource
  WRITE_SHORT  0x0172   174           // Opcode
  WRITE_LONG   0x0176   0             // Parameter 1
  WRITE_BYTE   0x017f   1             // Resistance
  WRITE_BYTE   0x0184   100           // Max. prob.
  WRITE_BYTE   0x0185   0             // Min. prob.
  WRITE_ASCII  0x0186   ~EFF_M03~  #8 // Resource
  DELETE_BYTES 0x1a2    432

COPY_EXISTING ~misc3a1.itm~ ~override/misc3a1.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_ASCII  0x003a   ~IMISC3A~  #8 // Inventory
  WRITE_ASCII  0x0044   ~GBOOK01~  #8 // Ground
  WRITE_ASCII  0x0058   ~CMISC3A~  #8 // Desc icon
  WRITE_BYTE   0x0073   0             // Force ID
  WRITE_ASCII  0x0076   ~IMISC3A~  #8 // Use icon
  WRITE_BYTE   0x007e   4             // Target type
  WRITE_SHORT  0x0080   30            // Range
  WRITE_BYTE   0x00ab   0             // Force ID
  WRITE_ASCII  0x00ae   ~ISCRL02~  #8 // Use icon
  WRITE_SHORT  0x00c8   3             // Feat. count
  WRITE_SHORT  0x00e2   148           // Opcode
  WRITE_BYTE   0x00e4   1             // Target type
  WRITE_ASCII  0x00f6   ~SPWI601~  #8 // Resource
  WRITE_SHORT  0x0112   122           // Opcode
  WRITE_LONG   0x0116   1             // Parameter 1
  WRITE_ASCII  0x0126   ~MISC3A2~  #8 // Resource
  WRITE_SHORT  0x0142   123           // Opcode
  WRITE_LONG   0x0146   0             // Parameter 1
  WRITE_BYTE   0x0154   100           // Max. prob.
  WRITE_SHORT  0x0172   174           // Opcode
  WRITE_LONG   0x0176   0             // Parameter 1
  WRITE_BYTE   0x0184   100           // Max. prob.
  WRITE_BYTE   0x0185   0             // Min. prob.
  WRITE_ASCII  0x0186   ~EFF_M03~  #8 // Resource
  DELETE_BYTES 0x1a2    432
  SAY DESC     @9085

COPY_EXISTING ~misc3a2.itm~ ~override/misc3a2.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0054   39438         // ID desc
  WRITE_SHORT  0x0068   1             // Ext. count
  WRITE_LONG   0x006a   170           // Feat. offset
  WRITE_BYTE   0x0073   0             // Force ID
  WRITE_ASCII  0x0076   ~IMISC3A~  #8 // Use icon
  WRITE_SHORT  0x0080   45            // Range
  WRITE_SHORT  0x00aa   146           // Opcode
  WRITE_BYTE   0x00ac   2             // Target type
  WRITE_BYTE   0x00ad   0             // Power
  WRITE_LONG   0x00ae   10            // Parameter 1
  WRITE_LONG   0x00b2   0             // Parameter 2
  WRITE_BYTE   0x00b6   1             // Timing metho
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_LONG   0x00b8   0             // Duration
  WRITE_BYTE   0x00bc   100           // Max. prob.
  WRITE_BYTE   0x00bd   0             // Min. prob.
  WRITE_ASCII  0x00be   ~SPWI507~  #8 // Resource
  WRITE_LONG   0x00c6   0             // Min level
  WRITE_LONG   0x00ca   0             // Max level
  WRITE_LONG   0x00ce   0             // S. throw typ
  WRITE_LONG   0x00d2   0             // S. throw bon
  WRITE_LONG   0x00d6   0             // Special
  DELETE_BYTES 0xda     632
  SAY DESC     @9086

COPY_EXISTING ~misc3a3.itm~ ~override/misc3a3.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x0073   0             // Force ID
  WRITE_ASCII  0x0076   ~IMISC3A~  #8 // Use icon
  WRITE_SHORT  0x0080   1             // Range
  WRITE_BYTE   0x00ab   0             // Force ID
  WRITE_ASCII  0x00ae   ~ISCRL02~  #8 // Use icon
  WRITE_SHORT  0x00c8   3             // Feat. count
  WRITE_BYTE   0x00e4   2             // Target type
  WRITE_ASCII  0x00f6   ~SPWI609~  #8 // Resource
  WRITE_SHORT  0x0112   122           // Opcode
  WRITE_LONG   0x0116   1             // Parameter 1
  WRITE_ASCII  0x0126   ~MISC3A4~  #8 // Resource
  WRITE_SHORT  0x0142   123           // Opcode
  WRITE_LONG   0x0146   0             // Parameter 1
  WRITE_BYTE   0x0154   100           // Max. prob.
  WRITE_ASCII  0x0156   ~misc3a3~  #8 // Resource
  WRITE_SHORT  0x0172   174           // Opcode
  WRITE_LONG   0x0176   0             // Parameter 1
  WRITE_BYTE   0x0184   100           // Max. prob.
  WRITE_BYTE   0x0185   0             // Min. prob.
  WRITE_ASCII  0x0186   ~EFF_M03~  #8 // Resource
  DELETE_BYTES 0x1a2    432

COPY_EXISTING ~misc3a4.itm~ ~override/misc3a4.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_ASCII  0x003a   ~IMISC3A~  #8 // Inventory
  WRITE_ASCII  0x0044   ~GBOOK01~  #8 // Ground
  WRITE_ASCII  0x0058   ~CMISC3A~  #8 // Desc icon
  WRITE_BYTE   0x0073   0             // Force ID
  WRITE_ASCII  0x0076   ~IMISC3A~  #8 // Use icon
  WRITE_BYTE   0x007e   1             // Target type
  WRITE_BYTE   0x00ab   0             // Force ID
  WRITE_ASCII  0x00ae   ~ISCRL02~  #8 // Use icon
  WRITE_SHORT  0x00c8   3             // Feat. count
  WRITE_BYTE   0x00e4   2             // Target type
  WRITE_ASCII  0x00f6   ~SPWI512~  #8 // Resource
  WRITE_SHORT  0x0112   122           // Opcode
  WRITE_LONG   0x0116   1             // Parameter 1
  WRITE_ASCII  0x0126   ~MISC3A9~  #8 // Resource
  WRITE_SHORT  0x0142   123           // Opcode
  WRITE_LONG   0x0146   0             // Parameter 1
  WRITE_BYTE   0x0154   100           // Max. prob.
  WRITE_ASCII  0x0156   ~misc3a4~  #8 // Resource
  WRITE_SHORT  0x0172   174           // Opcode
  WRITE_LONG   0x0176   0             // Parameter 1
  WRITE_BYTE   0x0184   100           // Max. prob.
  WRITE_BYTE   0x0185   0             // Min. prob.
  WRITE_ASCII  0x0186   ~EFF_M03~  #8 // Resource
  DELETE_BYTES 0x1a2    432
  SAY DESC     @9087

COPY_EXISTING ~misc3l.itm~ ~override/misc3l.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0034   0             // Price
  WRITE_ASCII  0x003a   ~IMISC3L~  #8 // Inventory
  WRITE_ASCII  0x0058   ~CMISC3L~  #8 // Desc icon
  WRITE_ASCII  0x0076   ~IMISC3L~  #8 // Use icon
  WRITE_BYTE   0x007e   5             // Target type
  WRITE_SHORT  0x0080   1             // Range
  WRITE_BYTE   0x00ad   5             // Power
  WRITE_BYTE   0x00dd   5             // Power
  WRITE_BYTE   0x010d   5             // Power
  WRITE_BYTE   0x013d   5             // Power
  WRITE_BYTE   0x016d   5             // Power

COPY_EXISTING ~misc3m.itm~ ~override/misc3m.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x0029   0             // Kit 1
  WRITE_ASCII  0x0044   ~gsack01~  #8 // Ground
  WRITE_ASCII  0x0076   ~IMISC3M~  #8 // Use icon
  WRITE_BYTE   0x007e   1             // Target type
  WRITE_SHORT  0x0090   1             // Feat. count
  WRITE_SHORT  0x0094   1             // Charges
  WRITE_SHORT  0x009c   1             // Effect anima
  WRITE_SHORT  0x00aa   146           // Opcode
  WRITE_LONG   0x00ae   10            // Parameter 1
  WRITE_BYTE   0x00b6   1             // Timing metho
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_LONG   0x00b8   0             // Duration
  WRITE_ASCII  0x00be   ~SPWI401~  #8 // Resource
  DELETE_BYTES 0xda     192

COPY_EXISTING ~misc5c.itm~ ~override/misc5c.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0090   4             // Feat. count
  WRITE_SHORT  0x00aa   122           // Opcode
  WRITE_BYTE   0x00ac   1             // Target type
  WRITE_LONG   0x00b2   0             // Parameter 2
  WRITE_ASCII  0x00be   ~misc5z~   #8 // Resource
  WRITE_SHORT  0x00da   123           // Opcode
  WRITE_BYTE   0x00dc   1             // Target type
  WRITE_LONG   0x00e2   0             // Parameter 2
  WRITE_ASCII  0x00ee   ~misc5c~   #8 // Resource
  WRITE_SHORT  0x010a   215           // Opcode
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_ASCII  0x011e   ~spflast2~ #8 // Resource
  WRITE_SHORT  0x013a   215           // Opcode
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_ASCII  0x014e   ~spflsrin~ #8 // Resource
  SET bytes_to_remove = SOURCE_SIZE - 0x16a
  DELETE_BYTES 0x16a    bytes_to_remove

COPY_EXISTING ~misc5x.itm~ ~override/misc5x.itm~
  WRITE_LONG   0x0018   108           // Attributes
  WRITE_LONG   0x001e   0x3dffffd7    // Usability
  WRITE_LONG   0x0034   1000          // Price
  WRITE_ASCII  0x0044   ~GSACK01~  #8 // Ground
  WRITE_LONG   0x0054   103420        // ID desc
  WRITE_SHORT  0x0070   4             // Equip count
  WRITE_SHORT  0x0072   37            // Opcode
  WRITE_BYTE   0x0075   0             // Power
  WRITE_LONG   0x0076   2             // Parameter 1
  WRITE_LONG   0x007a   0             // Parameter 2
  WRITE_ASCII  0x0086   ~~         #8 // Resource
  WRITE_LONG   0x009e   0             // Special
  WRITE_SHORT  0x00a2   29            // Opcode
  WRITE_LONG   0x00a6   25            // Parameter 1
  WRITE_BYTE   0x00af   0             // Resistance
  WRITE_SHORT  0x00d2   31            // Opcode
  WRITE_LONG   0x00d6   25            // Parameter 1
  WRITE_BYTE   0x00df   0             // Resistance
  WRITE_SHORT  0x0102   144           // Opcode
  WRITE_LONG   0x010a   0             // Parameter 2
  WRITE_BYTE   0x010e   9             // Timing metho
  WRITE_BYTE   0x010f   0             // Resistance
  SET bytes_to_remove = SOURCE_SIZE - 0x132
  DELETE_BYTES 0x132    bytes_to_remove
  SAY DESC     @9091

COPY_EXISTING ~misca1.itm~ ~override/misca1.itm~
  WRITE_SHORT  0x001c   10            // Itemtype
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_ASCII  0x003a   ~IMISC1J~  #8 // Inventory
  WRITE_ASCII  0x0044   ~GTREAS01~ #8 // Ground
  WRITE_ASCII  0x0058   ~CMISC16~  #8 // Desc icon
  WRITE_BYTE   0x007f   0             // Resistance
  WRITE_LONG   0x00a6   3             // Parameter 1
  WRITE_BYTE   0x00af   0             // Resistance
  WRITE_BYTE   0x00df   0             // Resistance
  WRITE_BYTE   0x010f   0             // Resistance

COPY_EXISTING ~miscbc.itm~ ~override/miscbc.itm~
  WRITE_LONG   0x001e   0x4034d784    // Usability
  WRITE_SHORT  0x0022   12627         // Animation
  WRITE_BYTE   0x0029   4             // Kit 1
  WRITE_BYTE   0x002b   3             // Kit 2
  WRITE_BYTE   0x002d   128           // Kit 3
  WRITE_BYTE   0x002f   56            // Kit 4
  WRITE_LONG   0x0060   2             // Magiclevel
  WRITE_SHORT  0x0070   5             // Equip count
  WRITE_SHORT  0x0086   2             // Thac0 bonus
  WRITE_SHORT  0x008c   2             // Dice bonus
  WRITE_SHORT  0x0090   5             // Feat. count
  WRITE_SHORT  0x0092   5             // Feat. offset
  WRITE_SHORT  0x00aa   7             // Opcode
  WRITE_LONG   0x00ae   5             // Parameter 1
  WRITE_LONG   0x00b2   21            // Parameter 2
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_SHORT  0x00da   7             // Opcode
  WRITE_LONG   0x00de   22            // Parameter 1
  WRITE_LONG   0x00e2   20            // Parameter 2
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_ASCII  0x00ee   ~~         #8 // Resource
  WRITE_SHORT  0x010a   98            // Opcode
  WRITE_LONG   0x010e   5             // Parameter 1
  WRITE_LONG   0x0112   3             // Parameter 2
  WRITE_SHORT  0x013a   7             // Opcode
  WRITE_LONG   0x013e   29            // Parameter 1
  WRITE_LONG   0x0142   16            // Parameter 2
  WRITE_SHORT  0x016a   142           // Opcode
  WRITE_LONG   0x0172   87            // Parameter 2
  WRITE_BYTE   0x0177   0             // Resistance
  WRITE_SHORT  0x019a   17            // Opcode
  WRITE_LONG   0x019e   8             // Parameter 1
  WRITE_LONG   0x01a2   0             // Parameter 2
  WRITE_BYTE   0x01a6   1             // Timing metho
  WRITE_BYTE   0x01ac   15            // Max. prob.
  WRITE_LONG   0x01ba   "-1"          // Max level
  WRITE_SHORT  0x01ca   44            // Opcode
  WRITE_LONG   0x01ce   1             // Parameter 1
  WRITE_BYTE   0x01d6   0             // Timing metho
  WRITE_LONG   0x01d8   20            // Duration
  WRITE_BYTE   0x01dc   15            // Max. prob.
  WRITE_SHORT  0x01fa   142           // Opcode
  WRITE_LONG   0x0202   21            // Parameter 2
  WRITE_BYTE   0x0206   0             // Timing metho
  WRITE_BYTE   0x0207   0             // Resistance
  WRITE_LONG   0x0208   20            // Duration
  WRITE_BYTE   0x020c   15            // Max. prob.
  WRITE_ASCII  0x020e   ~~         #8 // Resource
  WRITE_SHORT  0x022a   139           // Opcode
  WRITE_LONG   0x022e   1145          // Parameter 1
  WRITE_LONG   0x0232   0             // Parameter 2
  WRITE_BYTE   0x0236   0             // Timing metho
  WRITE_BYTE   0x0237   0             // Resistance
  WRITE_LONG   0x0238   20            // Duration
  WRITE_BYTE   0x023c   15            // Max. prob.
  WRITE_SHORT  0x025a   139           // Opcode
  WRITE_LONG   0x025e   14022         // Parameter 1
  WRITE_LONG   0x0262   0             // Parameter 2
  WRITE_BYTE   0x0266   0             // Timing metho
  WRITE_BYTE   0x0267   0             // Resistance
  WRITE_LONG   0x0268   20            // Duration
  WRITE_BYTE   0x026c   15            // Max. prob.
  SET bytes_to_remove = SOURCE_SIZE - 0x28a
  DELETE_BYTES 0x28a    bytes_to_remove
  SAY DESC     @9074

COPY_EXISTING ~mistho.itm~ ~override/mistho.itm~
  WRITE_LONG   0x0018   96            // Attributes
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0086   3             // Thac0 bonus
  WRITE_SHORT  0x008e   1             // Damagetype
  WRITE_SHORT  0x0090   4             // Feat. count
  WRITE_SHORT  0x00aa   24            // Opcode
  WRITE_BYTE   0x00ad   5             // Power
  WRITE_LONG   0x00b2   0             // Parameter 2
  WRITE_BYTE   0x00b6   0             // Timing metho
  WRITE_BYTE   0x00b7   1             // Resistance
  WRITE_LONG   0x00b8   30            // Duration
  WRITE_BYTE   0x00bc   30            // Max. prob.
  WRITE_LONG   0x00c6   0             // Min level
  WRITE_LONG   0x00ca   0             // Max level
  WRITE_LONG   0x00ce   1             // S. throw typ
  WRITE_LONG   0x00d2   "-2"          // S. throw bon
  WRITE_SHORT  0x00da   142           // Opcode
  WRITE_BYTE   0x00dd   5             // Power
  WRITE_LONG   0x00e2   36            // Parameter 2
  WRITE_LONG   0x00fa   0             // Max level
  WRITE_SHORT  0x010a   12            // Opcode
  WRITE_LONG   0x0112   131072        // Parameter 2
  WRITE_BYTE   0x0116   1             // Timing metho
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_LONG   0x0118   0             // Duration
  WRITE_BYTE   0x011c   100           // Max. prob.
  WRITE_LONG   0x0126   1             // Min level
  WRITE_LONG   0x012a   8             // Max level
  WRITE_LONG   0x012e   0             // S. throw typ
  WRITE_LONG   0x0132   0             // S. throw bon
  WRITE_SHORT  0x013a   17            // Opcode
  WRITE_BYTE   0x013c   1             // Target type
  WRITE_LONG   0x013e   8             // Parameter 1
  WRITE_BYTE   0x0146   1             // Timing metho
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_LONG   0x0148   0             // Duration
  WRITE_BYTE   0x014c   100           // Max. prob.
  WRITE_LONG   0x015e   0             // S. throw typ
  WRITE_LONG   0x0162   0             // S. throw bon
  DELETE_BYTES 0x16a    96

COPY_EXISTING ~mistva.itm~ ~override/mistva.itm~
  WRITE_LONG   0x0018   96            // Attributes
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0060   4             // Magiclevel
  WRITE_SHORT  0x0070   1             // Equip count
  WRITE_SHORT  0x008e   2             // Damagetype
  WRITE_SHORT  0x0090   18            // Feat. count
  WRITE_SHORT  0x0092   1             // Feat. offset
  WRITE_SHORT  0x00aa   98            // Opcode
  WRITE_LONG   0x00ae   1             // Parameter 1
  WRITE_LONG   0x00b2   3             // Parameter 2
  WRITE_BYTE   0x00b6   2             // Timing metho
  WRITE_LONG   0x00b8   0             // Duration
  WRITE_LONG   0x00ca   0             // Max level
  WRITE_SHORT  0x00da   216           // Opcode
  WRITE_LONG   0x00de   1             // Parameter 1
  WRITE_LONG   0x00e2   0             // Parameter 2
  WRITE_BYTE   0x00e6   1             // Timing metho
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_BYTE   0x00ed   0             // Min. prob.
  WRITE_SHORT  0x010a   139           // Opcode
  WRITE_LONG   0x010e   41495         // Parameter 1
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_BYTE   0x011c   100           // Max. prob.
  WRITE_SHORT  0x013a   17            // Opcode
  WRITE_BYTE   0x013c   1             // Target type
  WRITE_LONG   0x013e   4             // Parameter 1
  WRITE_LONG   0x0142   0             // Parameter 2
  WRITE_BYTE   0x0146   1             // Timing metho
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_BYTE   0x014c   100           // Max. prob.
  INSERT_BYTES 0x016a   48            // new feature block
  WRITE_SHORT  0x016a   141           // Opcode
  WRITE_BYTE   0x016c   2             // Target type
  WRITE_BYTE   0x016d   0             // Power
  WRITE_LONG   0x016e   0             // Parameter 1
  WRITE_LONG   0x0172   34            // Parameter 2
  WRITE_BYTE   0x0176   1             // Timing metho
  WRITE_BYTE   0x0177   0             // Resistance
  WRITE_LONG   0x0178   0             // Duration
  WRITE_BYTE   0x017c   20            // Max. prob.
  WRITE_BYTE   0x017d   0             // Min. prob.
  WRITE_ASCII  0x017e   ~~         #8 // Resource
  WRITE_LONG   0x0186   0             // Min level
  WRITE_LONG   0x018a   0             // Max level
  WRITE_LONG   0x018e   0             // S. throw typ
  WRITE_LONG   0x0192   0             // S. throw bon
  WRITE_LONG   0x0196   0             // Special
  INSERT_BYTES 0x019a   48            // new feature block
  WRITE_SHORT  0x019a   221           // Opcode
  WRITE_BYTE   0x019c   2             // Target type
  WRITE_BYTE   0x019d   0             // Power
  WRITE_LONG   0x019e   9             // Parameter 1
  WRITE_LONG   0x01a2   2             // Parameter 2
  WRITE_BYTE   0x01a6   1             // Timing metho
  WRITE_BYTE   0x01a7   0             // Resistance
  WRITE_LONG   0x01a8   0             // Duration
  WRITE_BYTE   0x01ac   20            // Max. prob.
  WRITE_BYTE   0x01ad   0             // Min. prob.
  WRITE_ASCII  0x01ae   ~~         #8 // Resource
  WRITE_LONG   0x01b6   0             // Min level
  WRITE_LONG   0x01ba   0             // Max level
  WRITE_LONG   0x01be   0             // S. throw typ
  WRITE_LONG   0x01c2   0             // S. throw bon
  WRITE_LONG   0x01c6   0             // Special
  INSERT_BYTES 0x01ca   48            // new feature block
  WRITE_SHORT  0x01ca   0             // Opcode
  WRITE_BYTE   0x01cc   2             // Target type
  WRITE_BYTE   0x01cd   0             // Power
  WRITE_LONG   0x01ce   "-8"          // Parameter 1
  WRITE_LONG   0x01d2   1             // Parameter 2
  WRITE_BYTE   0x01d6   0             // Timing metho
  WRITE_BYTE   0x01d7   0             // Resistance
  WRITE_LONG   0x01d8   18            // Duration
  WRITE_BYTE   0x01dc   20            // Max. prob.
  WRITE_BYTE   0x01dd   0             // Min. prob.
  WRITE_ASCII  0x01de   ~~         #8 // Resource
  WRITE_LONG   0x01e6   0             // Min level
  WRITE_LONG   0x01ea   0             // Max level
  WRITE_LONG   0x01ee   0             // S. throw typ
  WRITE_LONG   0x01f2   0             // S. throw bon
  WRITE_LONG   0x01f6   0             // Special
  INSERT_BYTES 0x01fa   48            // new feature block
  WRITE_SHORT  0x01fa   40            // Opcode
  WRITE_BYTE   0x01fc   2             // Target type
  WRITE_BYTE   0x01fd   0             // Power
  WRITE_LONG   0x01fe   0             // Parameter 1
  WRITE_LONG   0x0202   0             // Parameter 2
  WRITE_BYTE   0x0206   0             // Timing metho
  WRITE_BYTE   0x0207   0             // Resistance
  WRITE_LONG   0x0208   18            // Duration
  WRITE_BYTE   0x020c   20            // Max. prob.
  WRITE_BYTE   0x020d   0             // Min. prob.
  WRITE_ASCII  0x020e   ~~         #8 // Resource
  WRITE_LONG   0x0216   0             // Min level
  WRITE_LONG   0x021a   0             // Max level
  WRITE_LONG   0x021e   0             // S. throw typ
  WRITE_LONG   0x0222   0             // S. throw bon
  WRITE_LONG   0x0226   0             // Special
  INSERT_BYTES 0x022a   48            // new feature block
  WRITE_SHORT  0x022a   139           // Opcode
  WRITE_BYTE   0x022c   2             // Target type
  WRITE_BYTE   0x022d   0             // Power
  WRITE_LONG   0x022e   64320         // Parameter 1
  WRITE_LONG   0x0232   0             // Parameter 2
  WRITE_BYTE   0x0236   1             // Timing metho
  WRITE_BYTE   0x0237   0             // Resistance
  WRITE_LONG   0x0238   0             // Duration
  WRITE_BYTE   0x023c   20            // Max. prob.
  WRITE_BYTE   0x023d   0             // Min. prob.
  WRITE_ASCII  0x023e   ~~         #8 // Resource
  WRITE_LONG   0x0246   0             // Min level
  WRITE_LONG   0x024a   0             // Max level
  WRITE_LONG   0x024e   0             // S. throw typ
  WRITE_LONG   0x0252   0             // S. throw bon
  WRITE_LONG   0x0256   0             // Special
  INSERT_BYTES 0x025a   48            // new feature block
  WRITE_SHORT  0x025a   12            // Opcode
  WRITE_BYTE   0x025c   2             // Target type
  WRITE_BYTE   0x025d   0             // Power
  WRITE_LONG   0x025e   0             // Parameter 1
  WRITE_LONG   0x0262   0             // Parameter 2
  WRITE_BYTE   0x0266   1             // Timing metho
  WRITE_BYTE   0x0267   0             // Resistance
  WRITE_LONG   0x0268   0             // Duration
  WRITE_BYTE   0x026c   20            // Max. prob.
  WRITE_BYTE   0x026d   0             // Min. prob.
  WRITE_ASCII  0x026e   ~~         #8 // Resource
  WRITE_LONG   0x0276   1             // Min level
  WRITE_LONG   0x027a   6             // Max level
  WRITE_LONG   0x027e   0             // S. throw typ
  WRITE_LONG   0x0282   0             // S. throw bon
  WRITE_LONG   0x0286   0             // Special
  INSERT_BYTES 0x028a   48            // new feature block
  WRITE_SHORT  0x028a   12            // Opcode
  WRITE_BYTE   0x028c   2             // Target type
  WRITE_BYTE   0x028d   0             // Power
  WRITE_LONG   0x028e   0             // Parameter 1
  WRITE_LONG   0x0292   0             // Parameter 2
  WRITE_BYTE   0x0296   4             // Timing metho
  WRITE_BYTE   0x0297   0             // Resistance
  WRITE_LONG   0x0298   6             // Duration
  WRITE_BYTE   0x029c   20            // Max. prob.
  WRITE_BYTE   0x029d   0             // Min. prob.
  WRITE_ASCII  0x029e   ~~         #8 // Resource
  WRITE_LONG   0x02a6   1             // Min level
  WRITE_LONG   0x02aa   6             // Max level
  WRITE_LONG   0x02ae   0             // S. throw typ
  WRITE_LONG   0x02b2   0             // S. throw bon
  WRITE_LONG   0x02b6   0             // Special
  INSERT_BYTES 0x02ba   48            // new feature block
  WRITE_SHORT  0x02ba   216           // Opcode
  WRITE_BYTE   0x02bc   2             // Target type
  WRITE_BYTE   0x02bd   0             // Power
  WRITE_LONG   0x02be   1             // Parameter 1
  WRITE_LONG   0x02c2   0             // Parameter 2
  WRITE_BYTE   0x02c6   4             // Timing metho
  WRITE_BYTE   0x02c7   0             // Resistance
  WRITE_LONG   0x02c8   6             // Duration
  WRITE_BYTE   0x02cc   20            // Max. prob.
  WRITE_BYTE   0x02cd   0             // Min. prob.
  WRITE_ASCII  0x02ce   ~~         #8 // Resource
  WRITE_LONG   0x02d6   0             // Min level
  WRITE_LONG   0x02da   0             // Max level
  WRITE_LONG   0x02de   0             // S. throw typ
  WRITE_LONG   0x02e2   0             // S. throw bon
  WRITE_LONG   0x02e6   0             // Special
  INSERT_BYTES 0x02ea   48            // new feature block
  WRITE_SHORT  0x02ea   139           // Opcode
  WRITE_BYTE   0x02ec   2             // Target type
  WRITE_BYTE   0x02ed   0             // Power
  WRITE_LONG   0x02ee   41495         // Parameter 1
  WRITE_LONG   0x02f2   0             // Parameter 2
  WRITE_BYTE   0x02f6   4             // Timing metho
  WRITE_BYTE   0x02f7   0             // Resistance
  WRITE_LONG   0x02f8   6             // Duration
  WRITE_BYTE   0x02fc   20            // Max. prob.
  WRITE_BYTE   0x02fd   0             // Min. prob.
  WRITE_ASCII  0x02fe   ~~         #8 // Resource
  WRITE_LONG   0x0306   0             // Min level
  WRITE_LONG   0x030a   0             // Max level
  WRITE_LONG   0x030e   0             // S. throw typ
  WRITE_LONG   0x0312   0             // S. throw bon
  WRITE_LONG   0x0316   0             // Special
  INSERT_BYTES 0x031a   48            // new feature block
  WRITE_SHORT  0x031a   12            // Opcode
  WRITE_BYTE   0x031c   2             // Target type
  WRITE_BYTE   0x031d   0             // Power
  WRITE_LONG   0x031e   0             // Parameter 1
  WRITE_LONG   0x0322   0             // Parameter 2
  WRITE_BYTE   0x0326   4             // Timing metho
  WRITE_BYTE   0x0327   0             // Resistance
  WRITE_LONG   0x0328   12            // Duration
  WRITE_BYTE   0x032c   20            // Max. prob.
  WRITE_BYTE   0x032d   0             // Min. prob.
  WRITE_ASCII  0x032e   ~~         #8 // Resource
  WRITE_LONG   0x0336   1             // Min level
  WRITE_LONG   0x033a   6             // Max level
  WRITE_LONG   0x033e   0             // S. throw typ
  WRITE_LONG   0x0342   0             // S. throw bon
  WRITE_LONG   0x0346   0             // Special
  INSERT_BYTES 0x034a   48            // new feature block
  WRITE_SHORT  0x034a   216           // Opcode
  WRITE_BYTE   0x034c   2             // Target type
  WRITE_BYTE   0x034d   0             // Power
  WRITE_LONG   0x034e   1             // Parameter 1
  WRITE_LONG   0x0352   0             // Parameter 2
  WRITE_BYTE   0x0356   4             // Timing metho
  WRITE_BYTE   0x0357   0             // Resistance
  WRITE_LONG   0x0358   12            // Duration
  WRITE_BYTE   0x035c   20            // Max. prob.
  WRITE_BYTE   0x035d   0             // Min. prob.
  WRITE_ASCII  0x035e   ~~         #8 // Resource
  WRITE_LONG   0x0366   0             // Min level
  WRITE_LONG   0x036a   0             // Max level
  WRITE_LONG   0x036e   0             // S. throw typ
  WRITE_LONG   0x0372   0             // S. throw bon
  WRITE_LONG   0x0376   0             // Special
  INSERT_BYTES 0x037a   48            // new feature block
  WRITE_SHORT  0x037a   139           // Opcode
  WRITE_BYTE   0x037c   2             // Target type
  WRITE_BYTE   0x037d   0             // Power
  WRITE_LONG   0x037e   41495         // Parameter 1
  WRITE_LONG   0x0382   0             // Parameter 2
  WRITE_BYTE   0x0386   4             // Timing metho
  WRITE_BYTE   0x0387   0             // Resistance
  WRITE_LONG   0x0388   12            // Duration
  WRITE_BYTE   0x038c   20            // Max. prob.
  WRITE_BYTE   0x038d   0             // Min. prob.
  WRITE_ASCII  0x038e   ~~         #8 // Resource
  WRITE_LONG   0x0396   0             // Min level
  WRITE_LONG   0x039a   0             // Max level
  WRITE_LONG   0x039e   0             // S. throw typ
  WRITE_LONG   0x03a2   0             // S. throw bon
  WRITE_LONG   0x03a6   0             // Special
  INSERT_BYTES 0x03aa   48            // new feature block
  WRITE_SHORT  0x03aa   12            // Opcode
  WRITE_BYTE   0x03ac   2             // Target type
  WRITE_BYTE   0x03ad   0             // Power
  WRITE_LONG   0x03ae   0             // Parameter 1
  WRITE_LONG   0x03b2   0             // Parameter 2
  WRITE_BYTE   0x03b6   4             // Timing metho
  WRITE_BYTE   0x03b7   0             // Resistance
  WRITE_LONG   0x03b8   18            // Duration
  WRITE_BYTE   0x03bc   20            // Max. prob.
  WRITE_BYTE   0x03bd   0             // Min. prob.
  WRITE_ASCII  0x03be   ~~         #8 // Resource
  WRITE_LONG   0x03c6   1             // Min level
  WRITE_LONG   0x03ca   6             // Max level
  WRITE_LONG   0x03ce   0             // S. throw typ
  WRITE_LONG   0x03d2   0             // S. throw bon
  WRITE_LONG   0x03d6   0             // Special
  INSERT_BYTES 0x03da   48            // new feature block
  WRITE_SHORT  0x03da   216           // Opcode
  WRITE_BYTE   0x03dc   2             // Target type
  WRITE_BYTE   0x03dd   0             // Power
  WRITE_LONG   0x03de   1             // Parameter 1
  WRITE_LONG   0x03e2   0             // Parameter 2
  WRITE_BYTE   0x03e6   4             // Timing metho
  WRITE_BYTE   0x03e7   0             // Resistance
  WRITE_LONG   0x03e8   18            // Duration
  WRITE_BYTE   0x03ec   20            // Max. prob.
  WRITE_BYTE   0x03ed   0             // Min. prob.
  WRITE_ASCII  0x03ee   ~~         #8 // Resource
  WRITE_LONG   0x03f6   0             // Min level
  WRITE_LONG   0x03fa   0             // Max level
  WRITE_LONG   0x03fe   0             // S. throw typ
  WRITE_LONG   0x0402   0             // S. throw bon
  WRITE_LONG   0x0406   0             // Special
  INSERT_BYTES 0x040a   48            // new feature block
  WRITE_SHORT  0x040a   139           // Opcode
  WRITE_BYTE   0x040c   2             // Target type
  WRITE_BYTE   0x040d   0             // Power
  WRITE_LONG   0x040e   41495         // Parameter 1
  WRITE_LONG   0x0412   0             // Parameter 2
  WRITE_BYTE   0x0416   4             // Timing metho
  WRITE_BYTE   0x0417   0             // Resistance
  WRITE_LONG   0x0418   18            // Duration
  WRITE_BYTE   0x041c   20            // Max. prob.
  WRITE_BYTE   0x041d   0             // Min. prob.
  WRITE_ASCII  0x041e   ~~         #8 // Resource
  WRITE_LONG   0x0426   0             // Min level
  WRITE_LONG   0x042a   0             // Max level
  WRITE_LONG   0x042e   0             // S. throw typ
  WRITE_LONG   0x0432   0             // S. throw bon
  WRITE_LONG   0x0436   0             // Special

COPY_EXISTING ~mistva2.itm~ ~override/mistva2.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0060   0             // Magiclevel
  WRITE_SHORT  0x0070   1             // Equip count
  WRITE_SHORT  0x0086   0             // Thac0 bonus
  WRITE_SHORT  0x0088   8             // Dice size
  WRITE_SHORT  0x008a   1             // Dice count
  WRITE_SHORT  0x008e   2             // Damagetype
  WRITE_SHORT  0x0090   18            // Feat. count
  WRITE_SHORT  0x0092   1             // Feat. offset
  WRITE_SHORT  0x00aa   98            // Opcode
  WRITE_LONG   0x00ae   1             // Parameter 1
  WRITE_LONG   0x00b2   3             // Parameter 2
  WRITE_BYTE   0x00b6   2             // Timing metho
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_LONG   0x00b8   0             // Duration
  WRITE_LONG   0x00ca   0             // Max level
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_BYTE   0x00ec   100           // Max. prob.
  WRITE_SHORT  0x010a   139           // Opcode
  WRITE_LONG   0x010e   41495         // Parameter 1
  WRITE_LONG   0x0112   0             // Parameter 2
  WRITE_BYTE   0x0116   1             // Timing metho
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_BYTE   0x011c   100           // Max. prob.
  WRITE_LONG   0x012a   0             // Max level
  WRITE_SHORT  0x013a   17            // Opcode
  WRITE_BYTE   0x013c   1             // Target type
  WRITE_LONG   0x013e   4             // Parameter 1
  WRITE_LONG   0x0142   0             // Parameter 2
  WRITE_BYTE   0x0146   1             // Timing metho
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_LONG   0x0148   0             // Duration
  WRITE_LONG   0x015a   0             // Max level
  WRITE_SHORT  0x016a   141           // Opcode
  WRITE_LONG   0x016e   0             // Parameter 1
  WRITE_LONG   0x0172   34            // Parameter 2
  WRITE_BYTE   0x0177   0             // Resistance
  WRITE_BYTE   0x017c   20            // Max. prob.
  INSERT_BYTES 0x019a   48            // new feature block
  WRITE_SHORT  0x019a   221           // Opcode
  WRITE_BYTE   0x019c   2             // Target type
  WRITE_BYTE   0x019d   0             // Power
  WRITE_LONG   0x019e   9             // Parameter 1
  WRITE_LONG   0x01a2   2             // Parameter 2
  WRITE_BYTE   0x01a6   1             // Timing metho
  WRITE_BYTE   0x01a7   0             // Resistance
  WRITE_LONG   0x01a8   0             // Duration
  WRITE_BYTE   0x01ac   20            // Max. prob.
  WRITE_BYTE   0x01ad   0             // Min. prob.
  WRITE_ASCII  0x01ae   ~~         #8 // Resource
  WRITE_LONG   0x01b6   0             // Min level
  WRITE_LONG   0x01ba   0             // Max level
  WRITE_LONG   0x01be   0             // S. throw typ
  WRITE_LONG   0x01c2   0             // S. throw bon
  WRITE_LONG   0x01c6   0             // Special
  INSERT_BYTES 0x01ca   48            // new feature block
  WRITE_SHORT  0x01ca   0             // Opcode
  WRITE_BYTE   0x01cc   2             // Target type
  WRITE_BYTE   0x01cd   0             // Power
  WRITE_LONG   0x01ce   "-8"          // Parameter 1
  WRITE_LONG   0x01d2   1             // Parameter 2
  WRITE_BYTE   0x01d6   0             // Timing metho
  WRITE_BYTE   0x01d7   0             // Resistance
  WRITE_LONG   0x01d8   18            // Duration
  WRITE_BYTE   0x01dc   20            // Max. prob.
  WRITE_BYTE   0x01dd   0             // Min. prob.
  WRITE_ASCII  0x01de   ~~         #8 // Resource
  WRITE_LONG   0x01e6   0             // Min level
  WRITE_LONG   0x01ea   0             // Max level
  WRITE_LONG   0x01ee   0             // S. throw typ
  WRITE_LONG   0x01f2   0             // S. throw bon
  WRITE_LONG   0x01f6   0             // Special
  INSERT_BYTES 0x01fa   48            // new feature block
  WRITE_SHORT  0x01fa   40            // Opcode
  WRITE_BYTE   0x01fc   2             // Target type
  WRITE_BYTE   0x01fd   0             // Power
  WRITE_LONG   0x01fe   0             // Parameter 1
  WRITE_LONG   0x0202   0             // Parameter 2
  WRITE_BYTE   0x0206   0             // Timing metho
  WRITE_BYTE   0x0207   0             // Resistance
  WRITE_LONG   0x0208   18            // Duration
  WRITE_BYTE   0x020c   20            // Max. prob.
  WRITE_BYTE   0x020d   0             // Min. prob.
  WRITE_ASCII  0x020e   ~~         #8 // Resource
  WRITE_LONG   0x0216   0             // Min level
  WRITE_LONG   0x021a   0             // Max level
  WRITE_LONG   0x021e   0             // S. throw typ
  WRITE_LONG   0x0222   0             // S. throw bon
  WRITE_LONG   0x0226   0             // Special
  INSERT_BYTES 0x022a   48            // new feature block
  WRITE_SHORT  0x022a   139           // Opcode
  WRITE_BYTE   0x022c   2             // Target type
  WRITE_BYTE   0x022d   0             // Power
  WRITE_LONG   0x022e   64320         // Parameter 1
  WRITE_LONG   0x0232   0             // Parameter 2
  WRITE_BYTE   0x0236   1             // Timing metho
  WRITE_BYTE   0x0237   0             // Resistance
  WRITE_LONG   0x0238   0             // Duration
  WRITE_BYTE   0x023c   20            // Max. prob.
  WRITE_BYTE   0x023d   0             // Min. prob.
  WRITE_ASCII  0x023e   ~~         #8 // Resource
  WRITE_LONG   0x0246   0             // Min level
  WRITE_LONG   0x024a   0             // Max level
  WRITE_LONG   0x024e   0             // S. throw typ
  WRITE_LONG   0x0252   0             // S. throw bon
  WRITE_LONG   0x0256   0             // Special
  INSERT_BYTES 0x025a   48            // new feature block
  WRITE_SHORT  0x025a   12            // Opcode
  WRITE_BYTE   0x025c   2             // Target type
  WRITE_BYTE   0x025d   0             // Power
  WRITE_LONG   0x025e   0             // Parameter 1
  WRITE_LONG   0x0262   0             // Parameter 2
  WRITE_BYTE   0x0266   1             // Timing metho
  WRITE_BYTE   0x0267   0             // Resistance
  WRITE_LONG   0x0268   0             // Duration
  WRITE_BYTE   0x026c   20            // Max. prob.
  WRITE_BYTE   0x026d   0             // Min. prob.
  WRITE_ASCII  0x026e   ~~         #8 // Resource
  WRITE_LONG   0x0276   1             // Min level
  WRITE_LONG   0x027a   6             // Max level
  WRITE_LONG   0x027e   0             // S. throw typ
  WRITE_LONG   0x0282   0             // S. throw bon
  WRITE_LONG   0x0286   0             // Special
  INSERT_BYTES 0x028a   48            // new feature block
  WRITE_SHORT  0x028a   12            // Opcode
  WRITE_BYTE   0x028c   2             // Target type
  WRITE_BYTE   0x028d   0             // Power
  WRITE_LONG   0x028e   0             // Parameter 1
  WRITE_LONG   0x0292   0             // Parameter 2
  WRITE_BYTE   0x0296   4             // Timing metho
  WRITE_BYTE   0x0297   0             // Resistance
  WRITE_LONG   0x0298   6             // Duration
  WRITE_BYTE   0x029c   20            // Max. prob.
  WRITE_BYTE   0x029d   0             // Min. prob.
  WRITE_ASCII  0x029e   ~~         #8 // Resource
  WRITE_LONG   0x02a6   1             // Min level
  WRITE_LONG   0x02aa   6             // Max level
  WRITE_LONG   0x02ae   0             // S. throw typ
  WRITE_LONG   0x02b2   0             // S. throw bon
  WRITE_LONG   0x02b6   0             // Special
  INSERT_BYTES 0x02ba   48            // new feature block
  WRITE_SHORT  0x02ba   216           // Opcode
  WRITE_BYTE   0x02bc   2             // Target type
  WRITE_BYTE   0x02bd   0             // Power
  WRITE_LONG   0x02be   1             // Parameter 1
  WRITE_LONG   0x02c2   0             // Parameter 2
  WRITE_BYTE   0x02c6   4             // Timing metho
  WRITE_BYTE   0x02c7   0             // Resistance
  WRITE_LONG   0x02c8   6             // Duration
  WRITE_BYTE   0x02cc   20            // Max. prob.
  WRITE_BYTE   0x02cd   0             // Min. prob.
  WRITE_ASCII  0x02ce   ~~         #8 // Resource
  WRITE_LONG   0x02d6   0             // Min level
  WRITE_LONG   0x02da   0             // Max level
  WRITE_LONG   0x02de   0             // S. throw typ
  WRITE_LONG   0x02e2   0             // S. throw bon
  WRITE_LONG   0x02e6   0             // Special
  INSERT_BYTES 0x02ea   48            // new feature block
  WRITE_SHORT  0x02ea   139           // Opcode
  WRITE_BYTE   0x02ec   2             // Target type
  WRITE_BYTE   0x02ed   0             // Power
  WRITE_LONG   0x02ee   41495         // Parameter 1
  WRITE_LONG   0x02f2   0             // Parameter 2
  WRITE_BYTE   0x02f6   4             // Timing metho
  WRITE_BYTE   0x02f7   0             // Resistance
  WRITE_LONG   0x02f8   6             // Duration
  WRITE_BYTE   0x02fc   20            // Max. prob.
  WRITE_BYTE   0x02fd   0             // Min. prob.
  WRITE_ASCII  0x02fe   ~~         #8 // Resource
  WRITE_LONG   0x0306   0             // Min level
  WRITE_LONG   0x030a   0             // Max level
  WRITE_LONG   0x030e   0             // S. throw typ
  WRITE_LONG   0x0312   0             // S. throw bon
  WRITE_LONG   0x0316   0             // Special
  INSERT_BYTES 0x031a   48            // new feature block
  WRITE_SHORT  0x031a   12            // Opcode
  WRITE_BYTE   0x031c   2             // Target type
  WRITE_BYTE   0x031d   0             // Power
  WRITE_LONG   0x031e   0             // Parameter 1
  WRITE_LONG   0x0322   0             // Parameter 2
  WRITE_BYTE   0x0326   4             // Timing metho
  WRITE_BYTE   0x0327   0             // Resistance
  WRITE_LONG   0x0328   12            // Duration
  WRITE_BYTE   0x032c   20            // Max. prob.
  WRITE_BYTE   0x032d   0             // Min. prob.
  WRITE_ASCII  0x032e   ~~         #8 // Resource
  WRITE_LONG   0x0336   1             // Min level
  WRITE_LONG   0x033a   6             // Max level
  WRITE_LONG   0x033e   0             // S. throw typ
  WRITE_LONG   0x0342   0             // S. throw bon
  WRITE_LONG   0x0346   0             // Special
  INSERT_BYTES 0x034a   48            // new feature block
  WRITE_SHORT  0x034a   216           // Opcode
  WRITE_BYTE   0x034c   2             // Target type
  WRITE_BYTE   0x034d   0             // Power
  WRITE_LONG   0x034e   1             // Parameter 1
  WRITE_LONG   0x0352   0             // Parameter 2
  WRITE_BYTE   0x0356   4             // Timing metho
  WRITE_BYTE   0x0357   0             // Resistance
  WRITE_LONG   0x0358   12            // Duration
  WRITE_BYTE   0x035c   20            // Max. prob.
  WRITE_BYTE   0x035d   0             // Min. prob.
  WRITE_ASCII  0x035e   ~~         #8 // Resource
  WRITE_LONG   0x0366   0             // Min level
  WRITE_LONG   0x036a   0             // Max level
  WRITE_LONG   0x036e   0             // S. throw typ
  WRITE_LONG   0x0372   0             // S. throw bon
  WRITE_LONG   0x0376   0             // Special
  INSERT_BYTES 0x037a   48            // new feature block
  WRITE_SHORT  0x037a   139           // Opcode
  WRITE_BYTE   0x037c   2             // Target type
  WRITE_BYTE   0x037d   0             // Power
  WRITE_LONG   0x037e   41495         // Parameter 1
  WRITE_LONG   0x0382   0             // Parameter 2
  WRITE_BYTE   0x0386   4             // Timing metho
  WRITE_BYTE   0x0387   0             // Resistance
  WRITE_LONG   0x0388   12            // Duration
  WRITE_BYTE   0x038c   20            // Max. prob.
  WRITE_BYTE   0x038d   0             // Min. prob.
  WRITE_ASCII  0x038e   ~~         #8 // Resource
  WRITE_LONG   0x0396   0             // Min level
  WRITE_LONG   0x039a   0             // Max level
  WRITE_LONG   0x039e   0             // S. throw typ
  WRITE_LONG   0x03a2   0             // S. throw bon
  WRITE_LONG   0x03a6   0             // Special
  INSERT_BYTES 0x03aa   48            // new feature block
  WRITE_SHORT  0x03aa   12            // Opcode
  WRITE_BYTE   0x03ac   2             // Target type
  WRITE_BYTE   0x03ad   0             // Power
  WRITE_LONG   0x03ae   0             // Parameter 1
  WRITE_LONG   0x03b2   0             // Parameter 2
  WRITE_BYTE   0x03b6   4             // Timing metho
  WRITE_BYTE   0x03b7   0             // Resistance
  WRITE_LONG   0x03b8   18            // Duration
  WRITE_BYTE   0x03bc   20            // Max. prob.
  WRITE_BYTE   0x03bd   0             // Min. prob.
  WRITE_ASCII  0x03be   ~~         #8 // Resource
  WRITE_LONG   0x03c6   1             // Min level
  WRITE_LONG   0x03ca   6             // Max level
  WRITE_LONG   0x03ce   0             // S. throw typ
  WRITE_LONG   0x03d2   0             // S. throw bon
  WRITE_LONG   0x03d6   0             // Special
  INSERT_BYTES 0x03da   48            // new feature block
  WRITE_SHORT  0x03da   216           // Opcode
  WRITE_BYTE   0x03dc   2             // Target type
  WRITE_BYTE   0x03dd   0             // Power
  WRITE_LONG   0x03de   1             // Parameter 1
  WRITE_LONG   0x03e2   0             // Parameter 2
  WRITE_BYTE   0x03e6   4             // Timing metho
  WRITE_BYTE   0x03e7   0             // Resistance
  WRITE_LONG   0x03e8   18            // Duration
  WRITE_BYTE   0x03ec   20            // Max. prob.
  WRITE_BYTE   0x03ed   0             // Min. prob.
  WRITE_ASCII  0x03ee   ~~         #8 // Resource
  WRITE_LONG   0x03f6   0             // Min level
  WRITE_LONG   0x03fa   0             // Max level
  WRITE_LONG   0x03fe   0             // S. throw typ
  WRITE_LONG   0x0402   0             // S. throw bon
  WRITE_LONG   0x0406   0             // Special
  INSERT_BYTES 0x040a   48            // new feature block
  WRITE_SHORT  0x040a   139           // Opcode
  WRITE_BYTE   0x040c   2             // Target type
  WRITE_BYTE   0x040d   0             // Power
  WRITE_LONG   0x040e   41495         // Parameter 1
  WRITE_LONG   0x0412   0             // Parameter 2
  WRITE_BYTE   0x0416   4             // Timing metho
  WRITE_BYTE   0x0417   0             // Resistance
  WRITE_LONG   0x0418   18            // Duration
  WRITE_BYTE   0x041c   20            // Max. prob.
  WRITE_BYTE   0x041d   0             // Min. prob.
  WRITE_ASCII  0x041e   ~~         #8 // Resource
  WRITE_LONG   0x0426   0             // Min level
  WRITE_LONG   0x042a   0             // Max level
  WRITE_LONG   0x042e   0             // S. throw typ
  WRITE_LONG   0x0432   0             // S. throw bon
  WRITE_LONG   0x0436   0             // Special

COPY_EXISTING ~nishruu.itm~ ~override/nishruu.itm~
  WRITE_LONG   0x0008   "-1"          // UnID name
  WRITE_LONG   0x000c   "-1"          // ID name
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0070   3             // Equip count
  WRITE_SHORT  0x008a   1             // Dice count
  WRITE_SHORT  0x0092   3             // Feat. offset
  WRITE_SHORT  0x00da   206           // Opcode
  WRITE_BYTE   0x00dc   1             // Target type
  WRITE_LONG   0x00de   0             // Parameter 1
  WRITE_BYTE   0x00e6   2             // Timing metho
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_ASCII  0x00ee   ~SPWI608~  #8 // Resource
  WRITE_SHORT  0x010a   206           // Opcode
  WRITE_BYTE   0x010c   1             // Target type
  WRITE_LONG   0x010e   0             // Parameter 1
  WRITE_BYTE   0x0116   2             // Timing metho
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_ASCII  0x011e   ~SPWI805~  #8 // Resource
  INSERT_BYTES 0x013a   48            // new feature block
  WRITE_SHORT  0x013a   243           // Opcode
  WRITE_BYTE   0x013c   2             // Target type
  WRITE_BYTE   0x013d   0             // Power
  WRITE_LONG   0x013e   1             // Parameter 1
  WRITE_LONG   0x0142   0             // Parameter 2
  WRITE_BYTE   0x0146   1             // Timing metho
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_LONG   0x0148   0             // Duration
  WRITE_BYTE   0x014c   100           // Max. prob.
  WRITE_BYTE   0x014d   0             // Min. prob.
  WRITE_ASCII  0x014e   ~~         #8 // Resource
  WRITE_LONG   0x0156   0             // Min level
  WRITE_LONG   0x015a   0             // Max level
  WRITE_LONG   0x015e   0             // S. throw typ
  WRITE_LONG   0x0162   0             // S. throw bon
  WRITE_LONG   0x0166   0             // Special
  INSERT_BYTES 0x016a   48            // new feature block
  WRITE_SHORT  0x016a   244           // Opcode
  WRITE_BYTE   0x016c   2             // Target type
  WRITE_BYTE   0x016d   0             // Power
  WRITE_LONG   0x016e   1             // Parameter 1
  WRITE_LONG   0x0172   0             // Parameter 2
  WRITE_BYTE   0x0176   1             // Timing metho
  WRITE_BYTE   0x0177   0             // Resistance
  WRITE_LONG   0x0178   0             // Duration
  WRITE_BYTE   0x017c   100           // Max. prob.
  WRITE_BYTE   0x017d   0             // Min. prob.
  WRITE_ASCII  0x017e   ~~         #8 // Resource
  WRITE_LONG   0x0186   0             // Min level
  WRITE_LONG   0x018a   0             // Max level
  WRITE_LONG   0x018e   0             // S. throw typ
  WRITE_LONG   0x0192   0             // S. throw bon
  WRITE_LONG   0x0196   0             // Special

COPY_EXISTING ~npchan.itm~ ~override/npchan.itm~
  WRITE_BYTE   0x0029   "-1"          // Kit 1
  WRITE_BYTE   0x002b   "-2"          // Kit 2
  WRITE_BYTE   0x002d   "-1"          // Kit 3
  WRITE_BYTE   0x002f   "-1"          // Kit 4
  WRITE_SHORT  0x0070   18            // Equip count
  WRITE_LONG   0x0076   29            // Parameter 1
  WRITE_LONG   0x0092   "-1"          // Max level
  WRITE_LONG   0x00a6   99            // Parameter 1
  WRITE_LONG   0x00d6   25            // Parameter 1
  WRITE_SHORT  0x0102   0             // Opcode
  WRITE_LONG   0x0106   2             // Parameter 1
  WRITE_LONG   0x010a   16            // Parameter 2
  WRITE_BYTE   0x010f   0             // Resistance
  WRITE_SHORT  0x0132   0             // Opcode
  WRITE_LONG   0x0136   2             // Parameter 1
  WRITE_LONG   0x013a   8             // Parameter 2
  WRITE_BYTE   0x013f   0             // Resistance
  WRITE_SHORT  0x0162   0             // Opcode
  WRITE_LONG   0x0166   "-2"          // Parameter 1
  WRITE_LONG   0x016a   1             // Parameter 2
  WRITE_BYTE   0x016f   0             // Resistance
  WRITE_ASCII  0x0176   ~~         #8 // Resource
  WRITE_SHORT  0x0192   30            // Opcode
  WRITE_LONG   0x0196   25            // Parameter 1
  WRITE_LONG   0x019a   0             // Parameter 2
  WRITE_BYTE   0x019f   0             // Resistance
  WRITE_SHORT  0x01c2   31            // Opcode
  WRITE_LONG   0x01c6   25            // Parameter 1
  WRITE_LONG   0x01ca   0             // Parameter 2
  WRITE_SHORT  0x01f2   27            // Opcode
  WRITE_LONG   0x01f6   25            // Parameter 1
  WRITE_LONG   0x01fa   0             // Parameter 2
  WRITE_BYTE   0x01ff   2             // Resistance
  WRITE_SHORT  0x0222   101           // Opcode
  WRITE_LONG   0x0226   0             // Parameter 1
  WRITE_LONG   0x022a   5             // Parameter 2
  WRITE_BYTE   0x022f   2             // Resistance
  WRITE_SHORT  0x0252   169           // Opcode
  WRITE_LONG   0x0256   0             // Parameter 1
  WRITE_LONG   0x025a   0             // Parameter 2
  WRITE_BYTE   0x025f   2             // Resistance
  WRITE_SHORT  0x0282   169           // Opcode
  WRITE_LONG   0x0286   0             // Parameter 1
  WRITE_LONG   0x028a   1             // Parameter 2
  WRITE_BYTE   0x028f   2             // Resistance
  WRITE_SHORT  0x02b2   206           // Opcode
  WRITE_LONG   0x02ba   0             // Parameter 2
  WRITE_BYTE   0x02bf   2             // Resistance
  WRITE_ASCII  0x02c6   ~SPWI104~  #8 // Resource
  WRITE_SHORT  0x02e2   206           // Opcode
  WRITE_LONG   0x02ea   0             // Parameter 2
  WRITE_BYTE   0x02ef   2             // Resistance
  WRITE_ASCII  0x02f6   ~SPPR204~  #8 // Resource
  WRITE_SHORT  0x0312   206           // Opcode
  WRITE_LONG   0x031a   0             // Parameter 2
  WRITE_BYTE   0x031f   2             // Resistance
  WRITE_ASCII  0x0326   ~SPWI316~  #8 // Resource
  WRITE_SHORT  0x0342   169           // Opcode
  WRITE_LONG   0x0346   0             // Parameter 1
  WRITE_LONG   0x034a   43            // Parameter 2
  WRITE_LONG   0x0362   "-1"          // Max level
  WRITE_SHORT  0x0372   206           // Opcode
  WRITE_LONG   0x0376   0             // Parameter 1
  WRITE_ASCII  0x0386   ~SPIN883~  #8 // Resource
  WRITE_SHORT  0x03a2   145           // Opcode
  WRITE_LONG   0x03aa   0             // Parameter 2
  WRITE_BYTE   0x03af   0             // Resistance
  SET bytes_to_remove = SOURCE_SIZE - 0x3d2
  DELETE_BYTES 0x3d2    bytes_to_remove

COPY_EXISTING ~npplat.itm~ ~override/npplat.itm~
  WRITE_BYTE   0x0029   16            // Kit 1
  WRITE_BYTE   0x002d   64            // Kit 3
  WRITE_BYTE   0x002e   13            // MinWis
  WRITE_BYTE   0x002f   40            // Kit 4
  WRITE_SHORT  0x0070   16            // Equip count
  WRITE_LONG   0x00d6   26            // Parameter 1
  WRITE_SHORT  0x0102   0             // Opcode
  WRITE_LONG   0x010a   16            // Parameter 2
  WRITE_SHORT  0x0132   0             // Opcode
  WRITE_LONG   0x0136   4             // Parameter 1
  WRITE_LONG   0x013a   8             // Parameter 2
  WRITE_ASCII  0x0146   ~~         #8 // Resource
  WRITE_SHORT  0x0162   0             // Opcode
  WRITE_LONG   0x0166   3             // Parameter 1
  WRITE_LONG   0x016a   4             // Parameter 2
  WRITE_ASCII  0x0176   ~~         #8 // Resource
  WRITE_SHORT  0x0192   0             // Opcode
  WRITE_LONG   0x0196   3             // Parameter 1
  WRITE_LONG   0x019a   2             // Parameter 2
  WRITE_ASCII  0x01a6   ~~         #8 // Resource
  WRITE_SHORT  0x01c2   144           // Opcode
  WRITE_LONG   0x01c6   0             // Parameter 1
  WRITE_LONG   0x01ca   0             // Parameter 2
  WRITE_ASCII  0x01d6   ~~         #8 // Resource
  WRITE_SHORT  0x01f2   144           // Opcode
  WRITE_LONG   0x01f6   0             // Parameter 1
  WRITE_LONG   0x01fa   1             // Parameter 2
  WRITE_SHORT  0x0222   145           // Opcode
  WRITE_LONG   0x022a   0             // Parameter 2
  WRITE_SHORT  0x0252   33            // Opcode
  WRITE_LONG   0x0256   1             // Parameter 1
  WRITE_LONG   0x025a   0             // Parameter 2
  WRITE_ASCII  0x0266   ~~         #8 // Resource
  WRITE_SHORT  0x0282   34            // Opcode
  WRITE_LONG   0x0286   1             // Parameter 1
  WRITE_LONG   0x028a   0             // Parameter 2
  WRITE_SHORT  0x02b2   35            // Opcode
  WRITE_LONG   0x02b6   1             // Parameter 1
  WRITE_LONG   0x02ba   0             // Parameter 2
  WRITE_SHORT  0x02e2   36            // Opcode
  WRITE_LONG   0x02e6   1             // Parameter 1
  WRITE_LONG   0x02ea   0             // Parameter 2
  WRITE_SHORT  0x0312   37            // Opcode
  WRITE_LONG   0x0316   1             // Parameter 1
  WRITE_LONG   0x031a   0             // Parameter 2
  WRITE_ASCII  0x0326   ~~         #8 // Resource
  WRITE_SHORT  0x0342   31            // Opcode
  WRITE_LONG   0x0346   15            // Parameter 1
  WRITE_LONG   0x034a   0             // Parameter 2
  WRITE_ASCII  0x0356   ~~         #8 // Resource
  SET bytes_to_remove = SOURCE_SIZE - 0x372
  DELETE_BYTES 0x372    bytes_to_remove
  SAY DESC     @9018

COPY_EXISTING ~npstaf.itm~ ~override/npstaf.itm~
  WRITE_SHORT  0x0070   3             // Equip count
  WRITE_SHORT  0x0092   3             // Feat. offset
  SET bytes_to_remove = SOURCE_SIZE - 0x13a
  DELETE_BYTES 0x13a    bytes_to_remove

COPY_EXISTING ~npsw04.itm~ ~override/npsw04.itm~
  WRITE_LONG   0x001e   0x77dfffdb    // Usability
  WRITE_BYTE   0x0029   0             // Kit 1
  WRITE_BYTE   0x002d   "-64"         // Kit 3
  WRITE_SHORT  0x0070   4             // Equip count
  WRITE_SHORT  0x0092   4             // Feat. offset
  WRITE_SHORT  0x016a   17            // Opcode
  WRITE_BYTE   0x016d   0             // Power
  WRITE_LONG   0x016e   10            // Parameter 1
  WRITE_LONG   0x0172   0             // Parameter 2
  WRITE_BYTE   0x0176   1             // Timing metho
  WRITE_BYTE   0x017c   10            // Max. prob.
  WRITE_ASCII  0x017e   ~~         #8 // Resource
  WRITE_LONG   0x0196   0             // Special
  WRITE_SHORT  0x019a   139           // Opcode
  WRITE_BYTE   0x019c   1             // Target type
  WRITE_LONG   0x019e   14022         // Parameter 1
  WRITE_LONG   0x01a2   0             // Parameter 2
  WRITE_BYTE   0x01a6   1             // Timing metho
  WRITE_BYTE   0x01a7   0             // Resistance
  WRITE_LONG   0x01a8   0             // Duration
  WRITE_BYTE   0x01ac   10            // Max. prob.
  SET bytes_to_remove = SOURCE_SIZE - 0x1ca
  DELETE_BYTES 0x1ca    bytes_to_remove
  SAY DESC     @9092

COPY_EXISTING ~npsw06.itm~ ~override/npsw06.itm~
  WRITE_LONG   0x001e   0x7fffff96    // Usability
  WRITE_SHORT  0x0022   21331         // Animation
  WRITE_BYTE   0x0029   0             // Kit 1
  WRITE_BYTE   0x002e   13            // MinWis
  WRITE_SHORT  0x0032   16            // MinCha
  WRITE_SHORT  0x0070   3             // Equip count
  WRITE_SHORT  0x0092   3             // Feat. offset
  WRITE_SHORT  0x00aa   7             // Opcode
  WRITE_LONG   0x00ae   27            // Parameter 1
  WRITE_LONG   0x00de   93            // Parameter 1
  WRITE_LONG   0x00e2   20            // Parameter 2
  WRITE_LONG   0x010e   99            // Parameter 1
  WRITE_LONG   0x0112   16            // Parameter 2
  WRITE_SHORT  0x013a   15            // Opcode
  WRITE_BYTE   0x013c   2             // Target type
  WRITE_LONG   0x013e   "-2"          // Parameter 1
  WRITE_LONG   0x0142   0             // Parameter 2
  WRITE_BYTE   0x0146   0             // Timing metho
  WRITE_BYTE   0x0147   2             // Resistance
  WRITE_LONG   0x0148   18            // Duration
  WRITE_LONG   0x015e   8             // S. throw typ
  WRITE_SHORT  0x016a   142           // Opcode
  WRITE_LONG   0x016e   0             // Parameter 1
  WRITE_LONG   0x0172   91            // Parameter 2
  WRITE_LONG   0x0178   18            // Duration
  WRITE_LONG   0x018e   8             // S. throw typ
  SET bytes_to_remove = SOURCE_SIZE - 0x19a
  DELETE_BYTES 0x19a    bytes_to_remove
  SAY DESC     @326

COPY_EXISTING ~otyugh.itm~ ~override/otyugh.itm~
  WRITE_SHORT  0x0070   1             // Equip count
  WRITE_SHORT  0x0080   1             // Range
  WRITE_SHORT  0x0090   3             // Feat. count
  WRITE_SHORT  0x0092   1             // Feat. offset
  WRITE_SHORT  0x00aa   292           // Opcode
  WRITE_BYTE   0x00ac   1             // Target type
  WRITE_LONG   0x00ae   0             // Parameter 1
  WRITE_LONG   0x00b2   1             // Parameter 2
  WRITE_BYTE   0x00b6   2             // Timing metho
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_LONG   0x00b8   0             // Duration
  WRITE_LONG   0x00de   6             // Parameter 1
  WRITE_LONG   0x00e2   3             // Parameter 2
  WRITE_SHORT  0x010a   78            // Opcode
  WRITE_LONG   0x0112   10            // Parameter 2
  WRITE_BYTE   0x0117   2             // Resistance
  WRITE_LONG   0x0142   7             // Parameter 2

COPY_EXISTING ~planetar.itm~ ~override/planetar.itm~
  WRITE_LONG   0x000c   "-1"          // ID name
  WRITE_SHORT  0x001c   17            // Itemtype
  WRITE_SHORT  0x0022   17229         // Animation
  WRITE_BYTE   0x0031   101           // Proficiency
  WRITE_LONG   0x004c   6             // Weight
  WRITE_SHORT  0x0070   8             // Equip count
  WRITE_ASCII  0x0076   ~IBLUN05~  #8 // Use icon
  WRITE_SHORT  0x0084   4             // Speed
  WRITE_SHORT  0x0088   6             // Dice size
  WRITE_SHORT  0x008a   1             // Dice count
  WRITE_SHORT  0x008c   4             // Dice bonus
  WRITE_SHORT  0x008e   2             // Damagetype
  WRITE_SHORT  0x0090   1             // Feat. count
  WRITE_SHORT  0x0092   8             // Feat. offset
  WRITE_SHORT  0x016a   98            // Opcode
  WRITE_BYTE   0x016c   1             // Target type
  WRITE_LONG   0x016e   2             // Parameter 1
  WRITE_LONG   0x0172   3             // Parameter 2
  WRITE_BYTE   0x0176   2             // Timing metho
  WRITE_BYTE   0x0177   0             // Resistance
  WRITE_BYTE   0x017c   100           // Max. prob.
  WRITE_LONG   0x018e   0             // S. throw typ
  WRITE_LONG   0x0192   0             // S. throw bon
  WRITE_SHORT  0x019a   296           // Opcode
  WRITE_BYTE   0x019c   1             // Target type
  WRITE_BYTE   0x019d   0             // Power
  WRITE_LONG   0x01a2   0             // Parameter 2
  WRITE_BYTE   0x01a6   2             // Timing metho
  WRITE_BYTE   0x01ac   100           // Max. prob.
  WRITE_ASCII  0x01ae   ~SPCONFUS~ #8 // Resource
  WRITE_SHORT  0x01ca   267           // Opcode
  WRITE_BYTE   0x01cc   1             // Target type
  WRITE_BYTE   0x01cd   0             // Power
  WRITE_LONG   0x01ce   14782         // Parameter 1
  WRITE_LONG   0x01d2   0             // Parameter 2
  WRITE_BYTE   0x01d6   2             // Timing metho
  WRITE_BYTE   0x01dc   100           // Max. prob.
  WRITE_SHORT  0x01fa   233           // Opcode
  WRITE_BYTE   0x01fc   1             // Target type
  WRITE_BYTE   0x01fd   0             // Power
  WRITE_LONG   0x01fe   2             // Parameter 1
  WRITE_LONG   0x0202   101           // Parameter 2
  WRITE_BYTE   0x0206   2             // Timing metho
  WRITE_BYTE   0x020c   100           // Max. prob.
  WRITE_ASCII  0x020e   ~~         #8 // Resource
  WRITE_SHORT  0x022a   177           // Opcode
  WRITE_LONG   0x022e   7             // Parameter 1
  WRITE_LONG   0x0232   7             // Parameter 2
  WRITE_ASCII  0x023e   ~DIE~      #8 // Resource
  DELETE_BYTES 0x25a    384

COPY_EXISTING ~plat05.itm~ ~override/plat05.itm~
  WRITE_SHORT  0x0026   14            // MinStr
  WRITE_LONG   0x0034   17000         // Price
  WRITE_LONG   0x0054   6685          // ID desc
  WRITE_LONG   0x0076   29            // Parameter 1
  WRITE_LONG   0x00a6   23            // Parameter 1
  WRITE_LONG   0x00d6   29            // Parameter 1

COPY_EXISTING ~plat14.itm~ ~override/plat14.itm~
  WRITE_LONG   0x000c   6684          // ID name
  WRITE_LONG   0x0034   17000         // Price

COPY_EXISTING ~plyjelly.itm~ ~override/plyjelly.itm~
  WRITE_LONG   0x0018   40            // Attributes
  WRITE_LONG   0x0060   0             // Magiclevel
  WRITE_SHORT  0x0070   4             // Equip count
  WRITE_SHORT  0x0090   0             // Feat. count
  WRITE_SHORT  0x0092   4             // Feat. offset
  WRITE_SHORT  0x00aa   145           // Opcode
  WRITE_LONG   0x00b2   0             // Parameter 2
  WRITE_SHORT  0x00da   145           // Opcode
  WRITE_LONG   0x00e2   1             // Parameter 2
  WRITE_ASCII  0x00ee   ~~         #8 // Resource
  WRITE_SHORT  0x010a   16            // Opcode
  WRITE_BYTE   0x0117   2             // Resistance
  WRITE_SHORT  0x013a   0             // Opcode
  WRITE_LONG   0x013e   4             // Parameter 1
  WRITE_LONG   0x0142   0             // Parameter 2
  SET bytes_to_remove = SOURCE_SIZE - 0x16a
  DELETE_BYTES 0x16a    bytes_to_remove

COPY_EXISTING ~plyspid.itm~ ~override/plyspid.itm~
  WRITE_LONG   0x0018   40            // Attributes
  WRITE_LONG   0x0060   0             // Magiclevel
  WRITE_SHORT  0x0070   4             // Equip count
  WRITE_SHORT  0x0090   0             // Feat. count
  WRITE_SHORT  0x0092   4             // Feat. offset
  WRITE_SHORT  0x00aa   145           // Opcode
  WRITE_LONG   0x00b2   0             // Parameter 2
  WRITE_SHORT  0x00da   145           // Opcode
  WRITE_LONG   0x00e2   1             // Parameter 2
  WRITE_ASCII  0x00ee   ~~         #8 // Resource
  WRITE_SHORT  0x010a   16            // Opcode
  WRITE_LONG   0x0112   0             // Parameter 2
  WRITE_BYTE   0x0117   2             // Resistance
  WRITE_SHORT  0x013a   0             // Opcode
  WRITE_LONG   0x013e   4             // Parameter 1
  SET bytes_to_remove = SOURCE_SIZE - 0x16a
  DELETE_BYTES 0x16a    bytes_to_remove

COPY_EXISTING ~plytroll.itm~ ~override/plytroll.itm~
  WRITE_LONG   0x0018   104           // Attributes
  WRITE_SHORT  0x0070   3             // Equip count
  WRITE_SHORT  0x0092   3             // Feat. offset
  WRITE_SHORT  0x00aa   16            // Opcode
  WRITE_LONG   0x00b2   0             // Parameter 2
  WRITE_SHORT  0x00da   98            // Opcode
  WRITE_LONG   0x00de   2             // Parameter 1
  WRITE_SHORT  0x010a   142           // Opcode
  WRITE_LONG   0x0112   56            // Parameter 2
  SET bytes_to_remove = SOURCE_SIZE - 0x13a
  DELETE_BYTES 0x13a    bytes_to_remove

COPY_EXISTING ~potn02.itm~ ~override/potn02.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   200           // Stack
  WRITE_SHORT  0x0090   7             // Feat. count
  WRITE_SHORT  0x00da   282           // Opcode
  WRITE_BYTE   0x00dd   4             // Power
  WRITE_LONG   0x00de   1             // Parameter 1
  WRITE_LONG   0x00e2   14            // Parameter 2
  WRITE_BYTE   0x00e6   0             // Timing metho
  WRITE_BYTE   0x00e7   1             // Resistance
  WRITE_LONG   0x00e8   600           // Duration
  WRITE_SHORT  0x010a   139           // Opcode
  WRITE_BYTE   0x010d   0             // Power
  WRITE_LONG   0x010e   16233         // Parameter 1
  WRITE_LONG   0x0112   0             // Parameter 2
  WRITE_BYTE   0x0116   1             // Timing metho
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_LONG   0x0118   0             // Duration
  WRITE_SHORT  0x013a   142           // Opcode
  WRITE_LONG   0x013e   0             // Parameter 1
  WRITE_LONG   0x0142   16            // Parameter 2
  WRITE_BYTE   0x0146   0             // Timing metho
  WRITE_LONG   0x0148   600           // Duration
  WRITE_SHORT  0x016a   50            // Opcode
  WRITE_LONG   0x016e   1616969472    // Parameter 1
  WRITE_LONG   0x0172   983040        // Parameter 2
  WRITE_BYTE   0x0176   3             // Timing metho
  WRITE_ASCII  0x017e   ~~         #8 // Resource
  WRITE_LONG   0x01a8   1             // Duration
  WRITE_ASCII  0x01ae   ~EFF_M02~  #8 // Resource
  INSERT_BYTES 0x01ca   48            // new feature block
  WRITE_SHORT  0x01ca   174           // Opcode
  WRITE_BYTE   0x01cc   1             // Target type
  WRITE_BYTE   0x01cd   4             // Power
  WRITE_LONG   0x01ce   0             // Parameter 1
  WRITE_LONG   0x01d2   0             // Parameter 2
  WRITE_BYTE   0x01d6   4             // Timing metho
  WRITE_BYTE   0x01d7   1             // Resistance
  WRITE_LONG   0x01d8   600           // Duration
  WRITE_BYTE   0x01dc   100           // Max. prob.
  WRITE_BYTE   0x01dd   0             // Min. prob.
  WRITE_ASCII  0x01de   ~EFF_E04~  #8 // Resource
  WRITE_LONG   0x01e6   0             // Min level
  WRITE_LONG   0x01ea   0             // Max level
  WRITE_LONG   0x01ee   0             // S. throw typ
  WRITE_LONG   0x01f2   0             // S. throw bon
  WRITE_LONG   0x01f6   0             // Special

COPY_EXISTING ~potn11.itm~ ~override/potn11.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0034   1400          // Price
  WRITE_SHORT  0x0038   5             // Stack
  WRITE_SHORT  0x0090   6             // Feat. count
  WRITE_LONG   0x00ae   "-1"          // Parameter 1
  WRITE_SHORT  0x00da   139           // Opcode
  WRITE_BYTE   0x00dd   0             // Power
  WRITE_LONG   0x00de   16233         // Parameter 1
  WRITE_BYTE   0x00e6   1             // Timing metho
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_LONG   0x00e8   0             // Duration
  WRITE_SHORT  0x010a   142           // Opcode
  WRITE_LONG   0x010e   0             // Parameter 1
  WRITE_LONG   0x0112   23            // Parameter 2
  WRITE_SHORT  0x013a   141           // Opcode
  WRITE_BYTE   0x013d   0             // Power
  WRITE_LONG   0x013e   0             // Parameter 1
  WRITE_LONG   0x0142   14            // Parameter 2
  WRITE_BYTE   0x0146   4             // Timing metho
  WRITE_LONG   0x0148   1             // Duration
  WRITE_LONG   0x015a   "-1"          // Max level
  WRITE_SHORT  0x016a   174           // Opcode
  WRITE_LONG   0x016e   0             // Parameter 1
  WRITE_BYTE   0x0176   4             // Timing metho
  WRITE_LONG   0x0178   1             // Duration
  WRITE_ASCII  0x017e   ~EFF_M12B~ #8 // Resource
  WRITE_SHORT  0x019a   174           // Opcode
  WRITE_LONG   0x019e   0             // Parameter 1
  WRITE_BYTE   0x01a6   4             // Timing metho
  WRITE_ASCII  0x01ae   ~EFF_E02~  #8 // Resource
  DELETE_BYTES 0x1ca    240

COPY_EXISTING ~potn18.itm~ ~override/potn18.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   5             // Stack
  WRITE_SHORT  0x0090   6             // Feat. count
  WRITE_SHORT  0x00aa   29            // Opcode
  WRITE_LONG   0x00ae   100           // Parameter 1
  WRITE_SHORT  0x00da   139           // Opcode
  WRITE_BYTE   0x00dd   0             // Power
  WRITE_LONG   0x00de   16233         // Parameter 1
  WRITE_BYTE   0x00e6   1             // Timing metho
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_LONG   0x00e8   0             // Duration
  WRITE_SHORT  0x010a   142           // Opcode
  WRITE_BYTE   0x010d   4             // Power
  WRITE_LONG   0x010e   0             // Parameter 1
  WRITE_LONG   0x0112   27            // Parameter 2
  WRITE_BYTE   0x0116   0             // Timing metho
  WRITE_BYTE   0x0117   1             // Resistance
  WRITE_LONG   0x0118   600           // Duration
  WRITE_SHORT  0x013a   141           // Opcode
  WRITE_BYTE   0x013d   0             // Power
  WRITE_LONG   0x0142   12            // Parameter 2
  WRITE_BYTE   0x0146   4             // Timing metho
  WRITE_LONG   0x0148   1             // Duration
  WRITE_SHORT  0x016a   174           // Opcode
  WRITE_BYTE   0x016d   4             // Power
  WRITE_LONG   0x0172   0             // Parameter 2
  WRITE_ASCII  0x017e   ~CAS_P02~  #8 // Resource
  WRITE_LONG   0x01a8   600           // Duration
  WRITE_ASCII  0x01ae   ~EFF_E04~  #8 // Resource
  DELETE_BYTES 0x1ca    48

COPY_EXISTING ~potn22.itm~ ~override/potn22.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   200           // Stack

COPY_EXISTING ~potn29.itm~ ~override/potn29.itm~
  WRITE_LONG   0x000c   6977          // ID name
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0034   600           // Price
  WRITE_SHORT  0x0038   5             // Stack
  WRITE_ASCII  0x003a   ~S!ACIDIN~ #8 // Inventory
  WRITE_LONG   0x0054   17660         // ID desc
  WRITE_ASCII  0x0076   ~S!ACIDIN~ #8 // Use icon
  WRITE_SHORT  0x0090   6             // Feat. count
  WRITE_SHORT  0x00aa   27            // Opcode
  WRITE_LONG   0x00ae   50            // Parameter 1
  WRITE_BYTE   0x00b7   3             // Resistance
  WRITE_LONG   0x00b8   600           // Duration
  WRITE_SHORT  0x010a   142           // Opcode
  WRITE_BYTE   0x010d   4             // Power
  WRITE_LONG   0x0112   24            // Parameter 2
  WRITE_BYTE   0x0116   0             // Timing metho
  WRITE_BYTE   0x0117   3             // Resistance
  WRITE_LONG   0x0118   600           // Duration
  WRITE_SHORT  0x013a   50            // Opcode
  WRITE_LONG   0x013e   1627348992    // Parameter 1
  WRITE_LONG   0x0142   983040        // Parameter 2
  WRITE_BYTE   0x0146   3             // Timing metho
  WRITE_BYTE   0x0147   3             // Resistance
  WRITE_ASCII  0x014e   ~~         #8 // Resource
  WRITE_BYTE   0x0177   3             // Resistance
  WRITE_LONG   0x0178   1             // Duration
  WRITE_ASCII  0x017e   ~EFF_M02~  #8 // Resource
  INSERT_BYTES 0x019a   48            // new feature block
  WRITE_SHORT  0x019a   174           // Opcode
  WRITE_BYTE   0x019c   1             // Target type
  WRITE_BYTE   0x019d   4             // Power
  WRITE_LONG   0x019e   0             // Parameter 1
  WRITE_LONG   0x01a2   0             // Parameter 2
  WRITE_BYTE   0x01a6   4             // Timing metho
  WRITE_BYTE   0x01a7   3             // Resistance
  WRITE_LONG   0x01a8   600           // Duration
  WRITE_BYTE   0x01ac   100           // Max. prob.
  WRITE_BYTE   0x01ad   0             // Min. prob.
  WRITE_ASCII  0x01ae   ~EFF_E04~  #8 // Resource
  WRITE_LONG   0x01b6   0             // Min level
  WRITE_LONG   0x01ba   0             // Max level
  WRITE_LONG   0x01be   0             // S. throw typ
  WRITE_LONG   0x01c2   0             // S. throw bon
  WRITE_LONG   0x01c6   0             // Special
  SAY NAME2    @266
  SAY DESC     @267

COPY_EXISTING ~potn31.itm~ ~override/potn31.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   200           // Stack

COPY_EXISTING ~potn33.itm~ ~override/potn33.itm~
  WRITE_LONG   0x000c   "-1"          // ID name
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0034   3000          // Price
  WRITE_SHORT  0x0038   5             // Stack
  WRITE_ASCII  0x003a   ~IPOTN15~  #8 // Inventory
  WRITE_LONG   0x0054   "-1"          // ID desc
  WRITE_ASCII  0x0076   ~IPOTN15~  #8 // Use icon
  WRITE_SHORT  0x0090   10            // Feat. count
  WRITE_SHORT  0x00aa   292           // Opcode
  WRITE_LONG   0x00b2   1             // Parameter 2
  WRITE_BYTE   0x00b6   0             // Timing metho
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_LONG   0x00b8   600           // Duration
  WRITE_SHORT  0x00da   86            // Opcode
  WRITE_LONG   0x00de   20            // Parameter 1
  WRITE_LONG   0x00e2   0             // Parameter 2
  WRITE_BYTE   0x00e6   0             // Timing metho
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_LONG   0x00e8   600           // Duration
  WRITE_SHORT  0x010a   87            // Opcode
  WRITE_LONG   0x010e   20            // Parameter 1
  WRITE_BYTE   0x0116   0             // Timing metho
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_LONG   0x0118   600           // Duration
  WRITE_SHORT  0x013a   88            // Opcode
  WRITE_LONG   0x013e   20            // Parameter 1
  WRITE_BYTE   0x0146   0             // Timing metho
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_LONG   0x0148   600           // Duration
  WRITE_SHORT  0x016a   89            // Opcode
  WRITE_LONG   0x016e   20            // Parameter 1
  WRITE_BYTE   0x0176   0             // Timing metho
  WRITE_BYTE   0x0177   0             // Resistance
  WRITE_LONG   0x0178   600           // Duration
  WRITE_SHORT  0x019a   282           // Opcode
  WRITE_LONG   0x019e   1             // Parameter 1
  WRITE_LONG   0x01a2   12            // Parameter 2
  WRITE_BYTE   0x01a7   0             // Resistance
  WRITE_LONG   0x01a8   600           // Duration
  WRITE_ASCII  0x01ae   ~~         #8 // Resource
  WRITE_SHORT  0x01ca   139           // Opcode
  WRITE_LONG   0x01ce   16233         // Parameter 1
  WRITE_LONG   0x01d2   0             // Parameter 2
  WRITE_BYTE   0x01d7   0             // Resistance
  WRITE_LONG   0x01d8   0             // Duration
  WRITE_ASCII  0x01de   ~~         #8 // Resource
  WRITE_SHORT  0x01fa   141           // Opcode
  WRITE_LONG   0x01fe   0             // Parameter 1
  WRITE_LONG   0x0202   6             // Parameter 2
  WRITE_BYTE   0x0206   4             // Timing metho
  WRITE_BYTE   0x0207   0             // Resistance
  WRITE_LONG   0x0208   1             // Duration
  WRITE_ASCII  0x020e   ~~         #8 // Resource
  WRITE_SHORT  0x022a   174           // Opcode
  WRITE_LONG   0x022e   0             // Parameter 1
  WRITE_BYTE   0x0236   4             // Timing metho
  WRITE_BYTE   0x0237   0             // Resistance
  WRITE_LONG   0x0238   1             // Duration
  WRITE_ASCII  0x023e   ~EFF_M08~  #8 // Resource
  WRITE_SHORT  0x025a   174           // Opcode
  WRITE_LONG   0x025e   0             // Parameter 1
  WRITE_BYTE   0x0266   4             // Timing metho
  WRITE_BYTE   0x0267   0             // Resistance
  WRITE_LONG   0x0268   600           // Duration
  WRITE_ASCII  0x026e   ~EFF_E03~  #8 // Resource
  SET bytes_to_remove = SOURCE_SIZE - 0x28a
  DELETE_BYTES 0x28a    bytes_to_remove
  SAY NAME2    @349
  SAY DESC     @350

COPY_EXISTING ~potn34.itm~ ~override/potn34.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0034   2000          // Price
  WRITE_SHORT  0x0038   5             // Stack
  WRITE_LONG   0x01d2   1             // Parameter 2

COPY_EXISTING ~potn35.itm~ ~override/potn35.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0034   2500          // Price
  WRITE_SHORT  0x0038   5             // Stack
  WRITE_SHORT  0x0090   18            // Feat. count
  INSERT_BYTES 0x037a   48            // new feature block
  WRITE_SHORT  0x037a   282           // Opcode
  WRITE_BYTE   0x037c   1             // Target type
  WRITE_BYTE   0x037d   4             // Power
  WRITE_LONG   0x037e   2             // Parameter 1
  WRITE_LONG   0x0382   2             // Parameter 2
  WRITE_BYTE   0x0386   0             // Timing metho
  WRITE_BYTE   0x0387   1             // Resistance
  WRITE_LONG   0x0388   180           // Duration
  WRITE_BYTE   0x038c   100           // Max. prob.
  WRITE_BYTE   0x038d   0             // Min. prob.
  WRITE_ASCII  0x038e   ~~         #8 // Resource
  WRITE_LONG   0x0396   0             // Min level
  WRITE_LONG   0x039a   0             // Max level
  WRITE_LONG   0x039e   0             // S. throw typ
  WRITE_LONG   0x03a2   0             // S. throw bon
  WRITE_LONG   0x03a6   0             // Special
  INSERT_BYTES 0x03aa   48            // new feature block
  WRITE_SHORT  0x03aa   240           // Opcode
  WRITE_BYTE   0x03ac   1             // Target type
  WRITE_BYTE   0x03ad   4             // Power
  WRITE_LONG   0x03ae   0             // Parameter 1
  WRITE_LONG   0x03b2   45            // Parameter 2
  WRITE_BYTE   0x03b6   1             // Timing metho
  WRITE_BYTE   0x03b7   1             // Resistance
  WRITE_LONG   0x03b8   0             // Duration
  WRITE_BYTE   0x03bc   100           // Max. prob.
  WRITE_BYTE   0x03bd   0             // Min. prob.
  WRITE_ASCII  0x03be   ~~         #8 // Resource
  WRITE_LONG   0x03c6   0             // Min level
  WRITE_LONG   0x03ca   0             // Max level
  WRITE_LONG   0x03ce   0             // S. throw typ
  WRITE_LONG   0x03d2   0             // S. throw bon
  WRITE_LONG   0x03d6   0             // Special
  INSERT_BYTES 0x03da   48            // new feature block
  WRITE_SHORT  0x03da   206           // Opcode
  WRITE_BYTE   0x03dc   1             // Target type
  WRITE_BYTE   0x03dd   4             // Power
  WRITE_LONG   0x03de   0             // Parameter 1
  WRITE_LONG   0x03e2   0             // Parameter 2
  WRITE_BYTE   0x03e6   0             // Timing metho
  WRITE_BYTE   0x03e7   1             // Resistance
  WRITE_LONG   0x03e8   180           // Duration
  WRITE_BYTE   0x03ec   100           // Max. prob.
  WRITE_BYTE   0x03ed   0             // Min. prob.
  WRITE_ASCII  0x03ee   ~SPWI412~  #8 // Resource
  WRITE_LONG   0x03f6   0             // Min level
  WRITE_LONG   0x03fa   0             // Max level
  WRITE_LONG   0x03fe   0             // S. throw typ
  WRITE_LONG   0x0402   0             // S. throw bon
  WRITE_LONG   0x0406   0             // Special

COPY_EXISTING ~potn37.itm~ ~override/potn37.itm~
  WRITE_LONG   0x000c   "-1"          // ID name
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x002f   0             // Kit 4
  WRITE_LONG   0x0034   1500          // Price
  WRITE_SHORT  0x0038   5             // Stack
  WRITE_ASCII  0x003a   ~S!OILIN~  #8 // Inventory
  WRITE_LONG   0x0054   "-1"          // ID desc
  WRITE_ASCII  0x0058   ~CPOTN13~  #8 // Desc icon
  WRITE_ASCII  0x0076   ~S!OILIN~  #8 // Use icon
  WRITE_SHORT  0x0090   6             // Feat. count
  WRITE_SHORT  0x00aa   98            // Opcode
  WRITE_LONG   0x00ae   1             // Parameter 1
  WRITE_LONG   0x00b2   3             // Parameter 2
  WRITE_LONG   0x00b8   60            // Duration
  WRITE_SHORT  0x00da   139           // Opcode
  WRITE_BYTE   0x00dd   0             // Power
  WRITE_LONG   0x00de   16233         // Parameter 1
  WRITE_BYTE   0x00e6   1             // Timing metho
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_LONG   0x00e8   0             // Duration
  WRITE_SHORT  0x010a   142           // Opcode
  WRITE_BYTE   0x010d   4             // Power
  WRITE_LONG   0x010e   0             // Parameter 1
  WRITE_LONG   0x0112   87            // Parameter 2
  WRITE_BYTE   0x0116   0             // Timing metho
  WRITE_BYTE   0x0117   1             // Resistance
  WRITE_LONG   0x0118   60            // Duration
  WRITE_SHORT  0x013a   141           // Opcode
  WRITE_BYTE   0x013d   0             // Power
  WRITE_LONG   0x0142   6             // Parameter 2
  WRITE_BYTE   0x0146   4             // Timing metho
  WRITE_LONG   0x0148   1             // Duration
  WRITE_SHORT  0x016a   174           // Opcode
  WRITE_BYTE   0x016d   4             // Power
  WRITE_LONG   0x0172   0             // Parameter 2
  WRITE_ASCII  0x017e   ~EFF_P04~  #8 // Resource
  WRITE_LONG   0x01a8   60            // Duration
  WRITE_ASCII  0x01ae   ~EFF_E01~  #8 // Resource
  DELETE_BYTES 0x1ca    48
  SAY NAME2    @9067
  SAY DESC     @268

COPY_EXISTING ~potn39.itm~ ~override/potn39.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x0029   0             // Kit 1
  WRITE_SHORT  0x0038   5             // Stack
  WRITE_LONG   0x0142   58            // Parameter 2

COPY_EXISTING ~potn43.itm~ ~override/potn43.itm~
  WRITE_LONG   0x0008   7010          // UnID name
  WRITE_LONG   0x000c   7011          // ID name
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x002f   0             // Kit 4
  WRITE_LONG   0x0034   600           // Price
  WRITE_SHORT  0x0038   99            // Stack
  WRITE_ASCII  0x003a   ~S!VITIN~  #8 // Inventory
  WRITE_LONG   0x0054   17857         // ID desc
  WRITE_ASCII  0x0076   ~S!VITIN~  #8 // Use icon
  WRITE_SHORT  0x0090   10            // Feat. count
  WRITE_SHORT  0x00aa   11            // Opcode
  WRITE_BYTE   0x00ad   9             // Power
  WRITE_LONG   0x00ae   0             // Parameter 1
  WRITE_LONG   0x00b2   0             // Parameter 2
  WRITE_BYTE   0x00b6   1             // Timing metho
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_LONG   0x00b8   0             // Duration
  WRITE_SHORT  0x00da   79            // Opcode
  WRITE_BYTE   0x00dd   9             // Power
  WRITE_LONG   0x00de   0             // Parameter 1
  WRITE_SHORT  0x010a   139           // Opcode
  WRITE_BYTE   0x010d   0             // Power
  WRITE_LONG   0x010e   16233         // Parameter 1
  WRITE_LONG   0x0112   0             // Parameter 2
  WRITE_BYTE   0x0116   1             // Timing metho
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_LONG   0x0118   0             // Duration
  WRITE_SHORT  0x013a   17            // Opcode
  WRITE_BYTE   0x013d   9             // Power
  WRITE_LONG   0x013e   16            // Parameter 1
  WRITE_LONG   0x0142   0             // Parameter 2
  WRITE_BYTE   0x0146   1             // Timing metho
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_LONG   0x0148   0             // Duration
  WRITE_SHORT  0x016a   50            // Opcode
  WRITE_BYTE   0x016d   9             // Power
  WRITE_LONG   0x016e   "-1317129472"    // Parameter 1
  WRITE_LONG   0x0172   1638400       // Parameter 2
  WRITE_BYTE   0x0176   3             // Timing metho
  WRITE_BYTE   0x0177   0             // Resistance
  WRITE_ASCII  0x017e   ~~         #8 // Resource
  WRITE_SHORT  0x019a   94            // Opcode
  WRITE_BYTE   0x019d   9             // Power
  WRITE_LONG   0x01a2   1             // Parameter 2
  WRITE_BYTE   0x01a6   1             // Timing metho
  WRITE_BYTE   0x01a7   0             // Resistance
  WRITE_LONG   0x01a8   0             // Duration
  WRITE_ASCII  0x01ae   ~~         #8 // Resource
  INSERT_BYTES 0x01ca   48            // new feature block
  WRITE_SHORT  0x01ca   93            // Opcode
  WRITE_BYTE   0x01cc   1             // Target type
  WRITE_BYTE   0x01cd   9             // Power
  WRITE_LONG   0x01ce   0             // Parameter 1
  WRITE_LONG   0x01d2   1             // Parameter 2
  WRITE_BYTE   0x01d6   1             // Timing metho
  WRITE_BYTE   0x01d7   0             // Resistance
  WRITE_LONG   0x01d8   0             // Duration
  WRITE_BYTE   0x01dc   100           // Max. prob.
  WRITE_BYTE   0x01dd   0             // Min. prob.
  WRITE_ASCII  0x01de   ~~         #8 // Resource
  WRITE_LONG   0x01e6   0             // Min level
  WRITE_LONG   0x01ea   0             // Max level
  WRITE_LONG   0x01ee   0             // S. throw typ
  WRITE_LONG   0x01f2   0             // S. throw bon
  WRITE_LONG   0x01f6   0             // Special
  INSERT_BYTES 0x01fa   48            // new feature block
  WRITE_SHORT  0x01fa   174           // Opcode
  WRITE_BYTE   0x01fc   1             // Target type
  WRITE_BYTE   0x01fd   9             // Power
  WRITE_LONG   0x01fe   0             // Parameter 1
  WRITE_LONG   0x0202   0             // Parameter 2
  WRITE_BYTE   0x0206   4             // Timing metho
  WRITE_BYTE   0x0207   0             // Resistance
  WRITE_LONG   0x0208   1             // Duration
  WRITE_BYTE   0x020c   100           // Max. prob.
  WRITE_BYTE   0x020d   0             // Min. prob.
  WRITE_ASCII  0x020e   ~EFF_P26~  #8 // Resource
  WRITE_LONG   0x0216   0             // Min level
  WRITE_LONG   0x021a   0             // Max level
  WRITE_LONG   0x021e   0             // S. throw typ
  WRITE_LONG   0x0222   0             // S. throw bon
  WRITE_LONG   0x0226   0             // Special
  INSERT_BYTES 0x022a   48            // new feature block
  WRITE_SHORT  0x022a   141           // Opcode
  WRITE_BYTE   0x022c   1             // Target type
  WRITE_BYTE   0x022d   0             // Power
  WRITE_LONG   0x022e   0             // Parameter 1
  WRITE_LONG   0x0232   2             // Parameter 2
  WRITE_BYTE   0x0236   4             // Timing metho
  WRITE_BYTE   0x0237   0             // Resistance
  WRITE_LONG   0x0238   1             // Duration
  WRITE_BYTE   0x023c   100           // Max. prob.
  WRITE_BYTE   0x023d   0             // Min. prob.
  WRITE_ASCII  0x023e   ~~         #8 // Resource
  WRITE_LONG   0x0246   0             // Min level
  WRITE_LONG   0x024a   0             // Max level
  WRITE_LONG   0x024e   0             // S. throw typ
  WRITE_LONG   0x0252   0             // S. throw bon
  WRITE_LONG   0x0256   0             // Special
  INSERT_BYTES 0x025a   48            // new feature block
  WRITE_SHORT  0x025a   240           // Opcode
  WRITE_BYTE   0x025c   1             // Target type
  WRITE_BYTE   0x025d   0             // Power
  WRITE_LONG   0x025e   0             // Parameter 1
  WRITE_LONG   0x0262   7             // Parameter 2
  WRITE_BYTE   0x0266   1             // Timing metho
  WRITE_BYTE   0x0267   0             // Resistance
  WRITE_LONG   0x0268   0             // Duration
  WRITE_BYTE   0x026c   100           // Max. prob.
  WRITE_BYTE   0x026d   0             // Min. prob.
  WRITE_ASCII  0x026e   ~~         #8 // Resource
  WRITE_LONG   0x0276   0             // Min level
  WRITE_LONG   0x027a   0             // Max level
  WRITE_LONG   0x027e   0             // S. throw typ
  WRITE_LONG   0x0282   0             // S. throw bon
  WRITE_LONG   0x0286   0             // Special
  SAY NAME2    @9000
  SAY DESC     @9001

COPY_EXISTING ~potn46.itm~ ~override/potn46.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0034   0             // Price
  WRITE_SHORT  0x0038   5             // Stack
  WRITE_LONG   0x01ce   "-9"          // Parameter 1

COPY_EXISTING ~quiver01.itm~ ~override/quiver01.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x008c   1             // Dice bonus
  WRITE_LONG   0x0098   2048          // Flags

COPY_EXISTING ~quiver02.itm~ ~override/quiver02.itm~
  WRITE_ASCII  0x003a   ~IQUIV01~  #8 // Inventory
  WRITE_SHORT  0x008c   1             // Dice bonus
  WRITE_LONG   0x0098   2048          // Flags

COPY_EXISTING ~quiver03.itm~ ~override/quiver03.itm~
  WRITE_ASCII  0x003a   ~IQUIV01~  #8 // Inventory
  WRITE_SHORT  0x008c   2             // Dice bonus
  WRITE_LONG   0x0098   2048          // Flags

COPY_EXISTING ~quiver04.itm~ ~override/quiver04.itm~
  WRITE_ASCII  0x003a   ~IQUIV01~  #8 // Inventory
  WRITE_SHORT  0x008c   2             // Dice bonus
  WRITE_LONG   0x0098   2048          // Flags

COPY_EXISTING ~ring27.itm~ ~override/ring27.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0068   2             // Ext. count
  WRITE_LONG   0x006a   226           // Feat. offset
  WRITE_SHORT  0x0070   1             // Equip count
  WRITE_ASCII  0x0076   ~SPWI103B~ #8 // Use icon
  WRITE_SHORT  0x0088   6             // Dice size
  WRITE_SHORT  0x008a   0             // Dice count
  WRITE_SHORT  0x0092   1             // Feat. offset
  WRITE_SHORT  0x00ca   2             // Feat. offset
  WRITE_SHORT  0x00e2   30            // Opcode
  WRITE_BYTE   0x00e4   1             // Target type
  WRITE_BYTE   0x00e5   0             // Power
  WRITE_LONG   0x00e6   25            // Parameter 1
  WRITE_LONG   0x00ea   0             // Parameter 2
  WRITE_BYTE   0x00ee   2             // Timing metho
  WRITE_BYTE   0x00ef   0             // Resistance
  WRITE_LONG   0x00f0   0             // Duration
  WRITE_BYTE   0x00f4   100           // Max. prob.
  WRITE_BYTE   0x00f5   0             // Min. prob.
  WRITE_ASCII  0x00f6   ~~         #8 // Resource
  WRITE_LONG   0x00fe   0             // Min level
  WRITE_LONG   0x0102   0             // Max level
  WRITE_LONG   0x0106   0             // S. throw typ
  WRITE_LONG   0x010a   0             // S. throw bon
  WRITE_LONG   0x010e   0             // Special
  WRITE_SHORT  0x0112   146           // Opcode
  WRITE_BYTE   0x0114   2             // Target type
  WRITE_BYTE   0x0115   0             // Power
  WRITE_LONG   0x0116   10            // Parameter 1
  WRITE_LONG   0x011a   1             // Parameter 2
  WRITE_BYTE   0x011e   1             // Timing metho
  WRITE_BYTE   0x011f   0             // Resistance
  WRITE_LONG   0x0120   0             // Duration
  WRITE_BYTE   0x0124   100           // Max. prob.
  WRITE_ASCII  0x0126   ~SPWI103~  #8 // Resource
  WRITE_LONG   0x012e   0             // Min level
  WRITE_LONG   0x0132   0             // Max level
  WRITE_LONG   0x0136   0             // S. throw typ
  WRITE_LONG   0x013a   0             // S. throw bon
  WRITE_LONG   0x013e   0             // Special
  WRITE_SHORT  0x0142   146           // Opcode
  WRITE_BYTE   0x0144   2             // Target type
  WRITE_BYTE   0x0145   0             // Power
  WRITE_LONG   0x0146   10            // Parameter 1
  WRITE_LONG   0x014a   1             // Parameter 2
  WRITE_BYTE   0x014e   1             // Timing metho
  WRITE_BYTE   0x014f   0             // Resistance
  WRITE_LONG   0x0150   0             // Duration
  WRITE_BYTE   0x0154   100           // Max. prob.
  WRITE_ASCII  0x0156   ~SPPR503~  #8 // Resource
  WRITE_LONG   0x015e   0             // Min level
  WRITE_LONG   0x0162   0             // Max level
  WRITE_LONG   0x0166   0             // S. throw typ
  WRITE_LONG   0x016a   0             // S. throw bon
  WRITE_LONG   0x016e   0             // Special
  DELETE_BYTES 0x172    152

COPY_EXISTING ~ring28.itm~ ~override/ring28.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x002d   17            // Kit 3
  WRITE_ASCII  0x0076   ~SPWI718B~ #8 // Use icon
  WRITE_BYTE   0x007e   4             // Target type
  WRITE_SHORT  0x0080   30            // Range
  WRITE_SHORT  0x0088   0             // Dice size
  WRITE_SHORT  0x008a   0             // Dice count
  WRITE_SHORT  0x00c0   6             // Dice size
  WRITE_SHORT  0x00c2   0             // Dice count
  WRITE_SHORT  0x00e2   148           // Opcode
  WRITE_BYTE   0x00e4   1             // Target type
  WRITE_LONG   0x00e6   14            // Parameter 1
  WRITE_LONG   0x00ea   1             // Parameter 2
  WRITE_BYTE   0x00ee   1             // Timing metho
  WRITE_LONG   0x00f0   0             // Duration
  WRITE_ASCII  0x00f6   ~SPWI718~  #8 // Resource
  WRITE_LONG   0x0106   0             // S. throw typ
  WRITE_LONG   0x010a   0             // S. throw bon
  WRITE_ASCII  0x0126   ~SPWI405~  #8 // Resource

COPY_EXISTING ~ring29.itm~ ~override/ring29.itm~
  INSERT_BYTES 370      136           // extend file to new size
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0068   1             // Ext. count
  WRITE_LONG   0x006a   170           // Feat. offset
  WRITE_ASCII  0x0076   ~SPWI625B~ #8 // Use icon
  WRITE_SHORT  0x0080   20            // Range
  WRITE_SHORT  0x0088   6             // Dice size
  WRITE_SHORT  0x008a   0             // Dice count
  WRITE_SHORT  0x0090   6             // Feat. count
  WRITE_SHORT  0x0094   10            // Charges
  WRITE_LONG   0x0098   0             // Flags
  WRITE_SHORT  0x00aa   0             // Opcode
  WRITE_BYTE   0x00ac   1             // Target type
  WRITE_BYTE   0x00ad   0             // Power
  WRITE_LONG   0x00ae   1             // Parameter 1
  WRITE_LONG   0x00b2   0             // Parameter 2
  WRITE_BYTE   0x00b6   2             // Timing metho
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_LONG   0x00b8   0             // Duration
  WRITE_BYTE   0x00bc   100           // Max. prob.
  WRITE_BYTE   0x00bd   0             // Min. prob.
  WRITE_ASCII  0x00be   ~~         #8 // Resource
  WRITE_LONG   0x00c6   0             // Min level
  WRITE_LONG   0x00ca   0             // Max level
  WRITE_LONG   0x00ce   0             // S. throw typ
  WRITE_LONG   0x00d2   0             // S. throw bon
  WRITE_LONG   0x00d6   0             // Special
  WRITE_SHORT  0x00da   43            // Opcode
  WRITE_BYTE   0x00dc   2             // Target type
  WRITE_BYTE   0x00dd   0             // Power
  WRITE_LONG   0x00de   0             // Parameter 1
  WRITE_LONG   0x00e2   0             // Parameter 2
  WRITE_BYTE   0x00e6   1             // Timing metho
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_LONG   0x00e8   0             // Duration
  WRITE_BYTE   0x00ec   100           // Max. prob.
  WRITE_ASCII  0x00ee   ~~         #8 // Resource
  WRITE_LONG   0x00f6   0             // Min level
  WRITE_LONG   0x00fa   0             // Max level
  WRITE_LONG   0x00fe   0             // S. throw typ
  WRITE_LONG   0x0102   0             // S. throw bon
  WRITE_LONG   0x0106   0             // Special
  WRITE_SHORT  0x010a   141           // Opcode
  WRITE_BYTE   0x010c   2             // Target type
  WRITE_BYTE   0x010d   0             // Power
  WRITE_LONG   0x010e   0             // Parameter 1
  WRITE_LONG   0x0112   4             // Parameter 2
  WRITE_BYTE   0x0116   1             // Timing metho
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_LONG   0x0118   0             // Duration
  WRITE_BYTE   0x011c   100           // Max. prob.
  WRITE_ASCII  0x011e   ~~         #8 // Resource
  WRITE_LONG   0x0126   0             // Min level
  WRITE_LONG   0x012a   0             // Max level
  WRITE_LONG   0x012e   0             // S. throw typ
  WRITE_LONG   0x0132   0             // S. throw bon
  WRITE_LONG   0x0136   0             // Special
  WRITE_SHORT  0x013a   141           // Opcode
  WRITE_BYTE   0x013c   2             // Target type
  WRITE_BYTE   0x013d   0             // Power
  WRITE_LONG   0x013e   0             // Parameter 1
  WRITE_LONG   0x0142   5             // Parameter 2
  WRITE_BYTE   0x0146   1             // Timing metho
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_LONG   0x0148   0             // Duration
  WRITE_BYTE   0x014c   100           // Max. prob.
  WRITE_ASCII  0x014e   ~~         #8 // Resource
  WRITE_LONG   0x0156   0             // Min level
  WRITE_LONG   0x015a   0             // Max level
  WRITE_LONG   0x015e   0             // S. throw typ
  WRITE_LONG   0x0162   0             // S. throw bon
  WRITE_LONG   0x0166   0             // Special
  WRITE_SHORT  0x016a   141           // Opcode
  WRITE_BYTE   0x016c   2             // Target type
  WRITE_BYTE   0x016d   0             // Power
  WRITE_LONG   0x016e   0             // Parameter 1
  WRITE_LONG   0x0172   6             // Parameter 2
  WRITE_BYTE   0x0176   1             // Timing metho
  WRITE_BYTE   0x0177   0             // Resistance
  WRITE_LONG   0x0178   0             // Duration
  WRITE_BYTE   0x017c   100           // Max. prob.
  WRITE_BYTE   0x017d   0             // Min. prob.
  WRITE_ASCII  0x017e   ~~         #8 // Resource
  WRITE_LONG   0x0186   0             // Min level
  WRITE_LONG   0x018a   0             // Max level
  WRITE_LONG   0x018e   0             // S. throw typ
  WRITE_LONG   0x0192   0             // S. throw bon
  WRITE_LONG   0x0196   0             // Special
  WRITE_SHORT  0x019a   174           // Opcode
  WRITE_BYTE   0x019c   2             // Target type
  WRITE_BYTE   0x019d   0             // Power
  WRITE_LONG   0x019e   0             // Parameter 1
  WRITE_LONG   0x01a2   0             // Parameter 2
  WRITE_BYTE   0x01a6   1             // Timing metho
  WRITE_BYTE   0x01a7   0             // Resistance
  WRITE_LONG   0x01a8   0             // Duration
  WRITE_BYTE   0x01ac   100           // Max. prob.
  WRITE_BYTE   0x01ad   0             // Min. prob.
  WRITE_ASCII  0x01ae   ~MISC_04A~ #8 // Resource
  WRITE_LONG   0x01b6   0             // Min level
  WRITE_LONG   0x01ba   0             // Max level
  WRITE_LONG   0x01be   0             // S. throw typ
  WRITE_LONG   0x01c2   0             // S. throw bon
  WRITE_LONG   0x01c6   0             // Special
  WRITE_SHORT  0x01ca   215           // Opcode
  WRITE_BYTE   0x01cc   2             // Target type
  WRITE_BYTE   0x01cd   0             // Power
  WRITE_LONG   0x01ce   0             // Parameter 1
  WRITE_LONG   0x01d2   0             // Parameter 2
  WRITE_BYTE   0x01d6   1             // Timing metho
  WRITE_BYTE   0x01d7   2             // Resistance
  WRITE_LONG   0x01d8   0             // Duration
  WRITE_BYTE   0x01dc   100           // Max. prob.
  WRITE_BYTE   0x01dd   0             // Min. prob.
  WRITE_ASCII  0x01de   ~SPFLESHS~ #8 // Resource
  WRITE_LONG   0x01e6   0             // Min level
  WRITE_LONG   0x01ea   0             // Max level
  WRITE_LONG   0x01ee   0             // S. throw typ
  WRITE_LONG   0x01f2   0             // S. throw bon
  WRITE_LONG   0x01f6   0             // Special

COPY_EXISTING ~ring39.itm~ ~override/ring39.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0070   14            // Equip count
  WRITE_SHORT  0x0092   14            // Feat. offset
  WRITE_SHORT  0x00c0   6             // Dice size
  WRITE_SHORT  0x00c2   0             // Dice count
  WRITE_SHORT  0x00ca   15            // Feat. offset
  WRITE_SHORT  0x00e2   0             // Opcode
  WRITE_LONG   0x00e6   2             // Parameter 1
  WRITE_LONG   0x00ea   0             // Parameter 2
  WRITE_SHORT  0x0112   33            // Opcode
  WRITE_LONG   0x0116   2             // Parameter 1
  WRITE_LONG   0x011a   0             // Parameter 2
  WRITE_SHORT  0x0142   34            // Opcode
  WRITE_LONG   0x0146   2             // Parameter 1
  WRITE_LONG   0x014a   0             // Parameter 2
  WRITE_SHORT  0x0172   35            // Opcode
  WRITE_LONG   0x0176   2             // Parameter 1
  WRITE_LONG   0x017a   0             // Parameter 2
  WRITE_SHORT  0x01a2   36            // Opcode
  WRITE_LONG   0x01a6   2             // Parameter 1
  WRITE_LONG   0x01aa   0             // Parameter 2
  WRITE_LONG   0x01c2   0             // Max level
  WRITE_SHORT  0x01d2   37            // Opcode
  WRITE_LONG   0x01d6   2             // Parameter 1
  WRITE_LONG   0x01da   0             // Parameter 2
  WRITE_LONG   0x01f2   0             // Max level
  WRITE_SHORT  0x0202   101           // Opcode
  WRITE_LONG   0x0206   0             // Parameter 1
  WRITE_LONG   0x020a   25            // Parameter 2
  WRITE_LONG   0x0222   0             // Max level
  WRITE_SHORT  0x0232   173           // Opcode
  WRITE_LONG   0x0236   100           // Parameter 1
  WRITE_LONG   0x023a   0             // Parameter 2
  WRITE_LONG   0x0252   0             // Max level
  WRITE_SHORT  0x0262   142           // Opcode
  WRITE_LONG   0x0266   0             // Parameter 1
  WRITE_LONG   0x026a   30            // Parameter 2
  WRITE_SHORT  0x0292   166           // Opcode
  WRITE_LONG   0x0296   10            // Parameter 1
  WRITE_SHORT  0x02c2   142           // Opcode
  WRITE_LONG   0x02c6   0             // Parameter 1
  WRITE_LONG   0x02ca   63            // Parameter 2
  WRITE_SHORT  0x02f2   98            // Opcode
  WRITE_LONG   0x02f6   3             // Parameter 1
  WRITE_LONG   0x02fa   3             // Parameter 2
  WRITE_SHORT  0x0322   142           // Opcode
  WRITE_LONG   0x0326   0             // Parameter 1
  WRITE_LONG   0x032a   87            // Parameter 2
  WRITE_SHORT  0x0352   169           // Opcode
  WRITE_LONG   0x0356   0             // Parameter 1
  WRITE_LONG   0x035a   6             // Parameter 2
  WRITE_SHORT  0x0382   20            // Opcode
  WRITE_LONG   0x038a   0             // Parameter 2
  WRITE_BYTE   0x038e   0             // Timing metho
  WRITE_BYTE   0x038f   3             // Resistance
  WRITE_LONG   0x0390   3600          // Duration
  WRITE_SHORT  0x03b2   16            // Opcode
  WRITE_LONG   0x03ba   1             // Parameter 2
  WRITE_BYTE   0x03be   0             // Timing metho
  WRITE_BYTE   0x03bf   2             // Resistance
  WRITE_LONG   0x03c0   10            // Duration
  WRITE_LONG   0x03d2   0             // Max level
  WRITE_LONG   0x03ea   110           // Parameter 2
  WRITE_BYTE   0x03ee   0             // Timing metho
  WRITE_BYTE   0x03ef   2             // Resistance
  WRITE_LONG   0x03f0   10            // Duration
  SET bytes_to_remove = SOURCE_SIZE - 0x412
  DELETE_BYTES 0x412    bytes_to_remove
  SAY DESC     @9046

COPY_EXISTING ~ringwolf.itm~ ~override/ringwolf.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0076   3             // Parameter 1
  WRITE_BYTE   0x007f   0             // Resistance

COPY_EXISTING ~rods01.itm~ ~override/rods01.itm~
  WRITE_LONG   0x000c   38840         // ID name
  WRITE_LONG   0x0018   108           // Attributes
  WRITE_SHORT  0x001c   0             // Itemtype
  WRITE_LONG   0x001e   0x00000000    // Usability
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x0029   0             // Kit 1
  WRITE_LONG   0x0034   12500         // Price
  WRITE_SHORT  0x0042   0             // Lore to ID
  WRITE_LONG   0x004c   1             // Weight
  WRITE_LONG   0x0054   39618         // ID desc
  WRITE_SHORT  0x0068   0             // Ext. count
  WRITE_LONG   0x006a   114           // Feat. offset
  DELETE_BYTES 0x72     632
  SAY NAME2    @9175
  SAY DESC     @9176

COPY_EXISTING ~rods06.itm~ ~override/rods06.itm~
  WRITE_LONG   0x0018   109           // Attributes
  WRITE_LONG   0x001e   0x404c03c0    // Usability
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x002f   64            // Kit 4
  WRITE_LONG   0x0034   30000         // Price
  WRITE_SHORT  0x0042   0             // Lore to ID
  WRITE_BYTE   0x00b6   1             // Timing metho
  WRITE_ASCII  0x00be   ~SPWI704~  #8 // Resource

COPY_EXISTING ~sahbolt.itm~ ~override/sahbolt.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0042   0             // Lore to ID
  WRITE_LONG   0x0060   0             // Magiclevel
  WRITE_LONG   0x00ce   4             // S. throw typ
  WRITE_LONG   0x00fe   4             // S. throw typ
  WRITE_LONG   0x012e   4             // S. throw typ

COPY_EXISTING ~scrl04.itm~ ~override/scrl04.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   200           // Stack
  WRITE_SHORT  0x0080   20            // Range
  WRITE_BYTE   0x00ad   4             // Power
  WRITE_BYTE   0x010d   4             // Power
  WRITE_BYTE   0x013d   4             // Power
  WRITE_BYTE   0x016d   4             // Power
  WRITE_BYTE   0x019d   4             // Power

COPY_EXISTING ~scrl05.itm~ ~override/scrl05.itm~
  WRITE_LONG   0x0008   7222          // UnID name
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   5             // Stack
  WRITE_SHORT  0x0080   20            // Range
  WRITE_BYTE   0x00ad   4             // Power
  WRITE_BYTE   0x010d   4             // Power
  WRITE_BYTE   0x013d   4             // Power
  WRITE_BYTE   0x016d   4             // Power
  WRITE_BYTE   0x019d   4             // Power

COPY_EXISTING ~scrl06.itm~ ~override/scrl06.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   5             // Stack
  WRITE_SHORT  0x0080   20            // Range
  WRITE_SHORT  0x0090   7             // Feat. count
  WRITE_BYTE   0x00ad   4             // Power
  WRITE_SHORT  0x00da   282           // Opcode
  WRITE_BYTE   0x00dd   4             // Power
  WRITE_LONG   0x00de   1             // Parameter 1
  WRITE_BYTE   0x00e6   0             // Timing metho
  WRITE_LONG   0x00e8   3600          // Duration
  WRITE_SHORT  0x010a   141           // Opcode
  WRITE_LONG   0x0112   14            // Parameter 2
  WRITE_BYTE   0x0116   1             // Timing metho
  WRITE_LONG   0x0118   0             // Duration
  WRITE_SHORT  0x013a   142           // Opcode
  WRITE_BYTE   0x013d   4             // Power
  WRITE_LONG   0x013e   0             // Parameter 1
  WRITE_LONG   0x0142   16            // Parameter 2
  WRITE_LONG   0x0148   3600          // Duration
  WRITE_SHORT  0x016a   50            // Opcode
  WRITE_BYTE   0x016d   4             // Power
  WRITE_LONG   0x016e   1463755008    // Parameter 1
  WRITE_LONG   0x0172   1310720       // Parameter 2
  WRITE_BYTE   0x0176   0             // Timing metho
  WRITE_LONG   0x0178   2             // Duration
  WRITE_ASCII  0x017e   ~~         #8 // Resource
  WRITE_BYTE   0x019d   4             // Power
  WRITE_BYTE   0x01a6   1             // Timing metho
  WRITE_LONG   0x01a8   0             // Duration
  WRITE_ASCII  0x01ae   ~EFF_M02~  #8 // Resource
  INSERT_BYTES 0x01ca   48            // new feature block
  WRITE_SHORT  0x01ca   174           // Opcode
  WRITE_BYTE   0x01cc   2             // Target type
  WRITE_BYTE   0x01cd   4             // Power
  WRITE_LONG   0x01ce   0             // Parameter 1
  WRITE_LONG   0x01d2   0             // Parameter 2
  WRITE_BYTE   0x01d6   4             // Timing metho
  WRITE_BYTE   0x01d7   3             // Resistance
  WRITE_LONG   0x01d8   3600          // Duration
  WRITE_BYTE   0x01dc   100           // Max. prob.
  WRITE_BYTE   0x01dd   0             // Min. prob.
  WRITE_ASCII  0x01de   ~EFF_E04~  #8 // Resource
  WRITE_LONG   0x01e6   0             // Min level
  WRITE_LONG   0x01ea   0             // Max level
  WRITE_LONG   0x01ee   0             // S. throw typ
  WRITE_LONG   0x01f2   0             // S. throw bon
  WRITE_LONG   0x01f6   0             // Special

COPY_EXISTING ~scrl07.itm~ ~override/scrl07.itm~
  WRITE_LONG   0x0008   "-1"          // UnID name
  WRITE_LONG   0x0018   109           // Attributes
  WRITE_SHORT  0x001c   0             // Itemtype
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x002a   0             // MinInt
  WRITE_LONG   0x0034   0             // Price
  WRITE_SHORT  0x0038   1             // Stack
  WRITE_SHORT  0x0042   0             // Lore to ID
  WRITE_LONG   0x0050   "-1"          // UnID desc
  WRITE_LONG   0x0054   "-1"          // ID desc
  WRITE_LONG   0x0060   1             // Magiclevel
  WRITE_SHORT  0x0068   0             // Ext. count
  WRITE_LONG   0x006a   114           // Feat. offset
  SET bytes_to_remove = SOURCE_SIZE - 0x72
  DELETE_BYTES 0x72    bytes_to_remove
  SAY DESC     @9005

COPY_EXISTING ~scrl1p.itm~ ~override/scrl1p.itm~
  WRITE_LONG   0x000c   12094         // ID name
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x0029   72            // Kit 1
  WRITE_BYTE   0x002d   0             // Kit 3
  WRITE_BYTE   0x002f   128           // Kit 4
  WRITE_SHORT  0x0038   5             // Stack
  WRITE_ASCII  0x003a   ~SPPR205A~ #8 // Inventory
  WRITE_LONG   0x0054   8064          // ID desc
  WRITE_ASCII  0x0076   ~SPPR205A~ #8 // Use icon
  WRITE_BYTE   0x007e   5             // Target type
  WRITE_SHORT  0x0080   1             // Range
  WRITE_ASCII  0x00ae   ~SPPR205A~ #8 // Use icon
  WRITE_SHORT  0x00e2   146           // Opcode
  WRITE_BYTE   0x00e4   2             // Target type
  WRITE_BYTE   0x00ef   2             // Resistance
  WRITE_ASCII  0x00f6   ~SPWI313~  #8 // Resource
  WRITE_BYTE   0x011f   2             // Resistance
  WRITE_ASCII  0x0126   ~SPWI313~  #8 // Resource
  SAY DESC     @9055

COPY_EXISTING ~scrl5o.itm~ ~override/scrl5o.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   5             // Stack
  WRITE_ASCII  0x0076   ~ISCRL5O~  #8 // Use icon
  WRITE_BYTE   0x007e   1             // Target type
  WRITE_SHORT  0x0080   40            // Range
  WRITE_SHORT  0x00e2   146           // Opcode
  WRITE_BYTE   0x00e4   2             // Target type
  WRITE_ASCII  0x00f6   ~SPWI507~  #8 // Resource

COPY_EXISTING ~scrl8y.itm~ ~override/scrl8y.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0038   99            // Stack

COPY_EXISTING ~scrl8z.itm~ ~override/scrl8z.itm~
  WRITE_LONG   0x001e   0x60725ec0    // Usability
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x002d   0             // Kit 3
  WRITE_BYTE   0x002f   64            // Kit 4
  WRITE_SHORT  0x0038   5             // Stack

COPY_EXISTING ~scrl98.itm~ ~override/scrl98.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0080   1             // Range
  SAY DESC     @9109

COPY_EXISTING ~sendai.itm~ ~override/sendai.itm~
  WRITE_BYTE   0x002b   0             // Kit 2
  WRITE_SHORT  0x0070   6             // Equip count
  WRITE_SHORT  0x0086   5             // Thac0 bonus
  WRITE_SHORT  0x008a   2             // Dice count
  WRITE_SHORT  0x008c   12            // Dice bonus
  WRITE_SHORT  0x008e   2             // Damagetype
  WRITE_SHORT  0x0090   7             // Feat. count
  WRITE_SHORT  0x0092   6             // Feat. offset
  WRITE_SHORT  0x010a   98            // Opcode
  WRITE_BYTE   0x010c   1             // Target type
  WRITE_LONG   0x010e   2             // Parameter 1
  WRITE_LONG   0x0112   2             // Parameter 2
  WRITE_BYTE   0x0116   2             // Timing metho
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_LONG   0x0118   0             // Duration
  WRITE_BYTE   0x011d   0             // Min. prob.
  WRITE_LONG   0x012e   0             // S. throw typ
  WRITE_LONG   0x0132   0             // S. throw bon
  WRITE_SHORT  0x013a   233           // Opcode
  WRITE_BYTE   0x013c   1             // Target type
  WRITE_LONG   0x013e   2             // Parameter 1
  WRITE_LONG   0x0142   100           // Parameter 2
  WRITE_BYTE   0x0146   2             // Timing metho
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_LONG   0x0148   0             // Duration
  WRITE_BYTE   0x014d   0             // Min. prob.
  WRITE_LONG   0x015e   0             // S. throw typ
  WRITE_LONG   0x0162   0             // S. throw bon
  WRITE_SHORT  0x016a   0             // Opcode
  WRITE_BYTE   0x016c   1             // Target type
  WRITE_LONG   0x016e   "-14"         // Parameter 1
  WRITE_LONG   0x0172   16            // Parameter 2
  WRITE_BYTE   0x0176   2             // Timing metho
  WRITE_LONG   0x0178   0             // Duration
  WRITE_BYTE   0x017d   0             // Min. prob.
  WRITE_LONG   0x018e   0             // S. throw typ
  WRITE_SHORT  0x019a   0             // Opcode
  WRITE_BYTE   0x019c   1             // Target type
  WRITE_LONG   0x019e   6             // Parameter 1
  WRITE_BYTE   0x01a6   2             // Timing metho
  WRITE_BYTE   0x01a7   0             // Resistance
  WRITE_LONG   0x01a8   0             // Duration
  WRITE_BYTE   0x01ac   100           // Max. prob.
  WRITE_LONG   0x01be   0             // S. throw typ
  WRITE_LONG   0x01c2   0             // S. throw bon
  WRITE_SHORT  0x01ca   40            // Opcode
  WRITE_BYTE   0x01cd   6             // Power
  WRITE_LONG   0x01d2   0             // Parameter 2
  WRITE_BYTE   0x01d7   1             // Resistance
  WRITE_LONG   0x01d8   30            // Duration
  WRITE_BYTE   0x01dc   100           // Max. prob.
  WRITE_BYTE   0x01dd   76            // Min. prob.
  WRITE_LONG   0x01ee   1             // S. throw typ
  WRITE_LONG   0x01f2   "-4"          // S. throw bon
  INSERT_BYTES 0x01fa   48            // new feature block
  WRITE_SHORT  0x01fa   142           // Opcode
  WRITE_BYTE   0x01fc   2             // Target type
  WRITE_BYTE   0x01fd   6             // Power
  WRITE_LONG   0x01fe   0             // Parameter 1
  WRITE_LONG   0x0202   41            // Parameter 2
  WRITE_BYTE   0x0206   0             // Timing metho
  WRITE_BYTE   0x0207   3             // Resistance
  WRITE_LONG   0x0208   30            // Duration
  WRITE_BYTE   0x020c   100           // Max. prob.
  WRITE_BYTE   0x020d   76            // Min. prob.
  WRITE_ASCII  0x020e   ~~         #8 // Resource
  WRITE_LONG   0x0216   0             // Min level
  WRITE_LONG   0x021a   0             // Max level
  WRITE_LONG   0x021e   1             // S. throw typ
  WRITE_LONG   0x0222   "-4"          // S. throw bon
  WRITE_LONG   0x0226   0             // Special
  INSERT_BYTES 0x022a   48            // new feature block
  WRITE_SHORT  0x022a   87            // Opcode
  WRITE_BYTE   0x022c   2             // Target type
  WRITE_BYTE   0x022d   0             // Power
  WRITE_LONG   0x022e   "-10"         // Parameter 1
  WRITE_LONG   0x0232   0             // Parameter 2
  WRITE_BYTE   0x0236   0             // Timing metho
  WRITE_BYTE   0x0237   0             // Resistance
  WRITE_LONG   0x0238   60            // Duration
  WRITE_BYTE   0x023c   75            // Max. prob.
  WRITE_BYTE   0x023d   51            // Min. prob.
  WRITE_ASCII  0x023e   ~~         #8 // Resource
  WRITE_LONG   0x0246   0             // Min level
  WRITE_LONG   0x024a   0             // Max level
  WRITE_LONG   0x024e   0             // S. throw typ
  WRITE_LONG   0x0252   0             // S. throw bon
  WRITE_LONG   0x0256   0             // Special
  INSERT_BYTES 0x025a   48            // new feature block
  WRITE_SHORT  0x025a   25            // Opcode
  WRITE_BYTE   0x025c   2             // Target type
  WRITE_BYTE   0x025d   0             // Power
  WRITE_LONG   0x025e   1             // Parameter 1
  WRITE_LONG   0x0262   2             // Parameter 2
  WRITE_BYTE   0x0266   0             // Timing metho
  WRITE_BYTE   0x0267   0             // Resistance
  WRITE_LONG   0x0268   18            // Duration
  WRITE_BYTE   0x026c   50            // Max. prob.
  WRITE_BYTE   0x026d   26            // Min. prob.
  WRITE_ASCII  0x026e   ~~         #8 // Resource
  WRITE_LONG   0x0276   0             // Min level
  WRITE_LONG   0x027a   0             // Max level
  WRITE_LONG   0x027e   4             // S. throw typ
  WRITE_LONG   0x0282   "-4"          // S. throw bon
  WRITE_LONG   0x0286   0             // Special
  INSERT_BYTES 0x028a   48            // new feature block
  WRITE_SHORT  0x028a   25            // Opcode
  WRITE_BYTE   0x028c   2             // Target type
  WRITE_BYTE   0x028d   0             // Power
  WRITE_LONG   0x028e   1             // Parameter 1
  WRITE_LONG   0x0292   2             // Parameter 2
  WRITE_BYTE   0x0296   0             // Timing metho
  WRITE_BYTE   0x0297   0             // Resistance
  WRITE_LONG   0x0298   18            // Duration
  WRITE_BYTE   0x029c   50            // Max. prob.
  WRITE_BYTE   0x029d   26            // Min. prob.
  WRITE_ASCII  0x029e   ~~         #8 // Resource
  WRITE_LONG   0x02a6   0             // Min level
  WRITE_LONG   0x02aa   0             // Max level
  WRITE_LONG   0x02ae   0             // S. throw typ
  WRITE_LONG   0x02b2   0             // S. throw bon
  WRITE_LONG   0x02b6   0             // Special
  INSERT_BYTES 0x02ba   48            // new feature block
  WRITE_SHORT  0x02ba   142           // Opcode
  WRITE_BYTE   0x02bc   2             // Target type
  WRITE_BYTE   0x02bd   0             // Power
  WRITE_LONG   0x02be   0             // Parameter 1
  WRITE_LONG   0x02c2   6             // Parameter 2
  WRITE_BYTE   0x02c6   0             // Timing metho
  WRITE_BYTE   0x02c7   0             // Resistance
  WRITE_LONG   0x02c8   18            // Duration
  WRITE_BYTE   0x02cc   50            // Max. prob.
  WRITE_BYTE   0x02cd   26            // Min. prob.
  WRITE_ASCII  0x02ce   ~~         #8 // Resource
  WRITE_LONG   0x02d6   0             // Min level
  WRITE_LONG   0x02da   0             // Max level
  WRITE_LONG   0x02de   0             // S. throw typ
  WRITE_LONG   0x02e2   0             // S. throw bon
  WRITE_LONG   0x02e6   0             // Special
  INSERT_BYTES 0x02ea   48            // new feature block
  WRITE_SHORT  0x02ea   54            // Opcode
  WRITE_BYTE   0x02ec   2             // Target type
  WRITE_BYTE   0x02ed   0             // Power
  WRITE_LONG   0x02ee   "-1"          // Parameter 1
  WRITE_LONG   0x02f2   0             // Parameter 2
  WRITE_BYTE   0x02f6   0             // Timing metho
  WRITE_BYTE   0x02f7   0             // Resistance
  WRITE_LONG   0x02f8   120           // Duration
  WRITE_BYTE   0x02fc   25            // Max. prob.
  WRITE_BYTE   0x02fd   0             // Min. prob.
  WRITE_ASCII  0x02fe   ~~         #8 // Resource
  WRITE_LONG   0x0306   0             // Min level
  WRITE_LONG   0x030a   0             // Max level
  WRITE_LONG   0x030e   0             // S. throw typ
  WRITE_LONG   0x0312   0             // S. throw bon
  WRITE_LONG   0x0316   0             // Special

COPY_EXISTING ~shille.itm~ ~override/shille.itm~
  WRITE_SHORT  0x0026   0             // MinStr
  WRITE_LONG   0x004c   3             // Weight
  WRITE_LONG   0x0060   1             // Magiclevel
  WRITE_BYTE   0x01cd   1             // Power

COPY_EXISTING ~shld07.itm~ ~override/shld07.itm~
  WRITE_SHORT  0x0022   13380         // Animation
  WRITE_ASCII  0x003a   ~ISHLDL02~ #8 // Inventory
  WRITE_ASCII  0x0058   ~CSHLD23~  #8 // Desc icon
  WRITE_SHORT  0x0070   4             // Equip count
  WRITE_SHORT  0x0072   0             // Opcode
  WRITE_LONG   0x0076   2             // Parameter 1
  WRITE_LONG   0x007a   0             // Parameter 2
  WRITE_SHORT  0x00a2   0             // Opcode
  WRITE_LONG   0x00a6   3             // Parameter 1
  WRITE_LONG   0x00aa   2             // Parameter 2
  WRITE_LONG   0x00d6   91            // Parameter 1
  WRITE_LONG   0x00da   37            // Parameter 2
  WRITE_LONG   0x0106   98            // Parameter 1
  SET bytes_to_remove = SOURCE_SIZE - 0x132
  DELETE_BYTES 0x132    bytes_to_remove
  SAY DESC     @300

COPY_EXISTING ~shld23.itm~ ~override/shld23.itm~
  WRITE_SHORT  0x0022   13380         // Animation
  WRITE_LONG   0x0034   27000         // Price
  WRITE_LONG   0x004c   10            // Weight
  WRITE_SHORT  0x0070   4             // Equip count
  WRITE_SHORT  0x0072   0             // Opcode
  WRITE_LONG   0x0076   4             // Parameter 1
  WRITE_LONG   0x007a   0             // Parameter 2
  WRITE_SHORT  0x00a2   0             // Opcode
  WRITE_LONG   0x00a6   3             // Parameter 1
  WRITE_LONG   0x00aa   2             // Parameter 2
  WRITE_LONG   0x00d6   60            // Parameter 1
  WRITE_LONG   0x00da   37            // Parameter 2
  WRITE_LONG   0x0106   59            // Parameter 1
  SET bytes_to_remove = SOURCE_SIZE - 0x132
  DELETE_BYTES 0x132    bytes_to_remove
  SAY DESC     @301

COPY_EXISTING ~shld31.itm~ ~override/shld31.itm~
  WRITE_SHORT  0x0022   13380         // Animation
  WRITE_ASCII  0x003a   ~ISHLD31~  #8 // Inventory
  WRITE_ASCII  0x0058   ~PSHLD31~  #8 // Desc icon
  WRITE_SHORT  0x0070   7             // Equip count
  WRITE_SHORT  0x0072   0             // Opcode
  WRITE_LONG   0x0076   5             // Parameter 1
  WRITE_LONG   0x007a   0             // Parameter 2
  WRITE_LONG   0x00a6   60            // Parameter 1
  WRITE_LONG   0x00d6   59            // Parameter 1
  WRITE_LONG   0x00da   32            // Parameter 2
  WRITE_SHORT  0x0102   27            // Opcode
  WRITE_LONG   0x0106   10            // Parameter 1
  WRITE_LONG   0x010a   0             // Parameter 2
  WRITE_SHORT  0x0132   28            // Opcode
  WRITE_LONG   0x0136   10            // Parameter 1
  WRITE_SHORT  0x0162   30            // Opcode
  WRITE_BYTE   0x016f   0             // Resistance
  WRITE_SHORT  0x0192   29            // Opcode
  WRITE_BYTE   0x019f   0             // Resistance
  SET bytes_to_remove = SOURCE_SIZE - 0x1c2
  DELETE_BYTES 0x1c2    bytes_to_remove
  SAY DESC     @9088

COPY_EXISTING ~slaylive.itm~ ~override/slaylive.itm~
  WRITE_ASCII  0x0010   ~MISC56~   #8 // Used up
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0060   5             // Magiclevel
  WRITE_SHORT  0x0086   0             // Thac0 bonus
  WRITE_SHORT  0x0088   0             // Dice size
  WRITE_SHORT  0x008a   0             // Dice count
  WRITE_SHORT  0x008e   1             // Damagetype
  WRITE_BYTE   0x00ad   6             // Power

COPY_EXISTING ~sper10.itm~ ~override/sper10.itm~
  WRITE_LONG   0x0034   40000         // Price
  WRITE_LONG   0x0054   76920         // ID desc
  WRITE_SHORT  0x0080   1             // Range
  WRITE_LONG   0x00ae   97            // Parameter 1
  WRITE_LONG   0x00b2   21            // Parameter 2
  WRITE_LONG   0x00de   39            // Parameter 1
  WRITE_LONG   0x00e2   20            // Parameter 2
  WRITE_LONG   0x010e   "-36896768"    // Parameter 1
  WRITE_LONG   0x013e   20            // Parameter 1
  WRITE_BYTE   0x014c   10            // Max. prob.
  SAY DESC     @11112

COPY_EXISTING ~sper12.itm~ ~override/sper12.itm~
  WRITE_ASCII  0x003a   ~ISPER11~  #8 // Inventory
  WRITE_LONG   0x0060   5             // Magiclevel
  WRITE_SHORT  0x0070   3             // Equip count
  WRITE_ASCII  0x0076   ~ISPER11~  #8 // Use icon
  WRITE_SHORT  0x0080   1             // Range
  WRITE_SHORT  0x0092   3             // Feat. offset
  WRITE_LONG   0x00ae   27            // Parameter 1
  WRITE_LONG   0x00b2   21            // Parameter 2
  WRITE_LONG   0x00de   99            // Parameter 1
  WRITE_LONG   0x00e2   20            // Parameter 2
  WRITE_LONG   0x010e   "-843489280"    // Parameter 1
  WRITE_LONG   0x0112   4587541       // Parameter 2
  WRITE_SHORT  0x013a   39            // Opcode
  WRITE_BYTE   0x013c   2             // Target type
  WRITE_LONG   0x0142   0             // Parameter 2
  WRITE_BYTE   0x0146   0             // Timing metho
  WRITE_LONG   0x0148   18            // Duration
  WRITE_LONG   0x015e   4             // S. throw typ
  WRITE_SHORT  0x016a   142           // Opcode
  WRITE_BYTE   0x016c   2             // Target type
  WRITE_LONG   0x016e   0             // Parameter 1
  WRITE_LONG   0x0172   13            // Parameter 2
  WRITE_BYTE   0x0176   0             // Timing metho
  WRITE_BYTE   0x0177   0             // Resistance
  WRITE_LONG   0x0178   18            // Duration
  WRITE_ASCII  0x017e   ~~         #8 // Resource
  WRITE_LONG   0x018e   4             // S. throw typ
  WRITE_SHORT  0x019a   12            // Opcode
  WRITE_BYTE   0x019c   2             // Target type
  WRITE_LONG   0x019e   5             // Parameter 1
  WRITE_LONG   0x01a2   1048576       // Parameter 2
  WRITE_BYTE   0x01a6   1             // Timing metho
  WRITE_BYTE   0x01a7   0             // Resistance
  WRITE_LONG   0x01a8   18            // Duration
  WRITE_ASCII  0x01ae   ~~         #8 // Resource
  WRITE_LONG   0x01b6   1             // Min level
  WRITE_LONG   0x01ba   6             // Max level
  WRITE_LONG   0x01be   4             // S. throw typ
  WRITE_SHORT  0x01ca   12            // Opcode
  WRITE_BYTE   0x01cc   2             // Target type
  WRITE_LONG   0x01ce   5             // Parameter 1
  WRITE_LONG   0x01d2   1048576       // Parameter 2
  WRITE_BYTE   0x01d6   4             // Timing metho
  WRITE_BYTE   0x01d7   0             // Resistance
  WRITE_LONG   0x01d8   12            // Duration
  WRITE_LONG   0x01e6   1             // Min level
  WRITE_LONG   0x01ea   6             // Max level
  WRITE_LONG   0x01ee   4             // S. throw typ
  WRITE_SHORT  0x01fa   12            // Opcode
  WRITE_BYTE   0x01fc   2             // Target type
  WRITE_LONG   0x01fe   5             // Parameter 1
  WRITE_LONG   0x0202   1048576       // Parameter 2
  WRITE_BYTE   0x0206   4             // Timing metho
  WRITE_BYTE   0x0207   0             // Resistance
  WRITE_LONG   0x0208   18            // Duration
  WRITE_LONG   0x0216   1             // Min level
  WRITE_LONG   0x021a   6             // Max level
  WRITE_LONG   0x021e   4             // S. throw typ
  SET bytes_to_remove = SOURCE_SIZE - 0x22a
  DELETE_BYTES 0x22a    bytes_to_remove
  SAY DESC     @9122

COPY_EXISTING ~spidvo01.itm~ ~override/spidvo01.itm~
  WRITE_LONG   0x001e   0xdffff7ff    // Usability
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_LONG   0x0060   3             // Magiclevel
  WRITE_SHORT  0x008a   3             // Dice count
  WRITE_LONG   0x00de   5             // Parameter 1
  WRITE_LONG   0x00e8   6             // Duration
  WRITE_LONG   0x0118   6             // Duration
  WRITE_BYTE   0x0146   1             // Timing metho
  WRITE_LONG   0x015a   0             // Max level

COPY_EXISTING ~staf09.itm~ ~override/staf09.itm~
  WRITE_LONG   0x001e   0x20300004    // Usability
  WRITE_SHORT  0x0022   21329         // Animation
  WRITE_BYTE   0x0029   4             // Kit 1
  WRITE_BYTE   0x002f   56            // Kit 4
  WRITE_SHORT  0x0070   2             // Equip count
  WRITE_SHORT  0x0092   2             // Feat. offset
  WRITE_SHORT  0x00c0   0             // Dice size
  WRITE_SHORT  0x00c2   0             // Dice count
  WRITE_SHORT  0x00c8   4             // Feat. count
  WRITE_SHORT  0x00ca   2             // Feat. offset
  WRITE_LONG   0x0116   10            // Parameter 1
  WRITE_LONG   0x011a   16            // Parameter 2
  WRITE_SHORT  0x0142   5             // Opcode
  WRITE_BYTE   0x0144   2             // Target type
  WRITE_BYTE   0x0145   5             // Power
  WRITE_LONG   0x0146   0             // Parameter 1
  WRITE_LONG   0x014a   3             // Parameter 2
  WRITE_BYTE   0x014e   0             // Timing metho
  WRITE_BYTE   0x014f   1             // Resistance
  WRITE_LONG   0x0150   360           // Duration
  WRITE_LONG   0x0166   8             // S. throw typ
  WRITE_LONG   0x016a   "-2"          // S. throw bon
  WRITE_SHORT  0x0172   141           // Opcode
  WRITE_BYTE   0x0174   2             // Target type
  WRITE_BYTE   0x0175   5             // Power
  WRITE_LONG   0x0176   0             // Parameter 1
  WRITE_LONG   0x017a   9             // Parameter 2
  WRITE_BYTE   0x017e   1             // Timing metho
  WRITE_BYTE   0x017f   1             // Resistance
  WRITE_LONG   0x0196   8             // S. throw typ
  WRITE_LONG   0x019a   "-2"          // S. throw bon
  WRITE_SHORT  0x01a2   142           // Opcode
  WRITE_BYTE   0x01a4   2             // Target type
  WRITE_BYTE   0x01a5   5             // Power
  WRITE_LONG   0x01a6   0             // Parameter 1
  WRITE_LONG   0x01aa   43            // Parameter 2
  WRITE_BYTE   0x01ae   0             // Timing metho
  WRITE_BYTE   0x01af   1             // Resistance
  WRITE_LONG   0x01b0   360           // Duration
  WRITE_LONG   0x01c6   8             // S. throw typ
  WRITE_LONG   0x01ca   "-2"          // S. throw bon
  WRITE_SHORT  0x01d2   174           // Opcode
  WRITE_BYTE   0x01d5   5             // Power
  WRITE_LONG   0x01d6   0             // Parameter 1
  WRITE_LONG   0x01da   0             // Parameter 2
  WRITE_BYTE   0x01df   1             // Resistance
  WRITE_BYTE   0x01e4   100           // Max. prob.
  WRITE_ASCII  0x01e6   ~EFF_M16~  #8 // Resource
  WRITE_LONG   0x01f6   8             // S. throw typ
  WRITE_LONG   0x01fa   "-2"          // S. throw bon
  SET bytes_to_remove = SOURCE_SIZE - 0x202
  DELETE_BYTES 0x202    bytes_to_remove
  SAY DESC     @327

COPY_EXISTING ~staf10.itm~ ~override/staf10.itm~
  WRITE_SHORT  0x0022   21329         // Animation
  WRITE_BYTE   0x0029   0             // Kit 1
  WRITE_LONG   0x004c   3             // Weight
  WRITE_SHORT  0x0070   3             // Equip count
  WRITE_BYTE   0x007e   1             // Target type
  WRITE_SHORT  0x0092   3             // Feat. offset
  WRITE_SHORT  0x00c8   7             // Feat. count
  WRITE_SHORT  0x00ca   3             // Feat. offset
  WRITE_LONG   0x011a   16            // Parameter 2
  WRITE_SHORT  0x0142   0             // Opcode
  WRITE_LONG   0x0146   2             // Parameter 1
  WRITE_LONG   0x014a   0             // Parameter 2
  WRITE_SHORT  0x0172   215           // Opcode
  WRITE_BYTE   0x0174   2             // Target type
  WRITE_BYTE   0x0175   5             // Power
  WRITE_LONG   0x0176   0             // Parameter 1
  WRITE_LONG   0x017a   0             // Parameter 2
  WRITE_BYTE   0x017e   1             // Timing metho
  WRITE_ASCII  0x0186   ~SPHEALIN~ #8 // Resource
  WRITE_SHORT  0x01a2   50            // Opcode
  WRITE_BYTE   0x01a4   2             // Target type
  WRITE_BYTE   0x01a5   5             // Power
  WRITE_LONG   0x01a6   "-52736"      // Parameter 1
  WRITE_LONG   0x01aa   1966080       // Parameter 2
  WRITE_BYTE   0x01ae   0             // Timing metho
  WRITE_LONG   0x01b0   1             // Duration
  WRITE_SHORT  0x01d2   11            // Opcode
  WRITE_BYTE   0x01d4   2             // Target type
  WRITE_BYTE   0x01d5   5             // Power
  WRITE_LONG   0x01d6   0             // Parameter 1
  WRITE_BYTE   0x01de   1             // Timing metho
  WRITE_SHORT  0x0202   79            // Opcode
  WRITE_BYTE   0x0205   5             // Power
  WRITE_LONG   0x020a   0             // Parameter 2
  WRITE_BYTE   0x020f   0             // Resistance
  WRITE_BYTE   0x0235   5             // Power
  WRITE_LONG   0x023a   7             // Parameter 2
  WRITE_BYTE   0x023f   0             // Resistance
  WRITE_SHORT  0x0262   17            // Opcode
  WRITE_BYTE   0x0265   0             // Power
  WRITE_LONG   0x0266   3             // Parameter 1
  WRITE_LONG   0x026a   0             // Parameter 2
  WRITE_BYTE   0x026f   0             // Resistance
  WRITE_LONG   0x027e   3             // Min level
  WRITE_LONG   0x0282   6             // Max level
  WRITE_SHORT  0x0292   139           // Opcode
  WRITE_BYTE   0x0295   5             // Power
  WRITE_LONG   0x0296   14022         // Parameter 1
  WRITE_BYTE   0x029f   0             // Resistance
  WRITE_ASCII  0x02a6   ~~         #8 // Resource
  SET bytes_to_remove = SOURCE_SIZE - 0x2c2
  DELETE_BYTES 0x2c2    bytes_to_remove

COPY_EXISTING ~staf11.itm~ ~override/staf11.itm~
  WRITE_LONG   0x001e   0xf7fbffcc    // Usability
  WRITE_SHORT  0x0022   21329         // Animation
  WRITE_BYTE   0x0029   0             // Kit 1
  WRITE_ASCII  0x0044   ~GSTAF01~  #8 // Ground
  WRITE_ASCII  0x0058   ~CSTAF11~  #8 // Desc icon
  WRITE_SHORT  0x0068   2             // Ext. count
  WRITE_LONG   0x006a   226           // Feat. offset
  WRITE_SHORT  0x0070   23            // Equip count
  WRITE_BYTE   0x007e   1             // Target type
  WRITE_SHORT  0x0084   4             // Speed
  WRITE_SHORT  0x0086   5             // Thac0 bonus
  WRITE_SHORT  0x008c   5             // Dice bonus
  WRITE_SHORT  0x0090   0             // Feat. count
  WRITE_SHORT  0x0092   23            // Feat. offset
  WRITE_SHORT  0x009c   1             // Effect anima
  WRITE_SHORT  0x00ca   23            // Feat. offset
  WRITE_SHORT  0x00e2   7             // Opcode
  WRITE_BYTE   0x00e4   1             // Target type
  WRITE_BYTE   0x00e5   0             // Power
  WRITE_LONG   0x00e6   27            // Parameter 1
  WRITE_LONG   0x00ea   20            // Parameter 2
  WRITE_BYTE   0x00ee   2             // Timing metho
  WRITE_BYTE   0x00ef   0             // Resistance
  WRITE_LONG   0x00f0   0             // Duration
  WRITE_BYTE   0x00f4   100           // Max. prob.
  WRITE_BYTE   0x00f5   0             // Min. prob.
  WRITE_ASCII  0x00f6   ~~         #8 // Resource
  WRITE_LONG   0x00fe   0             // Min level
  WRITE_LONG   0x0102   0             // Max level
  WRITE_LONG   0x0106   0             // S. throw typ
  WRITE_LONG   0x010a   0             // S. throw bon
  WRITE_LONG   0x010e   0             // Special
  WRITE_SHORT  0x0112   7             // Opcode
  WRITE_BYTE   0x0114   1             // Target type
  WRITE_BYTE   0x0115   0             // Power
  WRITE_LONG   0x0116   25            // Parameter 1
  WRITE_LONG   0x011a   16            // Parameter 2
  WRITE_BYTE   0x011e   2             // Timing metho
  WRITE_BYTE   0x011f   0             // Resistance
  WRITE_LONG   0x0120   0             // Duration
  WRITE_BYTE   0x0124   100           // Max. prob.
  WRITE_ASCII  0x0126   ~~         #8 // Resource
  WRITE_LONG   0x012e   0             // Min level
  WRITE_LONG   0x0132   0             // Max level
  WRITE_LONG   0x0136   0             // S. throw typ
  WRITE_LONG   0x013a   0             // S. throw bon
  WRITE_LONG   0x013e   0             // Special
  WRITE_SHORT  0x0142   33            // Opcode
  WRITE_BYTE   0x0144   1             // Target type
  WRITE_BYTE   0x0145   0             // Power
  WRITE_LONG   0x0146   2             // Parameter 1
  WRITE_LONG   0x014a   0             // Parameter 2
  WRITE_BYTE   0x014e   2             // Timing metho
  WRITE_BYTE   0x014f   0             // Resistance
  WRITE_LONG   0x0150   0             // Duration
  WRITE_BYTE   0x0154   100           // Max. prob.
  WRITE_ASCII  0x0156   ~~         #8 // Resource
  WRITE_LONG   0x015e   0             // Min level
  WRITE_LONG   0x0162   0             // Max level
  WRITE_LONG   0x0166   0             // S. throw typ
  WRITE_LONG   0x016a   0             // S. throw bon
  WRITE_LONG   0x016e   0             // Special
  WRITE_SHORT  0x0172   34            // Opcode
  WRITE_BYTE   0x0174   1             // Target type
  WRITE_BYTE   0x0175   0             // Power
  WRITE_LONG   0x0176   2             // Parameter 1
  WRITE_LONG   0x017a   0             // Parameter 2
  WRITE_BYTE   0x017e   2             // Timing metho
  WRITE_BYTE   0x017f   0             // Resistance
  WRITE_LONG   0x0180   0             // Duration
  WRITE_BYTE   0x0184   100           // Max. prob.
  WRITE_ASCII  0x0186   ~~         #8 // Resource
  WRITE_LONG   0x018e   0             // Min level
  WRITE_LONG   0x0192   0             // Max level
  WRITE_LONG   0x0196   0             // S. throw typ
  WRITE_LONG   0x019a   0             // S. throw bon
  WRITE_LONG   0x019e   0             // Special
  WRITE_SHORT  0x01a2   35            // Opcode
  WRITE_BYTE   0x01a4   1             // Target type
  WRITE_BYTE   0x01a5   0             // Power
  WRITE_LONG   0x01a6   2             // Parameter 1
  WRITE_LONG   0x01aa   0             // Parameter 2
  WRITE_BYTE   0x01ae   2             // Timing metho
  WRITE_BYTE   0x01af   0             // Resistance
  WRITE_LONG   0x01b0   0             // Duration
  WRITE_BYTE   0x01b4   100           // Max. prob.
  WRITE_ASCII  0x01b6   ~~         #8 // Resource
  WRITE_LONG   0x01be   0             // Min level
  WRITE_LONG   0x01c2   0             // Max level
  WRITE_LONG   0x01c6   0             // S. throw typ
  WRITE_LONG   0x01ca   0             // S. throw bon
  WRITE_LONG   0x01ce   0             // Special
  WRITE_SHORT  0x01d2   36            // Opcode
  WRITE_BYTE   0x01d4   1             // Target type
  WRITE_BYTE   0x01d5   0             // Power
  WRITE_LONG   0x01d6   2             // Parameter 1
  WRITE_LONG   0x01da   0             // Parameter 2
  WRITE_BYTE   0x01de   2             // Timing metho
  WRITE_BYTE   0x01df   0             // Resistance
  WRITE_LONG   0x01e0   0             // Duration
  WRITE_BYTE   0x01e4   100           // Max. prob.
  WRITE_ASCII  0x01e6   ~~         #8 // Resource
  WRITE_LONG   0x01ee   0             // Min level
  WRITE_LONG   0x01f2   0             // Max level
  WRITE_LONG   0x01f6   0             // S. throw typ
  WRITE_LONG   0x01fa   0             // S. throw bon
  WRITE_LONG   0x01fe   0             // Special
  WRITE_SHORT  0x0202   37            // Opcode
  WRITE_BYTE   0x0204   1             // Target type
  WRITE_BYTE   0x0205   0             // Power
  WRITE_LONG   0x0206   2             // Parameter 1
  WRITE_LONG   0x020a   0             // Parameter 2
  WRITE_BYTE   0x020e   2             // Timing metho
  WRITE_BYTE   0x020f   0             // Resistance
  WRITE_LONG   0x0210   0             // Duration
  WRITE_BYTE   0x0214   100           // Max. prob.
  WRITE_ASCII  0x0216   ~~         #8 // Resource
  WRITE_LONG   0x021e   0             // Min level
  WRITE_LONG   0x0222   0             // Max level
  WRITE_LONG   0x0226   0             // S. throw typ
  WRITE_LONG   0x022a   0             // S. throw bon
  WRITE_LONG   0x022e   0             // Special
  WRITE_SHORT  0x0232   20            // Opcode
  WRITE_BYTE   0x0234   1             // Target type
  WRITE_BYTE   0x0235   0             // Power
  WRITE_LONG   0x0236   0             // Parameter 1
  WRITE_LONG   0x023a   0             // Parameter 2
  WRITE_BYTE   0x023e   2             // Timing metho
  WRITE_BYTE   0x023f   0             // Resistance
  WRITE_LONG   0x0240   0             // Duration
  WRITE_BYTE   0x0244   100           // Max. prob.
  WRITE_ASCII  0x0246   ~~         #8 // Resource
  WRITE_LONG   0x024e   0             // Min level
  WRITE_LONG   0x0252   0             // Max level
  WRITE_LONG   0x0256   0             // S. throw typ
  WRITE_LONG   0x025a   0             // S. throw bon
  WRITE_LONG   0x025e   0             // Special
  WRITE_SHORT  0x0262   0             // Opcode
  WRITE_BYTE   0x0264   1             // Target type
  WRITE_BYTE   0x0265   0             // Power
  WRITE_LONG   0x0266   2             // Parameter 1
  WRITE_LONG   0x026a   0             // Parameter 2
  WRITE_BYTE   0x026e   2             // Timing metho
  WRITE_BYTE   0x026f   0             // Resistance
  WRITE_LONG   0x0270   0             // Duration
  WRITE_BYTE   0x0274   100           // Max. prob.
  WRITE_ASCII  0x0276   ~~         #8 // Resource
  WRITE_LONG   0x027e   0             // Min level
  WRITE_LONG   0x0282   0             // Max level
  WRITE_LONG   0x0286   0             // S. throw typ
  WRITE_LONG   0x028a   0             // S. throw bon
  WRITE_LONG   0x028e   0             // Special
  WRITE_SHORT  0x0292   141           // Opcode
  WRITE_BYTE   0x0294   2             // Target type
  WRITE_BYTE   0x0295   0             // Power
  WRITE_LONG   0x0296   0             // Parameter 1
  WRITE_LONG   0x029a   12            // Parameter 2
  WRITE_BYTE   0x029e   1             // Timing metho
  WRITE_BYTE   0x029f   0             // Resistance
  WRITE_LONG   0x02a0   0             // Duration
  WRITE_BYTE   0x02a4   100           // Max. prob.
  WRITE_ASCII  0x02a6   ~~         #8 // Resource
  WRITE_LONG   0x02ae   0             // Min level
  WRITE_LONG   0x02b2   0             // Max level
  WRITE_LONG   0x02b6   0             // S. throw typ
  WRITE_LONG   0x02ba   0             // S. throw bon
  WRITE_LONG   0x02be   0             // Special
  WRITE_SHORT  0x02c2   139           // Opcode
  WRITE_BYTE   0x02c4   2             // Target type
  WRITE_BYTE   0x02c5   4             // Power
  WRITE_LONG   0x02c6   14769         // Parameter 1
  WRITE_LONG   0x02ca   0             // Parameter 2
  WRITE_BYTE   0x02ce   1             // Timing metho
  WRITE_BYTE   0x02cf   0             // Resistance
  WRITE_LONG   0x02d0   0             // Duration
  WRITE_BYTE   0x02d4   100           // Max. prob.
  WRITE_ASCII  0x02d6   ~~         #8 // Resource
  WRITE_LONG   0x02de   0             // Min level
  WRITE_LONG   0x02e2   0             // Max level
  WRITE_LONG   0x02e6   0             // S. throw typ
  WRITE_LONG   0x02ea   0             // S. throw bon
  WRITE_LONG   0x02ee   0             // Special
  WRITE_SHORT  0x02f2   142           // Opcode
  WRITE_BYTE   0x02f4   1             // Target type
  WRITE_BYTE   0x02f5   4             // Power
  WRITE_LONG   0x02f6   0             // Parameter 1
  WRITE_LONG   0x02fa   9             // Parameter 2
  WRITE_BYTE   0x02fe   2             // Timing metho
  WRITE_BYTE   0x02ff   0             // Resistance
  WRITE_LONG   0x0300   0             // Duration
  WRITE_BYTE   0x0304   100           // Max. prob.
  WRITE_ASCII  0x0306   ~~         #8 // Resource
  WRITE_LONG   0x030e   0             // Min level
  WRITE_LONG   0x0312   0             // Max level
  WRITE_LONG   0x0316   0             // S. throw typ
  WRITE_LONG   0x031a   0             // S. throw bon
  WRITE_LONG   0x031e   0             // Special
  WRITE_SHORT  0x0322   9             // Opcode
  WRITE_BYTE   0x0324   1             // Target type
  WRITE_BYTE   0x0325   4             // Power
  WRITE_LONG   0x0326   1567555584    // Parameter 1
  WRITE_LONG   0x032a   1310725       // Parameter 2
  WRITE_BYTE   0x032e   2             // Timing metho
  WRITE_BYTE   0x032f   0             // Resistance
  WRITE_LONG   0x0330   0             // Duration
  WRITE_BYTE   0x0334   100           // Max. prob.
  WRITE_ASCII  0x0336   ~~         #8 // Resource
  WRITE_LONG   0x033e   0             // Min level
  WRITE_LONG   0x0342   0             // Max level
  WRITE_LONG   0x0346   0             // S. throw typ
  WRITE_LONG   0x034a   0             // S. throw bon
  WRITE_LONG   0x034e   0             // Special
  WRITE_SHORT  0x0352   9             // Opcode
  WRITE_BYTE   0x0354   1             // Target type
  WRITE_BYTE   0x0355   4             // Power
  WRITE_LONG   0x0356   1567555584    // Parameter 1
  WRITE_LONG   0x035a   1310726       // Parameter 2
  WRITE_BYTE   0x035e   2             // Timing metho
  WRITE_BYTE   0x035f   0             // Resistance
  WRITE_LONG   0x0360   0             // Duration
  WRITE_BYTE   0x0364   100           // Max. prob.
  WRITE_ASCII  0x0366   ~~         #8 // Resource
  WRITE_LONG   0x036e   0             // Min level
  WRITE_LONG   0x0372   0             // Max level
  WRITE_LONG   0x0376   0             // S. throw typ
  WRITE_LONG   0x037a   0             // S. throw bon
  WRITE_LONG   0x037e   0             // Special
  WRITE_SHORT  0x0382   9             // Opcode
  WRITE_BYTE   0x0384   1             // Target type
  WRITE_BYTE   0x0385   4             // Power
  WRITE_LONG   0x0386   1567555584    // Parameter 1
  WRITE_LONG   0x038a   1310723       // Parameter 2
  WRITE_BYTE   0x038e   2             // Timing metho
  WRITE_BYTE   0x038f   0             // Resistance
  WRITE_LONG   0x0390   0             // Duration
  WRITE_BYTE   0x0394   100           // Max. prob.
  WRITE_ASCII  0x0396   ~~         #8 // Resource
  WRITE_LONG   0x039e   0             // Min level
  WRITE_LONG   0x03a2   0             // Max level
  WRITE_LONG   0x03a6   0             // S. throw typ
  WRITE_LONG   0x03aa   0             // S. throw bon
  WRITE_LONG   0x03ae   0             // Special
  WRITE_SHORT  0x03b2   9             // Opcode
  WRITE_BYTE   0x03b4   1             // Target type
  WRITE_BYTE   0x03b5   4             // Power
  WRITE_LONG   0x03b6   1567555584    // Parameter 1
  WRITE_LONG   0x03ba   1310724       // Parameter 2
  WRITE_BYTE   0x03be   2             // Timing metho
  WRITE_BYTE   0x03bf   0             // Resistance
  WRITE_LONG   0x03c0   0             // Duration
  WRITE_BYTE   0x03c4   100           // Max. prob.
  WRITE_ASCII  0x03c6   ~~         #8 // Resource
  WRITE_LONG   0x03ce   0             // Min level
  WRITE_LONG   0x03d2   0             // Max level
  WRITE_LONG   0x03d6   0             // S. throw typ
  WRITE_LONG   0x03da   0             // S. throw bon
  WRITE_LONG   0x03de   0             // Special
  WRITE_SHORT  0x03e2   9             // Opcode
  WRITE_BYTE   0x03e4   1             // Target type
  WRITE_BYTE   0x03e5   4             // Power
  WRITE_LONG   0x03e6   1567555584    // Parameter 1
  WRITE_LONG   0x03ea   1310720       // Parameter 2
  WRITE_BYTE   0x03ee   2             // Timing metho
  WRITE_BYTE   0x03ef   0             // Resistance
  WRITE_LONG   0x03f0   0             // Duration
  WRITE_BYTE   0x03f4   100           // Max. prob.
  WRITE_ASCII  0x03f6   ~~         #8 // Resource
  WRITE_LONG   0x03fe   0             // Min level
  WRITE_LONG   0x0402   0             // Max level
  WRITE_LONG   0x0406   0             // S. throw typ
  WRITE_LONG   0x040a   0             // S. throw bon
  WRITE_LONG   0x040e   0             // Special
  WRITE_SHORT  0x0412   9             // Opcode
  WRITE_BYTE   0x0414   1             // Target type
  WRITE_BYTE   0x0415   4             // Power
  WRITE_LONG   0x0416   1567555584    // Parameter 1
  WRITE_LONG   0x041a   1310722       // Parameter 2
  WRITE_BYTE   0x041e   2             // Timing metho
  WRITE_BYTE   0x041f   0             // Resistance
  WRITE_LONG   0x0420   0             // Duration
  WRITE_BYTE   0x0424   100           // Max. prob.
  WRITE_ASCII  0x0426   ~~         #8 // Resource
  WRITE_LONG   0x042e   0             // Min level
  WRITE_LONG   0x0432   0             // Max level
  WRITE_LONG   0x0436   0             // S. throw typ
  WRITE_LONG   0x043a   0             // S. throw bon
  WRITE_LONG   0x043e   0             // Special
  WRITE_SHORT  0x0442   9             // Opcode
  WRITE_BYTE   0x0444   1             // Target type
  WRITE_BYTE   0x0445   4             // Power
  WRITE_LONG   0x0446   1567555584    // Parameter 1
  WRITE_LONG   0x044a   1310721       // Parameter 2
  WRITE_BYTE   0x044e   2             // Timing metho
  WRITE_BYTE   0x044f   0             // Resistance
  WRITE_LONG   0x0450   0             // Duration
  WRITE_BYTE   0x0454   100           // Max. prob.
  WRITE_ASCII  0x0456   ~~         #8 // Resource
  WRITE_LONG   0x045e   0             // Min level
  WRITE_LONG   0x0462   0             // Max level
  WRITE_LONG   0x0466   0             // S. throw typ
  WRITE_LONG   0x046a   0             // S. throw bon
  WRITE_LONG   0x046e   0             // Special
  WRITE_SHORT  0x0472   100           // Opcode
  WRITE_BYTE   0x0474   1             // Target type
  WRITE_BYTE   0x0475   0             // Power
  WRITE_LONG   0x0476   9             // Parameter 1
  WRITE_LONG   0x047a   7             // Parameter 2
  WRITE_BYTE   0x047e   2             // Timing metho
  WRITE_BYTE   0x047f   0             // Resistance
  WRITE_LONG   0x0480   18            // Duration
  WRITE_BYTE   0x0484   100           // Max. prob.
  WRITE_ASCII  0x0486   ~~         #8 // Resource
  WRITE_LONG   0x048e   0             // Min level
  WRITE_LONG   0x0492   0             // Max level
  WRITE_LONG   0x0496   0             // S. throw typ
  WRITE_LONG   0x049a   0             // S. throw bon
  WRITE_LONG   0x049e   0             // Special
  WRITE_SHORT  0x04a2   219           // Opcode
  WRITE_BYTE   0x04a4   1             // Target type
  WRITE_BYTE   0x04a5   0             // Power
  WRITE_LONG   0x04a6   3             // Parameter 1
  WRITE_LONG   0x04aa   8             // Parameter 2
  WRITE_BYTE   0x04ae   2             // Timing metho
  WRITE_BYTE   0x04af   0             // Resistance
  WRITE_LONG   0x04b0   18            // Duration
  WRITE_BYTE   0x04b4   100           // Max. prob.
  WRITE_ASCII  0x04b6   ~~         #8 // Resource
  WRITE_LONG   0x04be   0             // Min level
  WRITE_LONG   0x04c2   0             // Max level
  WRITE_LONG   0x04c6   0             // S. throw typ
  WRITE_LONG   0x04ca   0             // S. throw bon
  WRITE_LONG   0x04ce   0             // Special
  WRITE_SHORT  0x04d2   144           // Opcode
  WRITE_BYTE   0x04d4   1             // Target type
  WRITE_BYTE   0x04d5   0             // Power
  WRITE_LONG   0x04d6   0             // Parameter 1
  WRITE_LONG   0x04da   1             // Parameter 2
  WRITE_BYTE   0x04de   9             // Timing metho
  WRITE_BYTE   0x04df   0             // Resistance
  WRITE_LONG   0x04e0   0             // Duration
  WRITE_BYTE   0x04e4   100           // Max. prob.
  WRITE_ASCII  0x04e6   ~~         #8 // Resource
  WRITE_LONG   0x04ee   0             // Min level
  WRITE_LONG   0x04f2   0             // Max level
  WRITE_LONG   0x04f6   0             // S. throw typ
  WRITE_LONG   0x04fa   0             // S. throw bon
  WRITE_LONG   0x04fe   0             // Special
  WRITE_SHORT  0x0502   144           // Opcode
  WRITE_BYTE   0x0504   1             // Target type
  WRITE_BYTE   0x0505   0             // Power
  WRITE_LONG   0x0506   0             // Parameter 1
  WRITE_LONG   0x050a   0             // Parameter 2
  WRITE_BYTE   0x050e   9             // Timing metho
  WRITE_BYTE   0x050f   0             // Resistance
  WRITE_LONG   0x0510   0             // Duration
  WRITE_BYTE   0x0514   100           // Max. prob.
  WRITE_ASCII  0x0516   ~~         #8 // Resource
  WRITE_LONG   0x051e   0             // Min level
  WRITE_LONG   0x0522   0             // Max level
  WRITE_LONG   0x0526   0             // S. throw typ
  WRITE_LONG   0x052a   0             // S. throw bon
  WRITE_LONG   0x052e   0             // Special
  WRITE_SHORT  0x0532   146           // Opcode
  WRITE_BYTE   0x0534   2             // Target type
  WRITE_BYTE   0x0535   9             // Power
  WRITE_LONG   0x0536   10            // Parameter 1
  WRITE_LONG   0x053a   1             // Parameter 2
  WRITE_BYTE   0x053e   1             // Timing metho
  WRITE_BYTE   0x053f   1             // Resistance
  WRITE_LONG   0x0540   0             // Duration
  WRITE_BYTE   0x0544   100           // Max. prob.
  WRITE_ASCII  0x0546   ~SPWI308~  #8 // Resource
  WRITE_LONG   0x054e   0             // Min level
  WRITE_LONG   0x0552   0             // Max level
  WRITE_LONG   0x0556   0             // S. throw typ
  WRITE_LONG   0x055a   0             // S. throw bon
  WRITE_LONG   0x055e   0             // Special
  WRITE_SHORT  0x0562   146           // Opcode
  WRITE_BYTE   0x0564   2             // Target type
  WRITE_BYTE   0x0565   9             // Power
  WRITE_LONG   0x0566   10            // Parameter 1
  WRITE_LONG   0x056a   1             // Parameter 2
  WRITE_BYTE   0x056e   1             // Timing metho
  WRITE_BYTE   0x056f   1             // Resistance
  WRITE_LONG   0x0570   0             // Duration
  WRITE_BYTE   0x0574   100           // Max. prob.
  WRITE_ASCII  0x0576   ~SPWI304~  #8 // Resource
  WRITE_LONG   0x057e   0             // Min level
  WRITE_LONG   0x0582   0             // Max level
  WRITE_LONG   0x0586   0             // S. throw typ
  WRITE_LONG   0x058a   0             // S. throw bon
  WRITE_LONG   0x058e   0             // Special
  DELETE_BYTES 0x592    728
  SAY DESC     @329

COPY_EXISTING ~staf12.itm~ ~override/staf12.itm~
  WRITE_LONG   0x001e   0x60725ec0    // Usability
  WRITE_SHORT  0x0022   21329         // Animation
  WRITE_BYTE   0x0029   0             // Kit 1
  WRITE_BYTE   0x002d   34            // Kit 3
  WRITE_BYTE   0x002f   2             // Kit 4
  WRITE_ASCII  0x003a   ~ISTAF02~  #8 // Inventory
  WRITE_SHORT  0x0070   8             // Equip count
  WRITE_ASCII  0x0076   ~ISTAF02~  #8 // Use icon
  WRITE_SHORT  0x0092   8             // Feat. offset
  WRITE_SHORT  0x0096   3             // Drain type
  WRITE_SHORT  0x00ca   8             // Feat. offset
  WRITE_ASCII  0x00e6   ~SPWI406B~ #8 // Use icon
  WRITE_SHORT  0x0102   11            // Feat. offset
  WRITE_LONG   0x014e   25            // Parameter 1
  WRITE_LONG   0x0152   16            // Parameter 2
  WRITE_SHORT  0x017a   33            // Opcode
  WRITE_LONG   0x017e   2             // Parameter 1
  WRITE_LONG   0x0182   0             // Parameter 2
  WRITE_SHORT  0x01aa   34            // Opcode
  WRITE_LONG   0x01ae   2             // Parameter 1
  WRITE_LONG   0x01b2   0             // Parameter 2
  WRITE_SHORT  0x01da   35            // Opcode
  WRITE_LONG   0x01de   2             // Parameter 1
  WRITE_LONG   0x01e2   0             // Parameter 2
  WRITE_SHORT  0x020a   36            // Opcode
  WRITE_SHORT  0x023a   37            // Opcode
  WRITE_SHORT  0x026a   0             // Opcode
  WRITE_SHORT  0x029a   146           // Opcode
  WRITE_BYTE   0x029c   2             // Target type
  WRITE_BYTE   0x029d   3             // Power
  WRITE_LONG   0x029e   10            // Parameter 1
  WRITE_BYTE   0x02a6   1             // Timing metho
  WRITE_BYTE   0x02a7   1             // Resistance
  WRITE_ASCII  0x02ae   ~SPWI308~  #8 // Resource
  WRITE_SHORT  0x02ca   142           // Opcode
  WRITE_BYTE   0x02cc   2             // Target type
  WRITE_LONG   0x02ce   0             // Parameter 1
  WRITE_LONG   0x02d2   55            // Parameter 2
  WRITE_BYTE   0x02d6   0             // Timing metho
  WRITE_BYTE   0x02d7   1             // Resistance
  WRITE_LONG   0x02d8   30            // Duration
  WRITE_SHORT  0x02fa   45            // Opcode
  WRITE_BYTE   0x02fc   2             // Target type
  WRITE_LONG   0x02fe   0             // Parameter 1
  WRITE_BYTE   0x0306   0             // Timing metho
  WRITE_BYTE   0x0307   1             // Resistance
  WRITE_LONG   0x0308   30            // Duration
  WRITE_BYTE   0x032c   1             // Target type
  WRITE_BYTE   0x0337   2             // Resistance
  WRITE_ASCII  0x033e   ~SPWI602~  #8 // Resource
  DELETE_BYTES 0x35a    144

COPY_EXISTING ~staf14.itm~ ~override/staf14.itm~
  WRITE_SHORT  0x0022   21329         // Animation
  WRITE_BYTE   0x0029   0             // Kit 1
  WRITE_SHORT  0x0068   2             // Ext. count
  WRITE_LONG   0x006a   226           // Feat. offset
  WRITE_SHORT  0x0070   9             // Equip count
  WRITE_SHORT  0x0092   9             // Feat. offset
  WRITE_ASCII  0x00ae   ~SPPR702B~ #8 // Use icon
  WRITE_BYTE   0x00b6   4             // Target type
  WRITE_SHORT  0x00c0   6             // Dice size
  WRITE_SHORT  0x00c2   0             // Dice count
  WRITE_SHORT  0x00c8   2             // Feat. count
  WRITE_SHORT  0x00ca   9             // Feat. offset
  WRITE_SHORT  0x00e2   7             // Opcode
  WRITE_BYTE   0x00e4   1             // Target type
  WRITE_BYTE   0x00e5   0             // Power
  WRITE_LONG   0x00e6   39            // Parameter 1
  WRITE_LONG   0x00ea   20            // Parameter 2
  WRITE_BYTE   0x00ee   2             // Timing metho
  WRITE_BYTE   0x00ef   0             // Resistance
  WRITE_LONG   0x00f0   0             // Duration
  WRITE_BYTE   0x00f4   100           // Max. prob.
  WRITE_BYTE   0x00f5   0             // Min. prob.
  WRITE_ASCII  0x00f6   ~~         #8 // Resource
  WRITE_LONG   0x00fe   0             // Min level
  WRITE_LONG   0x0102   0             // Max level
  WRITE_LONG   0x0106   0             // S. throw typ
  WRITE_LONG   0x010a   0             // S. throw bon
  WRITE_LONG   0x010e   0             // Special
  WRITE_SHORT  0x0112   7             // Opcode
  WRITE_BYTE   0x0114   1             // Target type
  WRITE_BYTE   0x0115   0             // Power
  WRITE_LONG   0x0116   39            // Parameter 1
  WRITE_LONG   0x011a   16            // Parameter 2
  WRITE_BYTE   0x011e   2             // Timing metho
  WRITE_BYTE   0x011f   0             // Resistance
  WRITE_LONG   0x0120   0             // Duration
  WRITE_BYTE   0x0124   100           // Max. prob.
  WRITE_ASCII  0x0126   ~~         #8 // Resource
  WRITE_LONG   0x012e   0             // Min level
  WRITE_LONG   0x0132   0             // Max level
  WRITE_LONG   0x0136   0             // S. throw typ
  WRITE_LONG   0x013a   0             // S. throw bon
  WRITE_LONG   0x013e   0             // Special
  WRITE_SHORT  0x0142   0             // Opcode
  WRITE_BYTE   0x0144   1             // Target type
  WRITE_BYTE   0x0145   0             // Power
  WRITE_LONG   0x0146   3             // Parameter 1
  WRITE_LONG   0x014a   16            // Parameter 2
  WRITE_BYTE   0x014e   2             // Timing metho
  WRITE_BYTE   0x014f   0             // Resistance
  WRITE_LONG   0x0150   0             // Duration
  WRITE_BYTE   0x0154   100           // Max. prob.
  WRITE_ASCII  0x0156   ~~         #8 // Resource
  WRITE_LONG   0x015e   0             // Min level
  WRITE_LONG   0x0162   0             // Max level
  WRITE_LONG   0x0166   0             // S. throw typ
  WRITE_LONG   0x016a   0             // S. throw bon
  WRITE_LONG   0x016e   0             // Special
  WRITE_SHORT  0x0172   142           // Opcode
  WRITE_BYTE   0x0174   1             // Target type
  WRITE_BYTE   0x0175   0             // Power
  WRITE_LONG   0x0176   0             // Parameter 1
  WRITE_LONG   0x017a   20            // Parameter 2
  WRITE_BYTE   0x017e   2             // Timing metho
  WRITE_BYTE   0x017f   0             // Resistance
  WRITE_LONG   0x0180   0             // Duration
  WRITE_BYTE   0x0184   100           // Max. prob.
  WRITE_ASCII  0x0186   ~~         #8 // Resource
  WRITE_LONG   0x018e   0             // Min level
  WRITE_LONG   0x0192   0             // Max level
  WRITE_LONG   0x0196   0             // S. throw typ
  WRITE_LONG   0x019a   0             // S. throw bon
  WRITE_LONG   0x019e   0             // Special
  WRITE_SHORT  0x01a2   33            // Opcode
  WRITE_BYTE   0x01a4   1             // Target type
  WRITE_BYTE   0x01a5   2             // Power
  WRITE_LONG   0x01a6   1             // Parameter 1
  WRITE_LONG   0x01aa   0             // Parameter 2
  WRITE_BYTE   0x01ae   2             // Timing metho
  WRITE_BYTE   0x01af   0             // Resistance
  WRITE_LONG   0x01b0   0             // Duration
  WRITE_BYTE   0x01b4   100           // Max. prob.
  WRITE_ASCII  0x01b6   ~~         #8 // Resource
  WRITE_LONG   0x01be   0             // Min level
  WRITE_LONG   0x01c2   0             // Max level
  WRITE_LONG   0x01c6   0             // S. throw typ
  WRITE_LONG   0x01ca   0             // S. throw bon
  WRITE_LONG   0x01ce   0             // Special
  WRITE_SHORT  0x01d2   34            // Opcode
  WRITE_BYTE   0x01d4   1             // Target type
  WRITE_BYTE   0x01d5   2             // Power
  WRITE_LONG   0x01d6   1             // Parameter 1
  WRITE_LONG   0x01da   0             // Parameter 2
  WRITE_BYTE   0x01de   2             // Timing metho
  WRITE_BYTE   0x01df   0             // Resistance
  WRITE_LONG   0x01e0   0             // Duration
  WRITE_BYTE   0x01e4   100           // Max. prob.
  WRITE_ASCII  0x01e6   ~~         #8 // Resource
  WRITE_LONG   0x01ee   0             // Min level
  WRITE_LONG   0x01f2   0             // Max level
  WRITE_LONG   0x01f6   0             // S. throw typ
  WRITE_LONG   0x01fa   0             // S. throw bon
  WRITE_LONG   0x01fe   0             // Special
  WRITE_SHORT  0x0202   35            // Opcode
  WRITE_BYTE   0x0204   1             // Target type
  WRITE_BYTE   0x0205   2             // Power
  WRITE_LONG   0x0206   1             // Parameter 1
  WRITE_LONG   0x020a   0             // Parameter 2
  WRITE_BYTE   0x020e   2             // Timing metho
  WRITE_BYTE   0x020f   0             // Resistance
  WRITE_LONG   0x0210   0             // Duration
  WRITE_BYTE   0x0214   100           // Max. prob.
  WRITE_ASCII  0x0216   ~~         #8 // Resource
  WRITE_LONG   0x021e   0             // Min level
  WRITE_LONG   0x0222   0             // Max level
  WRITE_LONG   0x0226   0             // S. throw typ
  WRITE_LONG   0x022a   0             // S. throw bon
  WRITE_LONG   0x022e   0             // Special
  WRITE_SHORT  0x0232   36            // Opcode
  WRITE_BYTE   0x0234   1             // Target type
  WRITE_BYTE   0x0235   2             // Power
  WRITE_LONG   0x0236   1             // Parameter 1
  WRITE_LONG   0x023a   0             // Parameter 2
  WRITE_BYTE   0x023e   2             // Timing metho
  WRITE_BYTE   0x023f   0             // Resistance
  WRITE_LONG   0x0240   0             // Duration
  WRITE_BYTE   0x0244   100           // Max. prob.
  WRITE_ASCII  0x0246   ~~         #8 // Resource
  WRITE_LONG   0x024e   0             // Min level
  WRITE_LONG   0x0252   0             // Max level
  WRITE_LONG   0x0256   0             // S. throw typ
  WRITE_LONG   0x025a   0             // S. throw bon
  WRITE_LONG   0x025e   0             // Special
  WRITE_SHORT  0x0262   0             // Opcode
  WRITE_BYTE   0x0264   1             // Target type
  WRITE_BYTE   0x0265   0             // Power
  WRITE_LONG   0x0266   3             // Parameter 1
  WRITE_LONG   0x026a   0             // Parameter 2
  WRITE_BYTE   0x026e   2             // Timing metho
  WRITE_BYTE   0x026f   0             // Resistance
  WRITE_LONG   0x0270   0             // Duration
  WRITE_BYTE   0x0274   100           // Max. prob.
  WRITE_ASCII  0x0276   ~~         #8 // Resource
  WRITE_LONG   0x027e   0             // Min level
  WRITE_LONG   0x0282   0             // Max level
  WRITE_LONG   0x0286   0             // S. throw typ
  WRITE_LONG   0x028a   0             // S. throw bon
  WRITE_LONG   0x028e   0             // Special
  WRITE_SHORT  0x0292   174           // Opcode
  WRITE_BYTE   0x0294   1             // Target type
  WRITE_BYTE   0x0295   0             // Power
  WRITE_LONG   0x0296   0             // Parameter 1
  WRITE_LONG   0x029a   0             // Parameter 2
  WRITE_BYTE   0x029e   1             // Timing metho
  WRITE_BYTE   0x029f   0             // Resistance
  WRITE_LONG   0x02a0   0             // Duration
  WRITE_BYTE   0x02a4   100           // Max. prob.
  WRITE_ASCII  0x02a6   ~EFF_M13~  #8 // Resource
  WRITE_LONG   0x02ae   0             // Min level
  WRITE_LONG   0x02b2   0             // Max level
  WRITE_LONG   0x02b6   0             // S. throw typ
  WRITE_LONG   0x02ba   0             // S. throw bon
  WRITE_LONG   0x02be   0             // Special
  WRITE_SHORT  0x02c2   177           // Opcode
  WRITE_BYTE   0x02c4   1             // Target type
  WRITE_BYTE   0x02c5   0             // Power
  WRITE_LONG   0x02c6   0             // Parameter 1
  WRITE_LONG   0x02ca   2             // Parameter 2
  WRITE_BYTE   0x02ce   0             // Timing metho
  WRITE_BYTE   0x02cf   0             // Resistance
  WRITE_LONG   0x02d0   100           // Duration
  WRITE_BYTE   0x02d4   100           // Max. prob.
  WRITE_ASCII  0x02d6   ~MOUND~    #8 // Resource
  WRITE_LONG   0x02de   0             // Min level
  WRITE_LONG   0x02e2   0             // Max level
  WRITE_LONG   0x02e6   0             // S. throw typ
  WRITE_LONG   0x02ea   0             // S. throw bon
  WRITE_LONG   0x02ee   0             // Special
  SET bytes_to_remove = SOURCE_SIZE - 0x2f2
  DELETE_BYTES 0x2f2    bytes_to_remove

COPY_EXISTING ~staf15.itm~ ~override/staf15.itm~
  WRITE_SHORT  0x0022   21329         // Animation
  WRITE_SHORT  0x0070   2             // Equip count
  WRITE_SHORT  0x0092   2             // Feat. offset
  WRITE_SHORT  0x00c8   2             // Feat. count
  WRITE_SHORT  0x00ca   4             // Feat. offset
  WRITE_SHORT  0x00d4   95            // Effect anima
  WRITE_SHORT  0x0102   6             // Feat. offset
  WRITE_SHORT  0x0104   20            // Charges
  WRITE_LONG   0x0108   0             // Flags
  WRITE_LONG   0x014e   25            // Parameter 1
  WRITE_LONG   0x0152   16            // Parameter 2
  WRITE_SHORT  0x017a   55            // Opcode
  WRITE_BYTE   0x017c   2             // Target type
  WRITE_LONG   0x017e   186           // Parameter 1
  WRITE_LONG   0x0182   5             // Parameter 2
  WRITE_BYTE   0x0186   1             // Timing metho
  WRITE_BYTE   0x0187   2             // Resistance
  WRITE_LONG   0x019e   1             // S. throw typ
  WRITE_SHORT  0x01aa   174           // Opcode
  WRITE_BYTE   0x01ac   2             // Target type
  WRITE_LONG   0x01ae   0             // Parameter 1
  WRITE_LONG   0x01b2   0             // Parameter 2
  WRITE_BYTE   0x01b6   1             // Timing metho
  WRITE_BYTE   0x01b7   2             // Resistance
  WRITE_ASCII  0x01be   ~EFF_M36B~ #8 // Resource
  WRITE_LONG   0x01ce   1             // S. throw typ
  WRITE_SHORT  0x01da   39            // Opcode
  WRITE_BYTE   0x01dc   2             // Target type
  WRITE_LONG   0x01de   0             // Parameter 1
  WRITE_LONG   0x01e2   0             // Parameter 2
  WRITE_BYTE   0x01e6   0             // Timing metho
  WRITE_BYTE   0x01e7   1             // Resistance
  WRITE_LONG   0x01e8   18            // Duration
  WRITE_LONG   0x01fe   4             // S. throw typ
  WRITE_SHORT  0x020a   142           // Opcode
  WRITE_LONG   0x020e   0             // Parameter 1
  WRITE_LONG   0x0212   14            // Parameter 2
  WRITE_BYTE   0x0216   0             // Timing metho
  WRITE_BYTE   0x0217   1             // Resistance
  WRITE_LONG   0x0218   18            // Duration
  WRITE_LONG   0x022e   4             // S. throw typ
  WRITE_BYTE   0x023c   1             // Target type
  WRITE_BYTE   0x0246   0             // Timing metho
  WRITE_BYTE   0x0247   0             // Resistance
  WRITE_ASCII  0x024e   ~EFF_M26~  #8 // Resource
  WRITE_LONG   0x025e   0             // S. throw typ
  WRITE_BYTE   0x026c   1             // Target type
  WRITE_LONG   0x026e   0             // Parameter 1
  WRITE_LONG   0x0272   2             // Parameter 2
  WRITE_LONG   0x0278   300           // Duration
  WRITE_BYTE   0x027c   100           // Max. prob.
  WRITE_ASCII  0x027e   ~STAF15~   #8 // Resource
  SET bytes_to_remove = SOURCE_SIZE - 0x29a
  DELETE_BYTES 0x29a    bytes_to_remove

COPY_EXISTING ~sw1h06.itm~ ~override/sw1h06.itm~
  WRITE_ASCII  0x003a   ~ISW1H06~  #8 // Inventory
  WRITE_SHORT  0x0042   0             // Lore to ID
  WRITE_ASCII  0x0076   ~ISW1H06~  #8 // Use icon
  WRITE_LONG   0x00ae   6             // Parameter 1
  WRITE_LONG   0x00b2   21            // Parameter 2
  WRITE_LONG   0x00de   93            // Parameter 1
  WRITE_LONG   0x00e2   20            // Parameter 2
  WRITE_LONG   0x010e   50            // Parameter 1

COPY_EXISTING ~sw1h25.itm~ ~override/sw1h25.itm~
  WRITE_SHORT  0x013a   15            // Opcode
  SAY DESC     @9016

COPY_EXISTING ~sw1h26.itm~ ~override/sw1h26.itm~
  WRITE_SHORT  0x0084   1             // Speed
  WRITE_SHORT  0x00c0   6             // Dice size
  WRITE_SHORT  0x00c2   0             // Dice count
  WRITE_SHORT  0x00c8   1             // Feat. count
  WRITE_LONG   0x00e6   27            // Parameter 1
  WRITE_LONG   0x00ea   21            // Parameter 2
  WRITE_LONG   0x0116   93            // Parameter 1
  WRITE_LONG   0x011a   20            // Parameter 2
  WRITE_SHORT  0x0172   146           // Opcode
  WRITE_BYTE   0x0175   0             // Power
  WRITE_LONG   0x0176   10            // Parameter 1
  WRITE_LONG   0x017a   1             // Parameter 2
  WRITE_BYTE   0x017e   1             // Timing metho
  WRITE_BYTE   0x017f   0             // Resistance
  WRITE_LONG   0x0180   0             // Duration
  WRITE_ASCII  0x0186   ~SPWI212~  #8 // Resource
  DELETE_BYTES 0x1a2    48

COPY_EXISTING ~sw1h27.itm~ ~override/sw1h27.itm~
  WRITE_SHORT  0x0070   11            // Equip count
  WRITE_SHORT  0x0092   11            // Feat. offset
  WRITE_SHORT  0x00c0   6             // Dice size
  WRITE_SHORT  0x00c2   0             // Dice count
  WRITE_SHORT  0x00ca   11            // Feat. offset
  WRITE_SHORT  0x00e2   7             // Opcode
  WRITE_LONG   0x00e6   33            // Parameter 1
  WRITE_LONG   0x011a   20            // Parameter 2
  WRITE_LONG   0x0146   25            // Parameter 1
  WRITE_LONG   0x014a   16            // Parameter 2
  WRITE_SHORT  0x0172   206           // Opcode
  WRITE_LONG   0x0176   0             // Parameter 1
  WRITE_LONG   0x017a   0             // Parameter 2
  WRITE_ASCII  0x0186   ~SPPR989~  #8 // Resource
  WRITE_SHORT  0x01a2   206           // Opcode
  WRITE_LONG   0x01aa   0             // Parameter 2
  WRITE_BYTE   0x01af   0             // Resistance
  WRITE_ASCII  0x01b6   ~SPPR208~  #8 // Resource
  WRITE_SHORT  0x01d2   206           // Opcode
  WRITE_LONG   0x01da   0             // Parameter 2
  WRITE_BYTE   0x01df   0             // Resistance
  WRITE_ASCII  0x01e6   ~SPWI306~  #8 // Resource
  WRITE_SHORT  0x0202   206           // Opcode
  WRITE_LONG   0x0206   0             // Parameter 1
  WRITE_LONG   0x020a   0             // Parameter 2
  WRITE_BYTE   0x020f   0             // Resistance
  WRITE_ASCII  0x0216   ~SPIN988~  #8 // Resource
  WRITE_SHORT  0x0262   169           // Opcode
  WRITE_LONG   0x026a   13            // Parameter 2
  WRITE_BYTE   0x026f   0             // Resistance
  WRITE_SHORT  0x0292   101           // Opcode
  WRITE_LONG   0x029a   175           // Parameter 2
  WRITE_BYTE   0x029f   0             // Resistance
  WRITE_SHORT  0x02c2   267           // Opcode
  WRITE_LONG   0x02c6   14102         // Parameter 1
  WRITE_LONG   0x02ca   0             // Parameter 2
  WRITE_BYTE   0x02cf   0             // Resistance
  WRITE_SHORT  0x02f2   16            // Opcode
  WRITE_BYTE   0x02f5   3             // Power
  WRITE_LONG   0x02fa   0             // Parameter 2
  WRITE_BYTE   0x02fe   0             // Timing metho
  WRITE_BYTE   0x02ff   3             // Resistance
  WRITE_LONG   0x0300   12            // Duration
  WRITE_SHORT  0x0322   141           // Opcode
  WRITE_LONG   0x032a   4             // Parameter 2
  WRITE_BYTE   0x032e   1             // Timing metho
  WRITE_BYTE   0x032f   3             // Resistance
  WRITE_LONG   0x0330   0             // Duration
  WRITE_SHORT  0x0352   139           // Opcode
  WRITE_LONG   0x0356   14023         // Parameter 1
  WRITE_LONG   0x035a   0             // Parameter 2
  WRITE_BYTE   0x035f   3             // Resistance
  WRITE_SHORT  0x0382   142           // Opcode
  WRITE_LONG   0x0386   0             // Parameter 1
  WRITE_LONG   0x038a   38            // Parameter 2
  WRITE_BYTE   0x038e   0             // Timing metho
  WRITE_BYTE   0x038f   3             // Resistance
  WRITE_LONG   0x0390   12            // Duration
  WRITE_SHORT  0x03b2   174           // Opcode
  WRITE_LONG   0x03ba   0             // Parameter 2
  WRITE_BYTE   0x03bf   3             // Resistance
  WRITE_LONG   0x03c0   0             // Duration
  WRITE_ASCII  0x03c6   ~EFF_M28~  #8 // Resource
  WRITE_BYTE   0x03ee   4             // Timing metho
  WRITE_BYTE   0x03ef   3             // Resistance
  WRITE_LONG   0x03f0   12            // Duration
  WRITE_ASCII  0x03f6   ~EFF_M29~  #8 // Resource
  DELETE_BYTES 0x412    48

COPY_EXISTING ~sw1h34.itm~ ~override/sw1h34.itm~
  WRITE_SHORT  0x0022   12627         // Animation
  WRITE_LONG   0x0034   2500          // Price
  WRITE_SHORT  0x0068   3             // Ext. count
  WRITE_LONG   0x006a   282           // Feat. offset
  WRITE_SHORT  0x0070   3             // Equip count
  WRITE_SHORT  0x0092   3             // Feat. offset
  WRITE_SHORT  0x00c0   6             // Dice size
  WRITE_SHORT  0x00c2   0             // Dice count
  WRITE_SHORT  0x00c8   1             // Feat. count
  WRITE_SHORT  0x00ca   3             // Feat. offset
  WRITE_SHORT  0x00d4   1             // Effect anima
  WRITE_BYTE   0x00e2   3             // Attacktype
  WRITE_BYTE   0x00e3   1             // Force ID
  WRITE_SHORT  0x00e4   3             // Use location
  WRITE_ASCII  0x00e6   ~SPPR404B~ #8 // Use icon
  WRITE_BYTE   0x00ee   1             // Target type
  WRITE_BYTE   0x00ef   0             // Target #
  WRITE_SHORT  0x00f0   1             // Range
  WRITE_SHORT  0x00f2   0             // Proj. type
  WRITE_SHORT  0x00f4   0             // Speed
  WRITE_SHORT  0x00f6   0             // Thac0 bonus
  WRITE_SHORT  0x00f8   6             // Dice size
  WRITE_SHORT  0x00fa   0             // Dice count
  WRITE_SHORT  0x00fc   0             // Dice bonus
  WRITE_SHORT  0x00fe   1             // Damagetype
  WRITE_SHORT  0x0100   1             // Feat. count
  WRITE_SHORT  0x0102   4             // Feat. offset
  WRITE_SHORT  0x0106   3             // Drain type
  WRITE_LONG   0x0108   2048          // Flags
  WRITE_SHORT  0x010c   1             // Effect anima
  WRITE_SHORT  0x010e   34            // Melee anim 1
  WRITE_SHORT  0x0110   33            // Melee anim 2
  WRITE_SHORT  0x0112   33            // Melee anim 3
  WRITE_SHORT  0x0114   0             // Bow
  WRITE_SHORT  0x0116   0             // Crossbow
  WRITE_SHORT  0x0118   0             // Throwing
  WRITE_SHORT  0x011a   7             // Opcode
  WRITE_BYTE   0x011c   1             // Target type
  WRITE_BYTE   0x011d   0             // Power
  WRITE_LONG   0x011e   27            // Parameter 1
  WRITE_LONG   0x0122   21            // Parameter 2
  WRITE_BYTE   0x0126   2             // Timing metho
  WRITE_LONG   0x0128   0             // Duration
  WRITE_BYTE   0x012c   100           // Max. prob.
  WRITE_BYTE   0x012d   0             // Min. prob.
  WRITE_ASCII  0x012e   ~~         #8 // Resource
  WRITE_LONG   0x0136   0             // Min level
  WRITE_LONG   0x013a   0             // Max level
  WRITE_LONG   0x013e   0             // S. throw typ
  WRITE_LONG   0x0142   0             // S. throw bon
  WRITE_LONG   0x0146   0             // Special
  WRITE_SHORT  0x014a   7             // Opcode
  WRITE_BYTE   0x014c   1             // Target type
  WRITE_BYTE   0x014d   0             // Power
  WRITE_LONG   0x014e   57            // Parameter 1
  WRITE_LONG   0x0152   20            // Parameter 2
  WRITE_BYTE   0x0156   2             // Timing metho
  WRITE_LONG   0x0158   0             // Duration
  WRITE_BYTE   0x015c   100           // Max. prob.
  WRITE_BYTE   0x015d   0             // Min. prob.
  WRITE_ASCII  0x015e   ~~         #8 // Resource
  WRITE_LONG   0x0166   0             // Min level
  WRITE_LONG   0x016a   0             // Max level
  WRITE_LONG   0x016e   0             // S. throw typ
  WRITE_LONG   0x0172   0             // S. throw bon
  WRITE_LONG   0x0176   0             // Special
  WRITE_SHORT  0x017a   7             // Opcode
  WRITE_BYTE   0x017c   1             // Target type
  WRITE_BYTE   0x017d   0             // Power
  WRITE_LONG   0x017e   25            // Parameter 1
  WRITE_LONG   0x0182   16            // Parameter 2
  WRITE_BYTE   0x0186   2             // Timing metho
  WRITE_LONG   0x0188   0             // Duration
  WRITE_BYTE   0x018c   100           // Max. prob.
  WRITE_BYTE   0x018d   0             // Min. prob.
  WRITE_ASCII  0x018e   ~~         #8 // Resource
  WRITE_LONG   0x0196   0             // Min level
  WRITE_LONG   0x019a   0             // Max level
  WRITE_LONG   0x019e   0             // S. throw typ
  WRITE_LONG   0x01a2   0             // S. throw bon
  WRITE_LONG   0x01a6   0             // Special
  WRITE_SHORT  0x01aa   146           // Opcode
  WRITE_BYTE   0x01ac   2             // Target type
  WRITE_BYTE   0x01ad   0             // Power
  WRITE_LONG   0x01ae   10            // Parameter 1
  WRITE_LONG   0x01b2   1             // Parameter 2
  WRITE_BYTE   0x01b6   1             // Timing metho
  WRITE_LONG   0x01b8   0             // Duration
  WRITE_BYTE   0x01bc   100           // Max. prob.
  WRITE_BYTE   0x01bd   0             // Min. prob.
  WRITE_ASCII  0x01be   ~SPWI203~  #8 // Resource
  WRITE_LONG   0x01c6   0             // Min level
  WRITE_LONG   0x01ca   0             // Max level
  WRITE_LONG   0x01ce   0             // S. throw typ
  WRITE_LONG   0x01d2   0             // S. throw bon
  WRITE_LONG   0x01d6   0             // Special
  WRITE_SHORT  0x01da   146           // Opcode
  WRITE_BYTE   0x01dc   2             // Target type
  WRITE_BYTE   0x01dd   0             // Power
  WRITE_LONG   0x01de   10            // Parameter 1
  WRITE_LONG   0x01e2   1             // Parameter 2
  WRITE_BYTE   0x01e6   1             // Timing metho
  WRITE_LONG   0x01e8   0             // Duration
  WRITE_BYTE   0x01ec   100           // Max. prob.
  WRITE_BYTE   0x01ed   0             // Min. prob.
  WRITE_ASCII  0x01ee   ~SPPR404~  #8 // Resource
  WRITE_LONG   0x01f6   0             // Min level
  WRITE_LONG   0x01fa   0             // Max level
  WRITE_LONG   0x01fe   0             // S. throw typ
  WRITE_LONG   0x0202   0             // S. throw bon
  WRITE_LONG   0x0206   0             // Special
  SET bytes_to_remove = SOURCE_SIZE - 0x20a
  DELETE_BYTES 0x20a    bytes_to_remove
  SAY DESC     @9058

  WRITE_SHORT  0x104    1             // Charges

COPY_EXISTING ~sw1h36.itm~ ~override/sw1h36.itm~
  WRITE_ASCII  0x00ae   ~SPPR401B~ #8 // Use icon
  WRITE_BYTE   0x00b6   1             // Target type
  WRITE_SHORT  0x00b8   1             // Range
  WRITE_SHORT  0x00c0   6             // Dice size
  WRITE_SHORT  0x00c2   0             // Dice count
  WRITE_SHORT  0x00c8   1             // Feat. count
  WRITE_SHORT  0x00cc   1             // Charges
  WRITE_SHORT  0x00d4   1             // Effect anima
  WRITE_SHORT  0x0172   146           // Opcode
  WRITE_BYTE   0x0175   4             // Power
  WRITE_LONG   0x0176   10            // Parameter 1
  WRITE_LONG   0x017a   1             // Parameter 2
  WRITE_BYTE   0x017e   1             // Timing metho
  WRITE_BYTE   0x017f   0             // Resistance
  WRITE_LONG   0x0180   0             // Duration
  WRITE_ASCII  0x0186   ~SPPR401~  #8 // Resource
  WRITE_LONG   0x0196   0             // S. throw typ
  WRITE_LONG   0x019a   0             // S. throw bon
  DELETE_BYTES 0x1a2    240
  SAY DESC     @9082

COPY_EXISTING ~sw1h51.itm~ ~override/sw1h51.itm~
  WRITE_SHORT  0x00c8   3             // Feat. count
  WRITE_SHORT  0x0102   10            // Feat. offset
  WRITE_SHORT  0x011a   7             // Opcode
  WRITE_LONG   0x011e   16            // Parameter 1
  WRITE_LONG   0x017e   25            // Parameter 1
  WRITE_LONG   0x0182   16            // Parameter 2
  WRITE_SHORT  0x01aa   9             // Opcode
  WRITE_LONG   0x01ae   1743709440    // Parameter 1
  WRITE_LONG   0x01b2   5898261       // Parameter 2
  WRITE_BYTE   0x01e7   1             // Resistance
  WRITE_BYTE   0x01ec   20            // Max. prob.
  WRITE_BYTE   0x0247   1             // Resistance
  WRITE_BYTE   0x024c   20            // Max. prob.
  WRITE_SHORT  0x026a   74            // Opcode
  WRITE_BYTE   0x026c   8             // Target type
  WRITE_BYTE   0x026d   0             // Power
  WRITE_LONG   0x026e   0             // Parameter 1
  WRITE_SHORT  0x029a   142           // Opcode
  WRITE_BYTE   0x029c   8             // Target type
  WRITE_BYTE   0x029d   0             // Power
  WRITE_LONG   0x02a2   8             // Parameter 2
  WRITE_SHORT  0x02ca   141           // Opcode
  WRITE_BYTE   0x02cd   0             // Power
  WRITE_LONG   0x02d2   18            // Parameter 2
  WRITE_BYTE   0x02d6   9             // Timing metho
  WRITE_LONG   0x02d8   0             // Duration
  WRITE_SHORT  0x02fa   146           // Opcode
  WRITE_LONG   0x02fe   1             // Parameter 1
  WRITE_LONG   0x0302   0             // Parameter 2
  WRITE_ASCII  0x030e   ~SpIn714~  #8 // Resource
  WRITE_LONG   0x031e   0             // S. throw typ
  SET bytes_to_remove = SOURCE_SIZE - 0x32a
  DELETE_BYTES 0x32a    bytes_to_remove
  SAY DESC     @298

COPY_EXISTING ~sw1h58.itm~ ~override/sw1h58.itm~
  WRITE_SHORT  0x0090   4             // Feat. count
  WRITE_BYTE   0x016d   1             // Power
  WRITE_BYTE   0x017c   10            // Max. prob.
  WRITE_BYTE   0x019d   1             // Power
  WRITE_BYTE   0x01ac   10            // Max. prob.
  WRITE_BYTE   0x01cd   1             // Power
  WRITE_BYTE   0x01dc   10            // Max. prob.
  WRITE_BYTE   0x01fd   1             // Power
  WRITE_BYTE   0x020c   10            // Max. prob.
  DELETE_BYTES 0x22a    96

COPY_EXISTING ~sw1h59.itm~ ~override/sw1h59.itm~
  WRITE_LONG   0x0034   38000         // Price
  WRITE_ASCII  0x003a   ~ISW1H58~  #8 // Inventory
  WRITE_ASCII  0x0076   ~ISW1H58~  #8 // Use icon
  WRITE_SHORT  0x0090   4             // Feat. count
  WRITE_BYTE   0x016d   1             // Power
  WRITE_BYTE   0x019d   1             // Power
  WRITE_BYTE   0x01cd   1             // Power
  WRITE_BYTE   0x01fd   1             // Power
  DELETE_BYTES 0x22a    240

COPY_EXISTING ~sw1h61.itm~ ~override/sw1h61.itm~
  WRITE_ASCII  0x003a   ~ISW1H60~  #8 // Inventory
  WRITE_SHORT  0x0070   15            // Equip count
  WRITE_ASCII  0x0076   ~ISW1H60~  #8 // Use icon
  WRITE_SHORT  0x0092   15            // Feat. offset
  WRITE_SHORT  0x00aa   7             // Opcode
  WRITE_LONG   0x00ae   115           // Parameter 1
  WRITE_LONG   0x00b2   21            // Parameter 2
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_LONG   0x00e2   20            // Parameter 2
  WRITE_LONG   0x010e   12            // Parameter 1
  WRITE_LONG   0x0112   16            // Parameter 2
  WRITE_SHORT  0x013a   9             // Opcode
  WRITE_LONG   0x013e   16384         // Parameter 1
  WRITE_LONG   0x0142   1310741       // Parameter 2
  WRITE_LONG   0x0148   3             // Duration
  WRITE_LONG   0x0172   1310725       // Parameter 2
  WRITE_LONG   0x019e   0             // Parameter 1
  WRITE_LONG   0x01a2   1310740       // Parameter 2
  WRITE_SHORT  0x01ca   44            // Opcode
  WRITE_LONG   0x01ce   22            // Parameter 1
  WRITE_LONG   0x01d2   1             // Parameter 2
  WRITE_BYTE   0x01d7   2             // Resistance
  WRITE_LONG   0x01d8   0             // Duration
  WRITE_SHORT  0x01fa   101           // Opcode
  WRITE_LONG   0x01fe   0             // Parameter 1
  WRITE_LONG   0x0202   216           // Parameter 2
  WRITE_SHORT  0x022a   142           // Opcode
  WRITE_LONG   0x0232   90            // Parameter 2
  WRITE_LONG   0x0262   21            // Parameter 2
  WRITE_SHORT  0x028a   267           // Opcode
  WRITE_BYTE   0x028d   4             // Power
  WRITE_LONG   0x028e   41495         // Parameter 1
  WRITE_LONG   0x0292   0             // Parameter 2
  WRITE_LONG   0x0298   30            // Duration
  WRITE_LONG   0x02be   40968         // Parameter 1
  WRITE_LONG   0x02ee   40969         // Parameter 1
  WRITE_LONG   0x031e   40979         // Parameter 1
  WRITE_LONG   0x034e   41616         // Parameter 1
  WRITE_SHORT  0x037a   12            // Opcode
  WRITE_BYTE   0x037c   2             // Target type
  WRITE_BYTE   0x037d   0             // Power
  WRITE_LONG   0x037e   1             // Parameter 1
  WRITE_LONG   0x0382   524288        // Parameter 2
  WRITE_BYTE   0x0386   1             // Timing metho
  WRITE_LONG   0x0388   0             // Duration
  WRITE_LONG   0x0396   1             // Min level
  WRITE_LONG   0x039a   4             // Max level
  SET bytes_to_remove = SOURCE_SIZE - 0x3aa
  DELETE_BYTES 0x3aa    bytes_to_remove

COPY_EXISTING ~sw1h63.itm~ ~override/sw1h63.itm~
  WRITE_SHORT  0x0022   12627         // Animation
  WRITE_ASCII  0x003a   ~ISW1H62~  #8 // Inventory
  WRITE_ASCII  0x0076   ~ISW1H62~  #8 // Use icon
  WRITE_SHORT  0x0090   10            // Feat. count
  WRITE_LONG   0x00ae   5             // Parameter 1
  WRITE_LONG   0x00b2   21            // Parameter 2
  WRITE_LONG   0x00de   51            // Parameter 1
  WRITE_LONG   0x00e2   20            // Parameter 2
  WRITE_LONG   0x010e   96            // Parameter 1
  WRITE_SHORT  0x022a   12            // Opcode
  WRITE_BYTE   0x022d   1             // Power
  WRITE_LONG   0x0232   4194304       // Parameter 2
  WRITE_ASCII  0x023e   ~~         #8 // Resource
  WRITE_LONG   0x024a   4             // Max level
  WRITE_SHORT  0x025a   141           // Opcode
  WRITE_BYTE   0x025d   1             // Power
  WRITE_LONG   0x025e   0             // Parameter 1
  WRITE_LONG   0x0262   2             // Parameter 2
  WRITE_ASCII  0x026e   ~~         #8 // Resource
  WRITE_SHORT  0x028a   18            // Opcode
  WRITE_BYTE   0x028c   1             // Target type
  WRITE_BYTE   0x028d   4             // Power
  WRITE_LONG   0x028e   4             // Parameter 1
  WRITE_LONG   0x0292   0             // Parameter 2
  WRITE_BYTE   0x0296   0             // Timing metho
  WRITE_BYTE   0x0297   3             // Resistance
  WRITE_LONG   0x0298   60            // Duration
  WRITE_ASCII  0x029e   ~~         #8 // Resource
  WRITE_LONG   0x02aa   4             // Max level
  WRITE_SHORT  0x02ba   174           // Opcode
  WRITE_BYTE   0x02bd   1             // Power
  WRITE_LONG   0x02be   0             // Parameter 1
  WRITE_LONG   0x02c2   0             // Parameter 2
  WRITE_BYTE   0x02c6   0             // Timing metho
  WRITE_ASCII  0x02ce   ~EFF_M07~  #8 // Resource
  WRITE_SHORT  0x02ea   174           // Opcode
  WRITE_BYTE   0x02ec   1             // Target type
  WRITE_BYTE   0x02ed   1             // Power
  WRITE_LONG   0x02ee   0             // Parameter 1
  WRITE_LONG   0x02f2   0             // Parameter 2
  WRITE_BYTE   0x02f6   4             // Timing metho
  WRITE_BYTE   0x02f7   3             // Resistance
  WRITE_LONG   0x02f8   60            // Duration
  WRITE_ASCII  0x02fe   ~EFF_E04~  #8 // Resource
  WRITE_SHORT  0x031a   177           // Opcode
  WRITE_BYTE   0x031d   0             // Power
  WRITE_LONG   0x031e   4             // Parameter 1
  WRITE_LONG   0x0322   3             // Parameter 2
  WRITE_BYTE   0x0326   2             // Timing metho
  WRITE_BYTE   0x0327   0             // Resistance
  WRITE_LONG   0x0328   0             // Duration
  WRITE_ASCII  0x032e   ~SW1H62B~  #8 // Resource
  INSERT_BYTES 0x034a   48            // new feature block
  WRITE_SHORT  0x034a   177           // Opcode
  WRITE_BYTE   0x034c   2             // Target type
  WRITE_BYTE   0x034d   0             // Power
  WRITE_LONG   0x034e   106           // Parameter 1
  WRITE_LONG   0x0352   4             // Parameter 2
  WRITE_BYTE   0x0356   2             // Timing metho
  WRITE_BYTE   0x0357   0             // Resistance
  WRITE_LONG   0x0358   0             // Duration
  WRITE_BYTE   0x035c   100           // Max. prob.
  WRITE_BYTE   0x035d   0             // Min. prob.
  WRITE_ASCII  0x035e   ~SW1H62C~  #8 // Resource
  WRITE_LONG   0x0366   0             // Min level
  WRITE_LONG   0x036a   0             // Max level
  WRITE_LONG   0x036e   0             // S. throw typ
  WRITE_LONG   0x0372   0             // S. throw bon
  WRITE_LONG   0x0376   0             // Special
  INSERT_BYTES 0x037a   48            // new feature block
  WRITE_SHORT  0x037a   177           // Opcode
  WRITE_BYTE   0x037c   2             // Target type
  WRITE_BYTE   0x037d   0             // Power
  WRITE_LONG   0x037e   122           // Parameter 1
  WRITE_LONG   0x0382   4             // Parameter 2
  WRITE_BYTE   0x0386   2             // Timing metho
  WRITE_BYTE   0x0387   0             // Resistance
  WRITE_LONG   0x0388   0             // Duration
  WRITE_BYTE   0x038c   100           // Max. prob.
  WRITE_BYTE   0x038d   0             // Min. prob.
  WRITE_ASCII  0x038e   ~SW1H62D~  #8 // Resource
  WRITE_LONG   0x0396   0             // Min level
  WRITE_LONG   0x039a   0             // Max level
  WRITE_LONG   0x039e   0             // S. throw typ
  WRITE_LONG   0x03a2   0             // S. throw bon
  WRITE_LONG   0x03a6   0             // Special
  INSERT_BYTES 0x03aa   48            // new feature block
  WRITE_SHORT  0x03aa   177           // Opcode
  WRITE_BYTE   0x03ac   2             // Target type
  WRITE_BYTE   0x03ad   0             // Power
  WRITE_LONG   0x03ae   128           // Parameter 1
  WRITE_LONG   0x03b2   4             // Parameter 2
  WRITE_BYTE   0x03b6   2             // Timing metho
  WRITE_BYTE   0x03b7   0             // Resistance
  WRITE_LONG   0x03b8   0             // Duration
  WRITE_BYTE   0x03bc   100           // Max. prob.
  WRITE_BYTE   0x03bd   0             // Min. prob.
  WRITE_ASCII  0x03be   ~SW1H62E~  #8 // Resource
  WRITE_LONG   0x03c6   0             // Min level
  WRITE_LONG   0x03ca   0             // Max level
  WRITE_LONG   0x03ce   0             // S. throw typ
  WRITE_LONG   0x03d2   0             // S. throw bon
  WRITE_LONG   0x03d6   0             // Special
  INSERT_BYTES 0x03da   48            // new feature block
  WRITE_SHORT  0x03da   177           // Opcode
  WRITE_BYTE   0x03dc   2             // Target type
  WRITE_BYTE   0x03dd   0             // Power
  WRITE_LONG   0x03de   121           // Parameter 1
  WRITE_LONG   0x03e2   4             // Parameter 2
  WRITE_BYTE   0x03e6   2             // Timing metho
  WRITE_BYTE   0x03e7   0             // Resistance
  WRITE_LONG   0x03e8   0             // Duration
  WRITE_BYTE   0x03ec   100           // Max. prob.
  WRITE_BYTE   0x03ed   0             // Min. prob.
  WRITE_ASCII  0x03ee   ~SW1H62F~  #8 // Resource
  WRITE_LONG   0x03f6   0             // Min level
  WRITE_LONG   0x03fa   0             // Max level
  WRITE_LONG   0x03fe   0             // S. throw typ
  WRITE_LONG   0x0402   0             // S. throw bon
  WRITE_LONG   0x0406   0             // Special

COPY_EXISTING ~sw1h69.itm~ ~override/sw1h69.itm~
  WRITE_ASCII  0x003a   ~ISW1H68~  #8 // Inventory
  WRITE_SHORT  0x0070   4             // Equip count
  WRITE_ASCII  0x0076   ~ISW1H68~  #8 // Use icon
  WRITE_SHORT  0x0084   0             // Speed
  WRITE_SHORT  0x0092   4             // Feat. offset
  WRITE_SHORT  0x00ca   5             // Feat. offset
  WRITE_SHORT  0x0102   7             // Feat. offset
  WRITE_SHORT  0x011a   7             // Opcode
  WRITE_BYTE   0x011d   0             // Power
  WRITE_LONG   0x011e   27            // Parameter 1
  WRITE_LONG   0x0122   21            // Parameter 2
  WRITE_BYTE   0x0127   0             // Resistance
  WRITE_LONG   0x0128   0             // Duration
  WRITE_LONG   0x014e   50            // Parameter 1
  WRITE_LONG   0x0152   20            // Parameter 2
  WRITE_LONG   0x0182   16            // Parameter 2
  WRITE_SHORT  0x01aa   8             // Opcode
  WRITE_LONG   0x01ae   0             // Parameter 1
  WRITE_LONG   0x01b2   21            // Parameter 2
  WRITE_SHORT  0x01da   12            // Opcode
  WRITE_BYTE   0x01dc   2             // Target type
  WRITE_LONG   0x01e2   131072        // Parameter 2
  WRITE_BYTE   0x01e6   9             // Timing metho
  WRITE_LONG   0x01f6   1             // Min level
  WRITE_LONG   0x01fa   6             // Max level
  WRITE_SHORT  0x020a   67            // Opcode
  WRITE_BYTE   0x020d   0             // Power
  WRITE_LONG   0x0212   0             // Parameter 2
  WRITE_BYTE   0x0216   0             // Timing metho
  WRITE_LONG   0x0218   24            // Duration
  WRITE_ASCII  0x021e   ~sword68~  #8 // Resource
  WRITE_SHORT  0x023a   215           // Opcode
  WRITE_BYTE   0x023d   9             // Power
  WRITE_LONG   0x0242   0             // Parameter 2
  WRITE_BYTE   0x0246   1             // Timing metho
  WRITE_LONG   0x0248   0             // Duration
  WRITE_ASCII  0x024e   ~SPCRTWPN~ #8 // Resource
  WRITE_SHORT  0x026a   54            // Opcode
  WRITE_BYTE   0x026d   0             // Power
  WRITE_LONG   0x026e   10            // Parameter 1
  WRITE_BYTE   0x0276   0             // Timing metho
  WRITE_LONG   0x0278   18            // Duration
  WRITE_SHORT  0x029a   142           // Opcode
  WRITE_BYTE   0x029d   0             // Power
  WRITE_LONG   0x029e   0             // Parameter 1
  WRITE_LONG   0x02a2   136           // Parameter 2
  WRITE_BYTE   0x02a6   0             // Timing metho
  WRITE_LONG   0x02a8   18            // Duration
  WRITE_SHORT  0x02ca   215           // Opcode
  WRITE_BYTE   0x02cd   9             // Power
  WRITE_LONG   0x02ce   0             // Parameter 1
  WRITE_BYTE   0x02d6   1             // Timing metho
  WRITE_LONG   0x02d8   0             // Duration
  WRITE_ASCII  0x02de   ~ICSTRENI~ #8 // Resource
  SET bytes_to_remove = SOURCE_SIZE - 0x2fa
  DELETE_BYTES 0x2fa    bytes_to_remove
  SAY DESC     @9178

COPY_EXISTING ~sw1h77.itm~ ~override/sw1h77.itm~
  WRITE_SHORT  0x0090   1             // Feat. count
  WRITE_LONG   0x00ae   5             // Parameter 1
  WRITE_LONG   0x00b2   21            // Parameter 2
  WRITE_LONG   0x00de   25            // Parameter 1
  WRITE_LONG   0x00e2   20            // Parameter 2
  WRITE_LONG   0x013e   16384         // Parameter 1
  WRITE_LONG   0x0142   1310741       // Parameter 2
  WRITE_LONG   0x0148   3             // Duration
  WRITE_LONG   0x016e   16384         // Parameter 1
  WRITE_LONG   0x0172   1310725       // Parameter 2
  WRITE_LONG   0x0178   3             // Duration
  WRITE_LONG   0x019e   0             // Parameter 1
  WRITE_LONG   0x01a2   1310740       // Parameter 2
  WRITE_LONG   0x01a8   3             // Duration
  WRITE_BYTE   0x01d7   0             // Resistance
  WRITE_BYTE   0x01dc   10            // Max. prob.
  DELETE_BYTES 0x1fa    96
  SAY DESC     @9021

COPY_EXISTING ~sw2h08.itm~ ~override/sw2h08.itm~
  WRITE_LONG   0x0148   60            // Duration
  WRITE_BYTE   0x014c   20            // Max. prob.
  SAY DESC     @306

COPY_EXISTING ~sw2h10.itm~ ~override/sw2h10.itm~
  WRITE_LONG   0x001e   0x606fffc0    // Usability
  WRITE_BYTE   0x0029   0             // Kit 1
  WRITE_SHORT  0x0068   1             // Ext. count
  WRITE_LONG   0x006a   170           // Feat. offset
  WRITE_BYTE   0x0073   1             // Force ID
  WRITE_BYTE   0x007f   0             // Target #
  WRITE_SHORT  0x0090   1             // Feat. count
  WRITE_SHORT  0x009c   1             // Effect anima
  WRITE_SHORT  0x009e   60            // Melee anim 1
  WRITE_SHORT  0x00a0   40            // Melee anim 2
  WRITE_SHORT  0x00a2   0             // Melee anim 3
  WRITE_SHORT  0x00aa   7             // Opcode
  WRITE_BYTE   0x00ac   1             // Target type
  WRITE_BYTE   0x00ad   0             // Power
  WRITE_LONG   0x00ae   27            // Parameter 1
  WRITE_LONG   0x00b2   21            // Parameter 2
  WRITE_BYTE   0x00b6   2             // Timing metho
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_LONG   0x00b8   0             // Duration
  WRITE_BYTE   0x00bc   100           // Max. prob.
  WRITE_BYTE   0x00bd   0             // Min. prob.
  WRITE_ASCII  0x00be   ~~         #8 // Resource
  WRITE_LONG   0x00c6   0             // Min level
  WRITE_LONG   0x00ca   0             // Max level
  WRITE_LONG   0x00ce   0             // S. throw typ
  WRITE_LONG   0x00d2   0             // S. throw bon
  WRITE_LONG   0x00d6   0             // Special
  WRITE_SHORT  0x00da   7             // Opcode
  WRITE_BYTE   0x00dc   1             // Target type
  WRITE_BYTE   0x00dd   0             // Power
  WRITE_LONG   0x00de   47            // Parameter 1
  WRITE_LONG   0x00e2   20            // Parameter 2
  WRITE_BYTE   0x00e6   2             // Timing metho
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_LONG   0x00e8   0             // Duration
  WRITE_BYTE   0x00ec   100           // Max. prob.
  WRITE_ASCII  0x00ee   ~~         #8 // Resource
  WRITE_LONG   0x00f6   0             // Min level
  WRITE_LONG   0x00fa   0             // Max level
  WRITE_LONG   0x00fe   0             // S. throw typ
  WRITE_LONG   0x0102   0             // S. throw bon
  WRITE_LONG   0x0106   0             // Special
  WRITE_SHORT  0x010a   7             // Opcode
  WRITE_BYTE   0x010c   1             // Target type
  WRITE_BYTE   0x010d   0             // Power
  WRITE_LONG   0x010e   25            // Parameter 1
  WRITE_LONG   0x0112   16            // Parameter 2
  WRITE_BYTE   0x0116   2             // Timing metho
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_LONG   0x0118   0             // Duration
  WRITE_BYTE   0x011c   100           // Max. prob.
  WRITE_ASCII  0x011e   ~~         #8 // Resource
  WRITE_LONG   0x0126   0             // Min level
  WRITE_LONG   0x012a   0             // Max level
  WRITE_LONG   0x012e   0             // S. throw typ
  WRITE_LONG   0x0132   0             // S. throw bon
  WRITE_LONG   0x0136   0             // Special
  WRITE_SHORT  0x013a   166           // Opcode
  WRITE_BYTE   0x013c   1             // Target type
  WRITE_BYTE   0x013d   0             // Power
  WRITE_LONG   0x013e   50            // Parameter 1
  WRITE_LONG   0x0142   0             // Parameter 2
  WRITE_BYTE   0x0146   2             // Timing metho
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_LONG   0x0148   0             // Duration
  WRITE_BYTE   0x014c   100           // Max. prob.
  WRITE_ASCII  0x014e   ~~         #8 // Resource
  WRITE_LONG   0x0156   0             // Min level
  WRITE_LONG   0x015a   0             // Max level
  WRITE_LONG   0x015e   0             // S. throw typ
  WRITE_LONG   0x0162   0             // S. throw bon
  WRITE_LONG   0x0166   0             // Special
  WRITE_SHORT  0x016a   142           // Opcode
  WRITE_BYTE   0x016c   1             // Target type
  WRITE_BYTE   0x016d   0             // Power
  WRITE_LONG   0x016e   0             // Parameter 1
  WRITE_LONG   0x0172   63            // Parameter 2
  WRITE_BYTE   0x0176   2             // Timing metho
  WRITE_BYTE   0x0177   0             // Resistance
  WRITE_LONG   0x0178   0             // Duration
  WRITE_BYTE   0x017c   100           // Max. prob.
  WRITE_ASCII  0x017e   ~~         #8 // Resource
  WRITE_LONG   0x0186   0             // Min level
  WRITE_LONG   0x018a   0             // Max level
  WRITE_LONG   0x018e   0             // S. throw typ
  WRITE_LONG   0x0192   0             // S. throw bon
  WRITE_LONG   0x0196   0             // Special
  WRITE_SHORT  0x019a   9             // Opcode
  WRITE_BYTE   0x019c   1             // Target type
  WRITE_BYTE   0x019d   0             // Power
  WRITE_LONG   0x019e   13951232      // Parameter 1
  WRITE_LONG   0x01a2   3276821       // Parameter 2
  WRITE_BYTE   0x01a6   2             // Timing metho
  WRITE_BYTE   0x01a7   0             // Resistance
  WRITE_LONG   0x01a8   0             // Duration
  WRITE_BYTE   0x01ac   100           // Max. prob.
  WRITE_ASCII  0x01ae   ~~         #8 // Resource
  WRITE_LONG   0x01b6   0             // Min level
  WRITE_LONG   0x01ba   0             // Max level
  WRITE_LONG   0x01be   0             // S. throw typ
  WRITE_LONG   0x01c2   0             // S. throw bon
  WRITE_LONG   0x01c6   0             // Special
  WRITE_SHORT  0x01ca   177           // Opcode
  WRITE_BYTE   0x01cc   2             // Target type
  WRITE_BYTE   0x01cd   0             // Power
  WRITE_LONG   0x01ce   51            // Parameter 1
  WRITE_LONG   0x01d2   8             // Parameter 2
  WRITE_BYTE   0x01d6   1             // Timing metho
  WRITE_BYTE   0x01d7   0             // Resistance
  WRITE_LONG   0x01d8   0             // Duration
  WRITE_BYTE   0x01dc   100           // Max. prob.
  WRITE_ASCII  0x01de   ~S!HOLY~   #8 // Resource
  WRITE_LONG   0x01e6   0             // Min level
  WRITE_LONG   0x01ea   0             // Max level
  WRITE_LONG   0x01ee   0             // S. throw typ
  WRITE_LONG   0x01f2   0             // S. throw bon
  WRITE_LONG   0x01f6   0             // Special
  DELETE_BYTES 0x1fa    488
  SAY DESC     @357

COPY_EXISTING ~sw2h15.itm~ ~override/sw2h15.itm~
  WRITE_LONG   0x001e   0x404cd780    // Usability
  WRITE_LONG   0x004c   10            // Weight
  WRITE_SHORT  0x0090   2             // Feat. count
  WRITE_SHORT  0x013a   13            // Opcode
  WRITE_LONG   0x013e   0             // Parameter 1
  WRITE_LONG   0x0142   8             // Parameter 2
  WRITE_BYTE   0x014c   20            // Max. prob.
  WRITE_SHORT  0x016a   139           // Opcode
  WRITE_LONG   0x016e   64285         // Parameter 1
  WRITE_LONG   0x0172   0             // Parameter 2
  WRITE_BYTE   0x017c   20            // Max. prob.
  SET bytes_to_remove = SOURCE_SIZE - 0x19a
  DELETE_BYTES 0x19a    bytes_to_remove
  SAY DESC     @299

COPY_EXISTING ~sw2h19.itm~ ~override/sw2h19.itm~
  WRITE_LONG   0x001e   0x606fffc0    // Usability
  WRITE_BYTE   0x0029   0             // Kit 1
  WRITE_LONG   0x0060   5             // Magiclevel
  WRITE_SHORT  0x0068   1             // Ext. count
  WRITE_LONG   0x006a   170           // Feat. offset
  WRITE_SHORT  0x0070   7             // Equip count
  WRITE_BYTE   0x0073   1             // Force ID
  WRITE_BYTE   0x007f   0             // Target #
  WRITE_SHORT  0x0090   1             // Feat. count
  WRITE_SHORT  0x0092   7             // Feat. offset
  WRITE_SHORT  0x009c   1             // Effect anima
  WRITE_SHORT  0x009e   60            // Melee anim 1
  WRITE_SHORT  0x00a0   40            // Melee anim 2
  WRITE_SHORT  0x00a2   0             // Melee anim 3
  WRITE_SHORT  0x00aa   7             // Opcode
  WRITE_BYTE   0x00ac   1             // Target type
  WRITE_BYTE   0x00ad   0             // Power
  WRITE_LONG   0x00ae   27            // Parameter 1
  WRITE_LONG   0x00b2   21            // Parameter 2
  WRITE_BYTE   0x00b6   2             // Timing metho
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_LONG   0x00b8   0             // Duration
  WRITE_BYTE   0x00bc   100           // Max. prob.
  WRITE_BYTE   0x00bd   0             // Min. prob.
  WRITE_ASCII  0x00be   ~~         #8 // Resource
  WRITE_LONG   0x00c6   0             // Min level
  WRITE_LONG   0x00ca   0             // Max level
  WRITE_LONG   0x00ce   0             // S. throw typ
  WRITE_LONG   0x00d2   0             // S. throw bon
  WRITE_LONG   0x00d6   0             // Special
  WRITE_SHORT  0x00da   7             // Opcode
  WRITE_BYTE   0x00dc   1             // Target type
  WRITE_BYTE   0x00dd   0             // Power
  WRITE_LONG   0x00de   47            // Parameter 1
  WRITE_LONG   0x00e2   20            // Parameter 2
  WRITE_BYTE   0x00e6   2             // Timing metho
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_LONG   0x00e8   0             // Duration
  WRITE_BYTE   0x00ec   100           // Max. prob.
  WRITE_ASCII  0x00ee   ~~         #8 // Resource
  WRITE_LONG   0x00f6   0             // Min level
  WRITE_LONG   0x00fa   0             // Max level
  WRITE_LONG   0x00fe   0             // S. throw typ
  WRITE_LONG   0x0102   0             // S. throw bon
  WRITE_LONG   0x0106   0             // Special
  WRITE_SHORT  0x010a   7             // Opcode
  WRITE_BYTE   0x010c   1             // Target type
  WRITE_BYTE   0x010d   0             // Power
  WRITE_LONG   0x010e   25            // Parameter 1
  WRITE_LONG   0x0112   16            // Parameter 2
  WRITE_BYTE   0x0116   2             // Timing metho
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_LONG   0x0118   0             // Duration
  WRITE_BYTE   0x011c   100           // Max. prob.
  WRITE_ASCII  0x011e   ~~         #8 // Resource
  WRITE_LONG   0x0126   0             // Min level
  WRITE_LONG   0x012a   0             // Max level
  WRITE_LONG   0x012e   0             // S. throw typ
  WRITE_LONG   0x0132   0             // S. throw bon
  WRITE_LONG   0x0136   0             // Special
  WRITE_SHORT  0x013a   166           // Opcode
  WRITE_BYTE   0x013c   1             // Target type
  WRITE_BYTE   0x013d   0             // Power
  WRITE_LONG   0x013e   50            // Parameter 1
  WRITE_LONG   0x0142   0             // Parameter 2
  WRITE_BYTE   0x0146   2             // Timing metho
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_LONG   0x0148   0             // Duration
  WRITE_BYTE   0x014c   100           // Max. prob.
  WRITE_ASCII  0x014e   ~~         #8 // Resource
  WRITE_LONG   0x0156   0             // Min level
  WRITE_LONG   0x015a   0             // Max level
  WRITE_LONG   0x015e   0             // S. throw typ
  WRITE_LONG   0x0162   0             // S. throw bon
  WRITE_LONG   0x0166   0             // Special
  WRITE_SHORT  0x016a   142           // Opcode
  WRITE_BYTE   0x016c   1             // Target type
  WRITE_BYTE   0x016d   0             // Power
  WRITE_LONG   0x016e   0             // Parameter 1
  WRITE_LONG   0x0172   63            // Parameter 2
  WRITE_BYTE   0x0176   2             // Timing metho
  WRITE_BYTE   0x0177   0             // Resistance
  WRITE_LONG   0x0178   0             // Duration
  WRITE_BYTE   0x017c   100           // Max. prob.
  WRITE_ASCII  0x017e   ~~         #8 // Resource
  WRITE_LONG   0x0186   0             // Min level
  WRITE_LONG   0x018a   0             // Max level
  WRITE_LONG   0x018e   0             // S. throw typ
  WRITE_LONG   0x0192   0             // S. throw bon
  WRITE_LONG   0x0196   0             // Special
  WRITE_SHORT  0x019a   177           // Opcode
  WRITE_BYTE   0x019c   1             // Target type
  WRITE_BYTE   0x019d   0             // Power
  WRITE_LONG   0x019e   0             // Parameter 1
  WRITE_LONG   0x01a2   2             // Parameter 2
  WRITE_BYTE   0x01a6   2             // Timing metho
  WRITE_BYTE   0x01a7   0             // Resistance
  WRITE_LONG   0x01a8   0             // Duration
  WRITE_BYTE   0x01ac   100           // Max. prob.
  WRITE_ASCII  0x01ae   ~sw2h19a~  #8 // Resource
  WRITE_LONG   0x01b6   0             // Min level
  WRITE_LONG   0x01ba   0             // Max level
  WRITE_LONG   0x01be   0             // S. throw typ
  WRITE_LONG   0x01c2   0             // S. throw bon
  WRITE_LONG   0x01c6   0             // Special
  WRITE_SHORT  0x01ca   9             // Opcode
  WRITE_BYTE   0x01cc   1             // Target type
  WRITE_BYTE   0x01cd   0             // Power
  WRITE_LONG   0x01ce   15919872      // Parameter 1
  WRITE_LONG   0x01d2   1966101       // Parameter 2
  WRITE_BYTE   0x01d6   2             // Timing metho
  WRITE_BYTE   0x01d7   0             // Resistance
  WRITE_LONG   0x01d8   0             // Duration
  WRITE_BYTE   0x01dc   100           // Max. prob.
  WRITE_ASCII  0x01de   ~~         #8 // Resource
  WRITE_LONG   0x01e6   0             // Min level
  WRITE_LONG   0x01ea   0             // Max level
  WRITE_LONG   0x01ee   0             // S. throw typ
  WRITE_LONG   0x01f2   0             // S. throw bon
  WRITE_LONG   0x01f6   0             // Special
  WRITE_SHORT  0x01fa   177           // Opcode
  WRITE_BYTE   0x01fc   2             // Target type
  WRITE_BYTE   0x01fd   0             // Power
  WRITE_LONG   0x01fe   51            // Parameter 1
  WRITE_LONG   0x0202   8             // Parameter 2
  WRITE_BYTE   0x0206   1             // Timing metho
  WRITE_BYTE   0x0207   0             // Resistance
  WRITE_LONG   0x0208   0             // Duration
  WRITE_BYTE   0x020c   100           // Max. prob.
  WRITE_ASCII  0x020e   ~S!HOLY~   #8 // Resource
  WRITE_LONG   0x0216   0             // Min level
  WRITE_LONG   0x021a   0             // Max level
  WRITE_LONG   0x021e   0             // S. throw typ
  WRITE_LONG   0x0222   0             // S. throw bon
  WRITE_LONG   0x0226   0             // Special
  DELETE_BYTES 0x22a    440
  SAY DESC     @9121

COPY_EXISTING ~sw2h21.itm~ ~override/sw2h21.itm~
  WRITE_SHORT  0x0070   18            // Equip count
  WRITE_SHORT  0x0092   18            // Feat. offset
  WRITE_SHORT  0x00aa   7             // Opcode
  WRITE_LONG   0x00ae   5             // Parameter 1
  WRITE_LONG   0x00b2   21            // Parameter 2
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_SHORT  0x00da   7             // Opcode
  WRITE_LONG   0x00de   104           // Parameter 1
  WRITE_LONG   0x00e2   20            // Parameter 2
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_SHORT  0x010a   7             // Opcode
  WRITE_LONG   0x010e   104           // Parameter 1
  WRITE_LONG   0x0112   16            // Parameter 2
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_SHORT  0x013a   9             // Opcode
  WRITE_LONG   0x013e   15919872      // Parameter 1
  WRITE_LONG   0x0142   1966101       // Parameter 2
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_SHORT  0x016a   142           // Opcode
  WRITE_LONG   0x016e   0             // Parameter 1
  WRITE_LONG   0x0172   52            // Parameter 2
  WRITE_BYTE   0x0177   2             // Resistance
  WRITE_LONG   0x0178   60            // Duration
  WRITE_SHORT  0x019a   206           // Opcode
  WRITE_LONG   0x019e   0             // Parameter 1
  WRITE_LONG   0x01a2   0             // Parameter 2
  WRITE_BYTE   0x01a7   2             // Resistance
  WRITE_LONG   0x01a8   60            // Duration
  WRITE_ASCII  0x01ae   ~spin975~  #8 // Resource
  WRITE_SHORT  0x01ca   206           // Opcode
  WRITE_LONG   0x01ce   0             // Parameter 1
  WRITE_LONG   0x01d2   0             // Parameter 2
  WRITE_BYTE   0x01d7   2             // Resistance
  WRITE_LONG   0x01d8   60            // Duration
  WRITE_ASCII  0x01de   ~spin974~  #8 // Resource
  WRITE_LONG   0x01ea   "-1"          // Max level
  WRITE_SHORT  0x01fa   206           // Opcode
  WRITE_LONG   0x01fe   0             // Parameter 1
  WRITE_LONG   0x0202   0             // Parameter 2
  WRITE_BYTE   0x0207   2             // Resistance
  WRITE_LONG   0x0208   60            // Duration
  WRITE_ASCII  0x020e   ~spin912~  #8 // Resource
  WRITE_SHORT  0x022a   206           // Opcode
  WRITE_LONG   0x0232   0             // Parameter 2
  WRITE_ASCII  0x023e   ~spin911~  #8 // Resource
  WRITE_ASCII  0x026e   ~spin909~  #8 // Resource
  WRITE_ASCII  0x029e   ~spin910~  #8 // Resource
  WRITE_LONG   0x02aa   0             // Max level
  WRITE_ASCII  0x02ce   ~spin959~  #8 // Resource
  WRITE_ASCII  0x02fe   ~spin834~  #8 // Resource
  WRITE_ASCII  0x032e   ~spin774~  #8 // Resource
  WRITE_ASCII  0x035e   ~spin775~  #8 // Resource
  WRITE_ASCII  0x03be   ~spin975~  #8 // Resource
  WRITE_ASCII  0x03ee   ~spin974~  #8 // Resource
  SET bytes_to_remove = SOURCE_SIZE - 0x40a
  DELETE_BYTES 0x40a    bytes_to_remove
  SAY DESC     @9089

COPY_EXISTING ~trollall.itm~ ~override/trollall.itm~
  WRITE_LONG   0x0018   104           // Attributes
  WRITE_SHORT  0x0070   4             // Equip count
  WRITE_SHORT  0x0092   4             // Feat. offset
  WRITE_SHORT  0x00aa   16            // Opcode
  WRITE_LONG   0x00b2   0             // Parameter 2
  WRITE_SHORT  0x00da   206           // Opcode
  WRITE_ASCII  0x00ee   ~SPWI613~  #8 // Resource
  WRITE_SHORT  0x010a   98            // Opcode
  WRITE_LONG   0x010e   2             // Parameter 1
  WRITE_LONG   0x0112   3             // Parameter 2
  WRITE_SHORT  0x013a   142           // Opcode
  WRITE_LONG   0x013e   0             // Parameter 1
  WRITE_LONG   0x0142   56            // Parameter 2
  SET bytes_to_remove = SOURCE_SIZE - 0x16a
  DELETE_BYTES 0x16a    bytes_to_remove

COPY_EXISTING ~vamp.itm~ ~override/vamp.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0070   0             // Equip count
  WRITE_SHORT  0x0086   2             // Thac0 bonus
  WRITE_SHORT  0x0090   4             // Feat. count
  WRITE_SHORT  0x0092   0             // Feat. offset
  WRITE_SHORT  0x00aa   221           // Opcode
  WRITE_BYTE   0x00ac   2             // Target type
  WRITE_LONG   0x00ae   9             // Parameter 1
  WRITE_LONG   0x00b2   2             // Parameter 2
  WRITE_BYTE   0x00b6   1             // Timing metho
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_BYTE   0x00bc   15            // Max. prob.
  WRITE_ASCII  0x00be   ~~         #8 // Resource
  WRITE_BYTE   0x00e7   0             // Resistance

COPY_EXISTING ~vamp1.itm~ ~override/vamp1.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0070   0             // Equip count
  WRITE_SHORT  0x0086   4             // Thac0 bonus
  WRITE_SHORT  0x008a   2             // Dice count
  WRITE_SHORT  0x0090   4             // Feat. count
  WRITE_SHORT  0x0092   0             // Feat. offset
  WRITE_SHORT  0x00aa   221           // Opcode
  WRITE_BYTE   0x00ac   2             // Target type
  WRITE_LONG   0x00ae   9             // Parameter 1
  WRITE_LONG   0x00b2   2             // Parameter 2
  WRITE_BYTE   0x00b6   1             // Timing metho
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_BYTE   0x00bc   20            // Max. prob.
  WRITE_ASCII  0x00be   ~~         #8 // Resource
  WRITE_BYTE   0x00e7   0             // Resistance

COPY_EXISTING ~vamp2.itm~ ~override/vamp2.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0070   0             // Equip count
  WRITE_SHORT  0x0086   4             // Thac0 bonus
  WRITE_SHORT  0x008a   2             // Dice count
  WRITE_SHORT  0x0090   4             // Feat. count
  WRITE_SHORT  0x0092   0             // Feat. offset
  WRITE_SHORT  0x00aa   221           // Opcode
  WRITE_BYTE   0x00ac   2             // Target type
  WRITE_LONG   0x00ae   9             // Parameter 1
  WRITE_LONG   0x00b2   2             // Parameter 2
  WRITE_BYTE   0x00b6   1             // Timing metho
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_BYTE   0x00bc   20            // Max. prob.
  WRITE_ASCII  0x00be   ~~         #8 // Resource
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_LONG   0x00fa   0             // Max level

COPY_EXISTING ~vamp3.itm~ ~override/vamp3.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0070   0             // Equip count
  WRITE_SHORT  0x0086   4             // Thac0 bonus
  WRITE_SHORT  0x008a   2             // Dice count
  WRITE_SHORT  0x0090   4             // Feat. count
  WRITE_SHORT  0x0092   0             // Feat. offset
  WRITE_SHORT  0x00aa   221           // Opcode
  WRITE_BYTE   0x00ac   2             // Target type
  WRITE_LONG   0x00ae   9             // Parameter 1
  WRITE_LONG   0x00b2   2             // Parameter 2
  WRITE_BYTE   0x00b6   1             // Timing metho
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_BYTE   0x00bc   20            // Max. prob.
  WRITE_ASCII  0x00be   ~~         #8 // Resource
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_LONG   0x00fa   0             // Max level

COPY_EXISTING ~wa2helm.itm~ ~override/wa2helm.itm~
  WRITE_SHORT  0x0022   12360         // Animation
  WRITE_BYTE   0x002a   9             // MinInt
  WRITE_ASCII  0x003a   ~IHELM17~  #8 // Inventory
  WRITE_ASCII  0x0058   ~CHELM17~  #8 // Desc icon
  WRITE_SHORT  0x0070   3             // Equip count
  WRITE_BYTE   0x0073   0             // Force ID
  WRITE_ASCII  0x0076   ~SPWI605B~ #8 // Use icon
  WRITE_BYTE   0x007e   1             // Target type
  WRITE_SHORT  0x0092   3             // Feat. offset
  WRITE_LONG   0x00ae   106           // Parameter 1
  WRITE_LONG   0x00b2   53            // Parameter 2
  WRITE_LONG   0x00de   100           // Parameter 1
  WRITE_LONG   0x00e2   48            // Parameter 2
  WRITE_SHORT  0x010a   0             // Opcode
  WRITE_LONG   0x010e   1             // Parameter 1
  WRITE_LONG   0x0112   0             // Parameter 2
  WRITE_BYTE   0x0117   2             // Resistance
  WRITE_SHORT  0x013a   146           // Opcode
  WRITE_BYTE   0x013c   2             // Target type
  WRITE_BYTE   0x013d   6             // Power
  WRITE_LONG   0x013e   10            // Parameter 1
  WRITE_LONG   0x0142   1             // Parameter 2
  WRITE_BYTE   0x0146   1             // Timing metho
  WRITE_BYTE   0x0147   2             // Resistance
  WRITE_ASCII  0x014e   ~SPWI605~  #8 // Resource
  SET bytes_to_remove = SOURCE_SIZE - 0x16a
  DELETE_BYTES 0x16a    bytes_to_remove
  SAY DESC     @9004

COPY_EXISTING ~wa2robe.itm~ ~override/wa2robe.itm~
  WRITE_SHORT  0x0022   22323         // Animation
  WRITE_BYTE   0x0029   80            // Kit 1
  WRITE_BYTE   0x002f   6             // Kit 4
  WRITE_LONG   0x0034   30000         // Price
  WRITE_ASCII  0x003a   ~ICLCK09~  #8 // Inventory
  WRITE_LONG   0x0076   32            // Parameter 1
  WRITE_LONG   0x00a6   29            // Parameter 1
  WRITE_LONG   0x00d6   34            // Parameter 1
  WRITE_LONG   0x0106   2             // Parameter 1
  WRITE_BYTE   0x010f   0             // Resistance
  WRITE_LONG   0x0136   2             // Parameter 1
  WRITE_BYTE   0x013f   0             // Resistance
  WRITE_BYTE   0x016f   0             // Resistance
  WRITE_BYTE   0x019f   0             // Resistance
  SAY DESC     @304

COPY_EXISTING ~wa2shiel.itm~ ~override/wa2shiel.itm~
  WRITE_LONG   0x000c   6815          // ID name
  WRITE_ASCII  0x0010   ~MISC57~   #8 // Used up
  WRITE_LONG   0x0018   44            // Attributes
  WRITE_SHORT  0x0022   13124         // Animation
  WRITE_LONG   0x0034   7             // Price
  WRITE_ASCII  0x003a   ~ISHLDM01~ #8 // Inventory
  WRITE_LONG   0x004c   7             // Weight
  WRITE_LONG   0x0054   "-1"          // ID desc
  WRITE_ASCII  0x0058   ~CSHLD29~  #8 // Desc icon
  WRITE_LONG   0x0060   0             // Magiclevel
  WRITE_SHORT  0x0070   3             // Equip count
  WRITE_SHORT  0x0072   0             // Opcode
  WRITE_LONG   0x0076   1             // Parameter 1
  WRITE_LONG   0x007a   0             // Parameter 2
  WRITE_LONG   0x00a6   100           // Parameter 1
  WRITE_LONG   0x00d6   59            // Parameter 1
  WRITE_LONG   0x00da   32            // Parameter 2
  SET bytes_to_remove = SOURCE_SIZE - 0x102
  DELETE_BYTES 0x102    bytes_to_remove

COPY_EXISTING ~waflail.itm~ ~override/waflail.itm~
  WRITE_LONG   0x016e   10            // Parameter 1
  WRITE_BYTE   0x0177   0             // Resistance
  WRITE_LONG   0x019e   10            // Parameter 1
  WRITE_BYTE   0x01a7   0             // Resistance
  WRITE_LONG   0x01ce   10            // Parameter 1
  WRITE_BYTE   0x01d7   0             // Resistance
  SAY NAME2    @9017
  SAY DESC     @9031

COPY_EXISTING ~wand07.itm~ ~override/wand07.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x002d   2             // Kit 3
  WRITE_BYTE   0x002f   2             // Kit 4
  WRITE_LONG   0x0034   50000         // Price
  WRITE_LONG   0x0054   "-1"          // ID desc
  WRITE_BYTE   0x007f   0             // Target #
  WRITE_SHORT  0x0088   6             // Dice size
  WRITE_SHORT  0x008a   0             // Dice count
  WRITE_SHORT  0x0090   1             // Feat. count
  WRITE_SHORT  0x009c   1             // Effect anima
  WRITE_SHORT  0x00aa   146           // Opcode
  WRITE_BYTE   0x00ad   0             // Power
  WRITE_LONG   0x00ae   6             // Parameter 1
  WRITE_LONG   0x00b2   1             // Parameter 2
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_ASCII  0x00be   ~SPWI308~  #8 // Resource
  WRITE_LONG   0x00c6   0             // Min level
  WRITE_LONG   0x00ca   0             // Max level
  WRITE_LONG   0x00ce   0             // S. throw typ
  DELETE_BYTES 0xda     48
  SAY DESC     @9054

COPY_EXISTING ~wand11.itm~ ~override/wand11.itm~
  WRITE_LONG   0x001e   0x207f2840    // Usability
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_BYTE   0x0029   0             // Kit 1
  WRITE_LONG   0x0034   100000        // Price
  WRITE_SHORT  0x0042   0             // Lore to ID
  WRITE_SHORT  0x0088   6             // Dice size
  WRITE_SHORT  0x008a   0             // Dice count
  WRITE_SHORT  0x009c   67            // Effect anima
  WRITE_LONG   0x00ca   8             // Max level
  WRITE_LONG   0x00fa   8             // Max level
  WRITE_BYTE   0x010d   5             // Power
  WRITE_ASCII  0x011e   ~SPFLAST2~ #8 // Resource
  WRITE_BYTE   0x013d   5             // Power
  WRITE_ASCII  0x014e   ~SPFLSRIN~ #8 // Resource

COPY_EXISTING ~wand12.itm~ ~override/wand12.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0094   10            // Charges
  WRITE_BYTE   0x00dd   8             // Power
  WRITE_BYTE   0x01a7   2             // Resistance
  WRITE_LONG   0x01be   8             // S. throw typ
  WRITE_BYTE   0x02ed   8             // Power
  WRITE_BYTE   0x031d   8             // Power
  WRITE_BYTE   0x034d   8             // Power
  WRITE_BYTE   0x037d   8             // Power
  WRITE_BYTE   0x0387   2             // Resistance
  WRITE_LONG   0x039e   8             // S. throw typ
  WRITE_BYTE   0x03ad   8             // Power

COPY_EXISTING ~wand18.itm~ ~override/wand18.itm~
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0068   1             // Ext. count
  WRITE_LONG   0x006a   170           // Feat. offset
  WRITE_ASCII  0x0076   ~SPWI608B~ #8 // Use icon
  WRITE_SHORT  0x0088   6             // Dice size
  WRITE_SHORT  0x008a   0             // Dice count
  WRITE_SHORT  0x0090   1             // Feat. count
  WRITE_SHORT  0x0094   5             // Charges
  WRITE_LONG   0x0098   0             // Flags
  WRITE_SHORT  0x009c   1             // Effect anima
  WRITE_SHORT  0x00aa   146           // Opcode
  WRITE_BYTE   0x00ac   2             // Target type
  WRITE_BYTE   0x00ad   0             // Power
  WRITE_LONG   0x00ae   12            // Parameter 1
  WRITE_LONG   0x00b2   1             // Parameter 2
  WRITE_BYTE   0x00b6   1             // Timing metho
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_LONG   0x00b8   0             // Duration
  WRITE_BYTE   0x00bc   100           // Max. prob.
  WRITE_BYTE   0x00bd   0             // Min. prob.
  WRITE_ASCII  0x00be   ~SPWI608~  #8 // Resource
  WRITE_LONG   0x00c6   0             // Min level
  WRITE_LONG   0x00ca   0             // Max level
  WRITE_LONG   0x00ce   0             // S. throw typ
  WRITE_LONG   0x00d2   0             // S. throw bon
  WRITE_LONG   0x00d6   0             // Special
  DELETE_BYTES 0xda     584

COPY_EXISTING ~waninja.itm~ ~override/waninja.itm~
  WRITE_LONG   0x001e   0x57feffc0    // Usability
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_BYTE   0x01d7   0             // Resistance
  WRITE_BYTE   0x0207   0             // Resistance

COPY_EXISTING ~was2h.itm~ ~override/was2h.itm~
  WRITE_SHORT  0x0090   1             // Feat. count
  WRITE_LONG   0x013e   5             // Parameter 1
  WRITE_BYTE   0x0147   0             // Resistance
  WRITE_BYTE   0x014c   10            // Max. prob.
  WRITE_LONG   0x015a   0             // Max level
  DELETE_BYTES 0x16a    144
  SAY DESC     @9201

COPY_EXISTING ~wasling.itm~ ~override/wasling.itm~
  WRITE_SHORT  0x0068   1             // Ext. count
  WRITE_LONG   0x006a   170           // Feat. offset
  WRITE_SHORT  0x008c   6             // Dice bonus
  WRITE_LONG   0x0098   0             // Flags
  WRITE_SHORT  0x00aa   7             // Opcode
  WRITE_BYTE   0x00ac   1             // Target type
  WRITE_BYTE   0x00ad   0             // Power
  WRITE_LONG   0x00ae   28            // Parameter 1
  WRITE_LONG   0x00b2   20            // Parameter 2
  WRITE_BYTE   0x00b6   2             // Timing metho
  WRITE_BYTE   0x00b7   0             // Resistance
  WRITE_LONG   0x00b8   0             // Duration
  WRITE_BYTE   0x00bc   100           // Max. prob.
  WRITE_BYTE   0x00bd   0             // Min. prob.
  WRITE_ASCII  0x00be   ~~         #8 // Resource
  WRITE_LONG   0x00c6   0             // Min level
  WRITE_LONG   0x00ca   0             // Max level
  WRITE_LONG   0x00ce   0             // S. throw typ
  WRITE_LONG   0x00d2   0             // S. throw bon
  WRITE_LONG   0x00d6   0             // Special
  WRITE_SHORT  0x00da   7             // Opcode
  WRITE_BYTE   0x00dc   1             // Target type
  WRITE_BYTE   0x00dd   0             // Power
  WRITE_LONG   0x00de   67            // Parameter 1
  WRITE_LONG   0x00e2   16            // Parameter 2
  WRITE_BYTE   0x00e6   2             // Timing metho
  WRITE_BYTE   0x00e7   0             // Resistance
  WRITE_LONG   0x00e8   0             // Duration
  WRITE_BYTE   0x00ec   100           // Max. prob.
  WRITE_ASCII  0x00ee   ~~         #8 // Resource
  WRITE_LONG   0x00f6   0             // Min level
  WRITE_LONG   0x00fa   0             // Max level
  WRITE_LONG   0x00fe   0             // S. throw typ
  WRITE_LONG   0x0102   0             // S. throw bon
  WRITE_LONG   0x0106   0             // Special
  WRITE_SHORT  0x010a   1             // Opcode
  WRITE_BYTE   0x010c   1             // Target type
  WRITE_BYTE   0x010d   0             // Power
  WRITE_LONG   0x010e   1             // Parameter 1
  WRITE_LONG   0x0112   1             // Parameter 2
  WRITE_BYTE   0x0116   2             // Timing metho
  WRITE_BYTE   0x0117   0             // Resistance
  WRITE_LONG   0x0118   0             // Duration
  WRITE_BYTE   0x011c   100           // Max. prob.
  WRITE_ASCII  0x011e   ~~         #8 // Resource
  WRITE_LONG   0x0126   0             // Min level
  WRITE_LONG   0x012a   0             // Max level
  WRITE_LONG   0x012e   0             // S. throw typ
  WRITE_LONG   0x0132   0             // S. throw bon
  WRITE_LONG   0x0136   0             // Special
  SET bytes_to_remove = SOURCE_SIZE - 0x13a
  DELETE_BYTES 0x13a    bytes_to_remove
  SAY DESC     @307

COPY_EXISTING ~wolfgr.itm~ ~override/wolfgr.itm~
  WRITE_LONG   0x0018   96            // Attributes
  WRITE_SHORT  0x0022   0             // Animation
  WRITE_SHORT  0x0070   2             // Equip count
  WRITE_SHORT  0x0092   2             // Feat. offset
  WRITE_SHORT  0x00aa   98            // Opcode
  WRITE_LONG   0x00ae   3             // Parameter 1
  WRITE_LONG   0x00b2   2             // Parameter 2
  WRITE_SHORT  0x00da   142           // Opcode
  WRITE_LONG   0x00e2   87            // Parameter 2
  WRITE_ASCII  0x00ee   ~~         #8 // Resource
  SET bytes_to_remove = SOURCE_SIZE - 0x10a
  DELETE_BYTES 0x10a    bytes_to_remove

COPY_EXISTING ~wolfspir.itm~ ~override/wolfspir.itm~
  WRITE_SHORT  0x0090   1             // Feat. count
  DELETE_BYTES 0x13a    48

COPY_EXISTING ~xbow14.itm~ ~override/xbow14.itm~
  WRITE_LONG   0x0034   10500         // Price
  WRITE_LONG   0x00ae   23            // Parameter 1
  WRITE_LONG   0x00de   33            // Parameter 1
  WRITE_LONG   0x010e   38            // Parameter 1
  WRITE_BYTE   0x0177   0             // Resistance

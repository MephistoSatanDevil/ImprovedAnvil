BACKUP ~ImprovedAnvil/backup~
AUTHOR ~sikret_the_great@yahoo.com~
VERSION ~v6.1~

LANGUAGE "English"
 ~ImprovedAnvil/English/~
 ~ImprovedAnvil/English/setup.tra~

BEGIN @1

REQUIRE_PREDICATE GAME_IS ~tob bg2ee~ @2 // Please install TOB and return!

// copying stats.ids with custom scripting states //

COPY ~ImprovedAnvil\ids\stats.ids~ ~override/stats.ids~

// extra installation routines for ToB //

ACTION_IF GAME_IS ~tob~ THEN BEGIN
  // a copy of stats.ids for the compiler
  COPY ~ImprovedAnvil\ids\stats.ids~ ~script compiler/stats.ids~

  COPY bgmain.exe bgmain.exe
    // a patch that eliminates the issue with the limit of summonned creatures
    READ_ASCII 0x2B93DB target_bytes_1 ELSE 0 (0x16)

    READ_LONG   (0x2B93DB + 0x000) var1
    READ_LONG   (0x2B93DB + 0x004) var2
    READ_LONG   (0x2B93DB + 0x008) var3
    READ_LONG   (0x2B93DB + 0x00C) var4
    READ_LONG   (0x2B93DB + 0x010) var5
    READ_SHORT  (0x2B93DB + 0x014) var6

    PATCH_IF (%var1% = 0x4D8B2574)
      AND (%var2% = 0x8B118BF0)
      AND (%var3% = 0x52FFF04D)
      AND (%var4% = 0xD8458910)
      AND (%var5% = 0x8AD8458B)
      AND (%var6% = 0x1248)
    THEN BEGIN
      WRITE_LONG   (0x2B93DB + 0x000) 0xF8830574
      WRITE_LONG   (0x2B93DB + 0x004) 0x8B297509
      WRITE_LONG   (0x2B93DB + 0x008) 0x488BF045
      WRITE_LONG   (0x2B93DB + 0x00C) 0x00F98312
      WRITE_LONG   (0x2B93DB + 0x010) 0x13EB1E74
      WRITE_SHORT  (0x2B93DB + 0x014) 0x9090
    END

    // custom fist placement for monk
    // solution adapted from Sword and Fist mod
    SET "index" = 0
    SET "block_one" = 0
    SET "block_two" = 0
    SET "offset" = 0x737094

    WHILE ("%index%" < 33750) BEGIN // checks through 270,000 bytes; SoA starts at 6E8B00, ToB starts at 757FEC
      SET "index" = ("%index%" + 1)
      READ_ASCII ("%offset%" - 0x08 + ("%index%" * 0x08)) ~previous_value~
      READ_ASCII ("%offset%" +        ("%index%" * 0x08)) ~current_value~
      PATCH_IF (("%current_value%" STRING_COMPARE_CASE ~MFIST1~ = 0) AND NOT ("%previous_value%" STRING_COMPARE_CASE ~MFIST1~ = 0) AND "block_one" = 0) BEGIN
        WRITE_ASCII ("%offset%" + 0x08 + ("%index%" * 0x08)) ~MFIST1~  #8 // level 2
        WRITE_ASCII ("%offset%" + 0x10 + ("%index%" * 0x08)) ~MFIST2~  #8 // level 3
        WRITE_ASCII ("%offset%" + 0x18 + ("%index%" * 0x08)) ~MFIST2~  #8 // level 4
        WRITE_ASCII ("%offset%" + 0x20 + ("%index%" * 0x08)) ~MFIST2~  #8 // level 5
        WRITE_ASCII ("%offset%" + 0x28 + ("%index%" * 0x08)) ~MFIST3~  #8 // level 6
        WRITE_ASCII ("%offset%" + 0x30 + ("%index%" * 0x08)) ~MFIST3~  #8 // level 7
        WRITE_ASCII ("%offset%" + 0x38 + ("%index%" * 0x08)) ~MFIST3~  #8 // level 8
        WRITE_ASCII ("%offset%" + 0x40 + ("%index%" * 0x08)) ~MFIST4~  #8 // level 9
        WRITE_ASCII ("%offset%" + 0x48 + ("%index%" * 0x08)) ~MFIST4~  #8 // level 10
        WRITE_ASCII ("%offset%" + 0x50 + ("%index%" * 0x08)) ~MFIST4~  #8 // level 11
        WRITE_ASCII ("%offset%" + 0x58 + ("%index%" * 0x08)) ~MFIST5~  #8 // level 12
        WRITE_ASCII ("%offset%" + 0x60 + ("%index%" * 0x08)) ~MFIST5~  #8 // level 13
        WRITE_ASCII ("%offset%" + 0x68 + ("%index%" * 0x08)) ~MFIST5~  #8 // level 14
        WRITE_ASCII ("%offset%" + 0x70 + ("%index%" * 0x08)) ~MFIST6~  #8 // level 15
        WRITE_ASCII ("%offset%" + 0x78 + ("%index%" * 0x08)) ~MFIST6~  #8 // level 16
        WRITE_ASCII ("%offset%" + 0x80 + ("%index%" * 0x08)) ~MFIST6~  #8 // level 17
        WRITE_ASCII ("%offset%" + 0x88 + ("%index%" * 0x08)) ~MFIST7~  #8 // level 18
        SET "block_one" = 1
      END
      PATCH_IF (("%current_value%" STRING_COMPARE_CASE ~MFIST7~ = 0) AND ("%previous_value%" STRING_COMPARE_CASE ~MFIST6~ = 0) AND "block_two" = 0) BEGIN // ToB only entries
        SET "index2" = "%index%"
        WRITE_ASCII ("%offset%" + 0x08  + ("%index%" * 0x08)) ~MFIST7~  #8 // level 20
        WRITE_ASCII ("%offset%" + 0x10  + ("%index%" * 0x08)) ~MFIST8~  #8 // level 21
        WRITE_ASCII ("%offset%" + 0x18  + ("%index%" * 0x08)) ~MFIST8~  #8 // level 22
        WRITE_ASCII ("%offset%" + 0x20  + ("%index%" * 0x08)) ~MFIST8~  #8 // level 23
        WRITE_ASCII ("%offset%" + 0x28  + ("%index%" * 0x08)) ~MFIST8~  #8 // level 24
        WRITE_ASCII ("%offset%" + 0x30  + ("%index%" * 0x08)) ~MFIST9~  #8 // level 25
        WRITE_ASCII ("%offset%" + 0x38  + ("%index%" * 0x08)) ~MFIST9~  #8 // level 26
        WRITE_ASCII ("%offset%" + 0x40  + ("%index%" * 0x08)) ~MFIST9~  #8 // level 27
        WRITE_ASCII ("%offset%" + 0x48  + ("%index%" * 0x08)) ~MFIST9~ #8 // level 28
        WRITE_ASCII ("%offset%" + 0x50  + ("%index%" * 0x08)) ~MFIST10~ #8 // level 29
        WRITE_ASCII ("%offset%" + 0x58  + ("%index%" * 0x08)) ~MFIST10~ #8 // level 30
        WRITE_ASCII ("%offset%" + 0x60  + ("%index%" * 0x08)) ~MFIST10~ #8 // level 31
        WRITE_ASCII ("%offset%" + 0x68  + ("%index%" * 0x08)) ~MFIST10~ #8 // level 32
        WRITE_ASCII ("%offset%" + 0x70  + ("%index%" * 0x08)) ~MFIST10~ #8 // level 33
        WRITE_ASCII ("%offset%" + 0x78  + ("%index%" * 0x08)) ~MFIST10~ #8 // level 34
        WRITE_ASCII ("%offset%" + 0x80  + ("%index%" * 0x08)) ~MFIST10~ #8 // level 35
        WRITE_ASCII ("%offset%" + 0x88  + ("%index%" * 0x08)) ~MFIST10~ #8 // level 36
        WRITE_ASCII ("%offset%" + 0x90  + ("%index%" * 0x08)) ~MFIST10~ #8 // level 37
        WRITE_ASCII ("%offset%" + 0x98  + ("%index%" * 0x08)) ~MFIST10~ #8 // level 38
        WRITE_ASCII ("%offset%" + 0xA0  + ("%index%" * 0x08)) ~MFIST10~ #8 // level 39
        WRITE_ASCII ("%offset%" + 0xA8  + ("%index%" * 0x08)) ~MFIST10~ #8 // level 40
        WRITE_ASCII ("%offset%" + 0xB0  + ("%index%" * 0x08)) ~MFIST10~ #8 // level 41
        SET "block_two" = 1
      END
      PATCH_IF ("%block_two%" = 1) BEGIN
        WRITE_ASCII ("%offset%" +         ("%index2%" * 0x08)) ~MFIST7~ #8 // level 19
        SET "block_two" = 2
      END
      PATCH_IF ("%block_two%" = 2) BEGIN
        SET "index" = 33750
      END
    END
  BUT_ONLY_IF_IT_CHANGES
END

// for BG2EE append a missing Ice Golem animation that is present in vanilla ToB //

ACTION_IF GAME_IS ~BG2EE~ THEN BEGIN
  APPEND ~animate.ids~ ~0xE0F0 IC_ICE_GOLEM~ UNLESS ~\bIC_ICE_GOLEM\b~
END

// Copying items //

COPY ~ImprovedAnvil/itm/S!ring01.itm~      ~override/S!ring01.itm~
  SAY NAME2     @100
  SAY DESC      @101

COPY ~ImprovedAnvil/itm/S!ring02.itm~      ~override/S!ring02.itm~
  SAY NAME2     @102
  SAY DESC      @103

COPY ~ImprovedAnvil/itm/S!robe01.itm~      ~override/S!robe01.itm~
  SAY NAME2     @104
  SAY DESC      @105

COPY ~ImprovedAnvil/itm/S!plat01.itm~      ~override/S!plat01.itm~
  SAY NAME2     @106
  SAY DESC      @107

COPY ~ImprovedAnvil/itm/S!chan01.itm~      ~override/S!chan01.itm~
  SAY NAME2     @108
  SAY DESC      @109

COPY ~ImprovedAnvil/itm/S!plat02.itm~      ~override/S!plat02.itm~
  SAY NAME2     @110
  SAY DESC      @111

COPY ~ImprovedAnvil/itm/S!leat01.itm~      ~override/S!leat01.itm~
  SAY NAME2     @112
  SAY DESC      @113

COPY ~ImprovedAnvil/itm/S!misc05.itm~      ~override/S!misc05.itm~
  SAY NAME2     @114
  SAY DESC      @115

COPY ~ImprovedAnvil/itm/S!leat02.itm~      ~override/S!leat02.itm~
  SAY NAME2     @116
  SAY DESC      @117

COPY ~ImprovedAnvil/itm/S!leat03.itm~      ~override/S!leat03.itm~
  SAY NAME2     @118
  SAY DESC      @119

COPY ~ImprovedAnvil/itm/S!misc01.itm~      ~override/S!misc01.itm~
  SAY NAME2     @120
  SAY DESC      @121

COPY ~ImprovedAnvil/itm/S!misc02.itm~      ~override/S!misc02.itm~
  SAY NAME2     @122
  SAY DESC      @123

COPY ~ImprovedAnvil/itm/S!jan01.itm~      ~override/S!jan01.itm~
  SAY NAME2     @124
  SAY DESC      @125

COPY ~ImprovedAnvil/itm/S!fla01.itm~      ~override/S!fla01.itm~
  SAY NAME2     @126
  SAY DESC      @127

COPY ~ImprovedAnvil/itm/S!clck01.itm~      ~override/S!clck01.itm~
  SAY NAME2     @128
  SAY DESC      @129

COPY ~ImprovedAnvil/itm/S!sw01.itm~      ~override/S!sw01.itm~
  SAY NAME2     @130
  SAY DESC      @131

COPY ~ImprovedAnvil/itm/S!misc06.itm~      ~override/S!misc06.itm~
  SAY NAME2     @132
  SAY DESC      @133

COPY ~ImprovedAnvil/itm/S!sw02.itm~      ~override/S!sw02.itm~
  SAY NAME2     @134
  SAY DESC      @135

COPY ~ImprovedAnvil/itm/S!ring03.itm~      ~override/S!ring03.itm~
  SAY NAME2     @136
  SAY DESC      @137

COPY ~ImprovedAnvil/itm/S!shld01.itm~      ~override/S!shld01.itm~
  SAY NAME2     @138
  SAY DESC      @139

COPY ~ImprovedAnvil/itm/S!sw03.itm~      ~override/S!sw03.itm~
  SAY NAME2     @140
  SAY DESC      @141

COPY ~ImprovedAnvil/itm/S!misc07.itm~      ~override/S!misc07.itm~
  SAY NAME2     @142
  SAY DESC      @143

COPY ~ImprovedAnvil/itm/S!misc08.itm~      ~override/S!misc08.itm~
  SAY NAME2     @144
  SAY DESC      @145

COPY ~ImprovedAnvil/itm/S!sw04.itm~      ~override/S!sw04.itm~
  SAY NAME2     @146
  SAY DESC      @147

COPY ~ImprovedAnvil/itm/S!staf01.itm~      ~override/S!staf01.itm~
  SAY NAME2     @148
  SAY DESC      @149

COPY ~ImprovedAnvil/itm/S!staf02.itm~      ~override/S!staf02.itm~
  SAY NAME2     @150
  SAY DESC      @151

COPY ~ImprovedAnvil/itm/S!staf03.itm~      ~override/S!staf03.itm~
  SAY NAME2     @152
  SAY DESC      @153

COPY ~ImprovedAnvil/itm/S!halb01.itm~      ~override/S!halb01.itm~
  SAY NAME2     @154
  SAY DESC      @155

COPY ~ImprovedAnvil/itm/S!sw05.itm~      ~override/S!sw05.itm~
  SAY NAME2     @156
  SAY DESC      @157

COPY ~ImprovedAnvil/itm/S!sw06.itm~      ~override/S!sw06.itm~
  SAY NAME2     @158
  SAY DESC      @159

COPY ~ImprovedAnvil/itm/S!boot01.itm~      ~override/S!boot01.itm~
  SAY NAME2     @160
  SAY DESC      @161

COPY ~ImprovedAnvil/itm/S!hamm01.itm~      ~override/S!hamm01.itm~
  SAY NAME2     @162
  SAY DESC      @163

COPY ~ImprovedAnvil/itm/S!misc09.itm~      ~override/S!misc09.itm~
  SAY NAME2     @164
  SAY DESC      @165

COPY ~ImprovedAnvil/itm/S!axe01.itm~      ~override/S!axe01.itm~
  SAY NAME2     @166
  SAY DESC      @167

COPY ~ImprovedAnvil/itm/S!belt01.itm~      ~override/S!belt01.itm~
  SAY NAME2     @168
  SAY DESC      @169

COPY ~ImprovedAnvil/itm/S!chan02.itm~      ~override/S!chan02.itm~
  SAY NAME2     @170
  SAY DESC      @171

COPY ~ImprovedAnvil/itm/S!amul02.itm~      ~override/S!amul02.itm~
  SAY NAME2     @172
  SAY DESC      @173

COPY ~ImprovedAnvil/itm/S!misc03.itm~      ~override/S!misc03.itm~
  SAY NAME2     @174
  SAY DESC      @175

COPY ~ImprovedAnvil/itm/S!misc04.itm~      ~override/S!misc04.itm~
  SAY NAME2     @176
  SAY DESC      @177

COPY ~ImprovedAnvil/itm/S!sw07.itm~      ~override/S!sw07.itm~
  SAY NAME2     @178
  SAY DESC      @179

COPY ~ImprovedAnvil/itm/S!sw08.itm~      ~override/S!sw08.itm~
  SAY NAME2     @180
  SAY DESC      @181

COPY ~ImprovedAnvil/itm/S!sw09.itm~      ~override/S!sw09.itm~
  SAY NAME2     @182
  SAY DESC      @183

COPY ~ImprovedAnvil/itm/S!sw10.itm~      ~override/S!sw10.itm~
  SAY NAME2     @184
  SAY DESC      @185

COPY ~ImprovedAnvil/itm/S!sw11.itm~      ~override/S!sw11.itm~
  SAY NAME2     @178
  SAY DESC      @186

COPY ~ImprovedAnvil/itm/S!sw12.itm~      ~override/S!sw12.itm~
  SAY NAME2     @178
  SAY DESC      @187

COPY ~ImprovedAnvil/itm/S!misc52.itm~      ~override/S!misc52.itm~
  SAY NAME2     @188
  SAY DESC      @189

COPY ~ImprovedAnvil/itm/S!staf04.itm~      ~override/S!staf04.itm~
  SAY NAME2     @190
  SAY DESC      @191

COPY ~ImprovedAnvil/itm/S!boot02.itm~      ~override/S!boot02.itm~
  SAY NAME2     @192
  SAY DESC      @193

COPY ~ImprovedAnvil/itm/S!dagg01.itm~      ~override/S!dagg01.itm~
  SAY NAME2     @194
  SAY DESC      @195

COPY ~ImprovedAnvil/itm/S!dagg02.itm~      ~override/S!dagg02.itm~
  SAY NAME2     @196
  SAY DESC      @197

COPY ~ImprovedAnvil/itm/S!ring04.itm~      ~override/S!ring04.itm~
  SAY NAME2     @198
  SAY DESC      @199

COPY ~ImprovedAnvil/itm/S!misc10.itm~      ~override/S!misc10.itm~
  SAY NAME2     @200
  SAY DESC      @201

COPY ~ImprovedAnvil/itm/S!GSCIM.itm~      ~override/S!GSCIM.itm~

COPY ~ImprovedAnvil/itm/S!dax01.itm~      ~override/S!dax01.itm~

COPY ~ImprovedAnvil/itm/S!immune.itm~      ~override/S!immune.itm~

COPY ~ImprovedAnvil/itm/S!breath.itm~      ~override/S!breath.itm~

COPY ~ImprovedAnvil/itm/clck09.itm~      ~override/clck09.itm~

COPY ~ImprovedAnvil/itm/clck10.itm~      ~override/clck10.itm~

COPY ~ImprovedAnvil/itm/clck11.itm~      ~override/clck11.itm~

COPY ~ImprovedAnvil/itm/S!koshi.itm~      ~override/S!koshi.itm~

COPY ~ImprovedAnvil/itm/S!rock.itm~      ~override/S!rock.itm~

COPY ~ImprovedAnvil/itm/S!dclaw.itm~      ~override/S!dclaw.itm~

COPY ~ImprovedAnvil/itm/S!tclaw.itm~      ~override/S!tclaw.itm~

COPY ~ImprovedAnvil/itm/S!tazok.itm~      ~override/S!tazok.itm~

COPY ~ImprovedAnvil/itm/S!guard.itm~      ~override/S!guard.itm~

COPY ~ImprovedAnvil/itm/S!trap.itm~      ~override/S!trap.itm~

COPY ~ImprovedAnvil/itm/S!trap2.itm~      ~override/S!trap2.itm~

COPY ~ImprovedAnvil/itm/S!trapr.itm~      ~override/S!trapr.itm~

COPY ~ImprovedAnvil/itm/S!gracen.itm~      ~override/S!gracen.itm~

COPY ~ImprovedAnvil/itm/S!imix.itm~      ~override/S!imix.itm~

COPY ~ImprovedAnvil/itm/S!yaga.itm~      ~override/S!yaga.itm~

COPY ~ImprovedAnvil/itm/S!gem.itm~      ~override/S!gem.itm~

COPY ~ImprovedAnvil/itm/S!torgal.itm~      ~override/S!torgal.itm~

COPY ~ImprovedAnvil/itm/S!shadel.itm~      ~override/S!shadel.itm~

COPY ~ImprovedAnvil/itm/S!amtcap.itm~      ~override/S!amtcap.itm~

COPY ~ImprovedAnvil/itm/S!jamis.itm~      ~override/S!jamis.itm~

COPY ~ImprovedAnvil/itm/S!hlshyr.itm~      ~override/S!hlshyr.itm~

COPY ~ImprovedAnvil/itm/S!mayor.itm~      ~override/S!mayor.itm~

COPY ~ImprovedAnvil/itm/rods04.itm~      ~override/rods04.itm~

COPY ~ImprovedAnvil/itm/amul28.itm~      ~override/amul28.itm~

COPY ~ImprovedAnvil/itm/hgber01.itm~      ~override/hgber01.itm~

COPY ~ImprovedAnvil/itm/giafir.itm~      ~override/giafir.itm~

COPY ~ImprovedAnvil/itm/S!blun01.itm~      ~override/S!blun01.itm~
  SAY NAME2     @202
  SAY DESC      @203

COPY ~ImprovedAnvil/itm/S!shld02.itm~      ~override/S!shld02.itm~
  SAY NAME2     @204
  SAY DESC      @205

COPY ~ImprovedAnvil/itm/S!robe02.itm~      ~override/S!robe02.itm~
  SAY NAME2     @206
  SAY DESC      @207

COPY ~ImprovedAnvil/itm/S!halb02.itm~      ~override/S!halb02.itm~
  SAY NAME2     @208
  SAY DESC      @209

COPY ~ImprovedAnvil/itm/S!helm01.itm~      ~override/S!helm01.itm~
  SAY NAME2     @210
  SAY DESC      @211

COPY ~ImprovedAnvil/itm/S!misc11.itm~      ~override/S!misc11.itm~
  SAY NAME2     @212
  SAY DESC      @213

COPY ~ImprovedAnvil/itm/S!helm02.itm~      ~override/S!helm02.itm~
  SAY NAME2     @214
  SAY DESC      @215

COPY ~ImprovedAnvil/itm/S!sw13.itm~      ~override/S!sw13.itm~
  SAY NAME2     @216
  SAY DESC      @217

COPY ~ImprovedAnvil/itm/S!misc12.itm~      ~override/S!misc12.itm~
  SAY NAME2     @218
  SAY DESC      @219

COPY ~ImprovedAnvil/itm/S!belt02.itm~      ~override/S!belt02.itm~
  SAY NAME2     @220
  SAY DESC      @221

COPY ~ImprovedAnvil/itm/S!misc13.itm~      ~override/S!misc13.itm~
  SAY NAME2     @222
  SAY DESC      @223

COPY ~ImprovedAnvil/itm/S!misc14.itm~      ~override/S!misc14.itm~
  SAY NAME2     @224
  SAY DESC      @225

COPY ~ImprovedAnvil/itm/S!amul03.itm~      ~override/S!amul03.itm~
  SAY NAME2     @226
  SAY DESC      @227

COPY ~ImprovedAnvil/itm/S!helm03.itm~      ~override/S!helm03.itm~
  SAY NAME2     @228
  SAY DESC      @229

COPY ~ImprovedAnvil/itm/S!helm04.itm~      ~override/S!helm04.itm~
  SAY NAME2     @230
  SAY DESC      @231

COPY ~ImprovedAnvil/itm/S!amul01.itm~      ~override/S!amul01.itm~
  SAY NAME2     @232
  SAY DESC      @233

COPY ~ImprovedAnvil/itm/S!brac01.itm~      ~override/S!brac01.itm~
  SAY NAME2     @234
  SAY DESC      @235

COPY ~ImprovedAnvil/itm/S!sw14.itm~      ~override/S!sw14.itm~
  SAY NAME2     @236
  SAY DESC      @237

COPY ~ImprovedAnvil/itm/S!blun02.itm~      ~override/S!blun02.itm~
  SAY NAME2     @238
  SAY DESC      @239

COPY ~ImprovedAnvil/itm/clck26.itm~      ~override/clck26.itm~
  SAY NAME2     @240
  SAY DESC      @241

COPY ~ImprovedAnvil/itm/S!clck03.itm~      ~override/S!clck03.itm~
  SAY NAME2     @240
  SAY DESC      @241

COPY ~ImprovedAnvil/itm/S!plat03.itm~      ~override/S!plat03.itm~
  SAY NAME2     @242
  SAY DESC      @243

COPY ~ImprovedAnvil/itm/S!misc15.itm~      ~override/S!misc15.itm~
  SAY NAME2     @244
  SAY DESC      @245

COPY ~ImprovedAnvil/itm/S!potn01.itm~      ~override/S!potn01.itm~
  SAY NAME2     @246
  SAY DESC      @247

COPY ~ImprovedAnvil/itm/S!ring05.itm~      ~override/S!ring05.itm~
  SAY NAME2     @248
  SAY DESC      @249

COPY ~ImprovedAnvil/itm/S!shld03.itm~      ~override/S!shld03.itm~
  SAY NAME2     @250
  SAY DESC      @251

COPY ~ImprovedAnvil/itm/S!blun03.itm~      ~override/S!blun03.itm~
  SAY NAME2     @252
  SAY DESC      @253

COPY ~ImprovedAnvil/itm/S!clck02.itm~      ~override/S!clck02.itm~
  SAY NAME2     @254
  SAY DESC      @255

COPY ~ImprovedAnvil/itm/S!staf05.itm~      ~override/S!staf05.itm~
  SAY NAME2     @256
  SAY DESC      @257

COPY ~ImprovedAnvil/itm/S!potn02.itm~      ~override/S!potn02.itm~
  SAY NAME2     @258
  SAY DESC      @259

COPY ~ImprovedAnvil/itm/S!misc16.itm~      ~override/S!misc16.itm~
  SAY NAME2     @260
  SAY DESC      @261

COPY ~ImprovedAnvil/itm/S!scrl09.itm~      ~override/S!scrl09.itm~
  SAY NAME2     @262
  SAY DESC      @263

COPY ~ImprovedAnvil/itm/S!helm05.itm~      ~override/S!helm05.itm~
  SAY NAME2     @264
  SAY DESC      @265

COPY ~ImprovedAnvil/itm/potn29.itm~      ~override/potn29.itm~
  SAY NAME2     @266
  SAY DESC      @267

COPY ~ImprovedAnvil/itm/arow02.itm~      ~override/arow02.itm~
  SAY DESC      @270

COPY ~ImprovedAnvil/itm/arow03.itm~      ~override/arow03.itm~

COPY ~ImprovedAnvil/itm/arow04.itm~      ~override/arow04.itm~
  SAY DESC      @271

COPY ~ImprovedAnvil/itm/arow10.itm~      ~override/arow10.itm~
  SAY NAME2     @272
  SAY DESC      @273

COPY ~ImprovedAnvil/itm/arow11.itm~      ~override/arow11.itm~
  SAY DESC      @274

COPY ~ImprovedAnvil/itm/arow15.itm~      ~override/arow15.itm~
  SAY DESC      @275

COPY ~ImprovedAnvil/itm/bolt02.itm~      ~override/bolt02.itm~
  SAY DESC      @276

COPY ~ImprovedAnvil/itm/bolt06.itm~      ~override/bolt06.itm~
  SAY DESC      @277

COPY ~ImprovedAnvil/itm/bolt07.itm~      ~override/bolt07.itm~

COPY ~ImprovedAnvil/itm/quiver01.itm~      ~override/quiver01.itm~

COPY ~ImprovedAnvil/itm/quiver02.itm~      ~override/quiver02.itm~

COPY ~ImprovedAnvil/itm/quiver03.itm~      ~override/quiver03.itm~

COPY ~ImprovedAnvil/itm/quiver04.itm~      ~override/quiver04.itm~

COPY ~ImprovedAnvil/itm/bolt09.itm~      ~override/bolt09.itm~
  SAY DESC      @278

COPY ~ImprovedAnvil/itm/kuobolt.itm~      ~override/kuobolt.itm~
  SAY NAME2     @279
  SAY DESC      @280

COPY ~ImprovedAnvil/itm/S!misc17.itm~      ~override/S!misc17.itm~
  SAY NAME2     @281
  SAY DESC      @282

COPY ~ImprovedAnvil/itm/S!bolt01.itm~      ~override/S!bolt01.itm~
  SAY NAME2     @284
  SAY DESC      @285

COPY ~ImprovedAnvil/itm/S!janbow.itm~      ~override/S!janbow.itm~
  SAY NAME2     @286
  SAY DESC      @287

COPY ~ImprovedAnvil/itm/S!sw15.itm~      ~override/S!sw15.itm~
  SAY NAME2     @288
  SAY DESC      @289

COPY ~ImprovedAnvil/itm/S!misc18.itm~      ~override/S!misc18.itm~
  SAY NAME2     @290
  SAY DESC      @291

COPY ~ImprovedAnvil/itm/S!catfig.itm~      ~override/S!catfig.itm~
  SAY NAME2     @292
  SAY DESC      @293

COPY ~ImprovedAnvil/itm/S!spifig.itm~      ~override/S!spifig.itm~
  SAY NAME2     @294
  SAY DESC      @295

COPY ~ImprovedAnvil/itm/S!catfi2.itm~      ~override/S!catfi2.itm~
  SAY NAME2     @296
  SAY DESC      @297

COPY ~ImprovedAnvil/itm/sw1h51.itm~      ~override/sw1h51.itm~
  SAY DESC      @298

COPY ~ImprovedAnvil/itm/sw2h15.itm~      ~override/sw2h15.itm~
  SAY DESC      @299

COPY ~ImprovedAnvil/itm/shld07.itm~      ~override/shld07.itm~
  SAY DESC      @300

COPY ~ImprovedAnvil/itm/shld23.itm~      ~override/shld23.itm~
  SAY DESC      @301

COPY ~ImprovedAnvil/itm/S!misc19.itm~      ~override/S!misc19.itm~
  SAY NAME2     @302
  SAY DESC      @303

COPY ~ImprovedAnvil/itm/wa2robe.itm~      ~override/wa2robe.itm~
  SAY DESC      @304

COPY ~ImprovedAnvil/itm/arow08.itm~      ~override/arow08.itm~
  SAY DESC      @305

COPY ~ImprovedAnvil/itm/sw2h08.itm~      ~override/sw2h08.itm~
  SAY DESC      @306

COPY ~ImprovedAnvil/itm/wasling.itm~      ~override/wasling.itm~
  SAY DESC      @307

COPY ~ImprovedAnvil/itm/S!misc20.itm~      ~override/S!misc20.itm~
  SAY NAME2     @308
  SAY DESC      @309

COPY ~ImprovedAnvil/itm/S!potn03.itm~      ~override/S!potn03.itm~
  SAY NAME2     @310
  SAY DESC      @311

COPY ~ImprovedAnvil/itm/blun14.itm~      ~override/blun14.itm~
  SAY DESC      @312

COPY ~ImprovedAnvil/itm/blun30c.itm~      ~override/blun30c.itm~
  SAY DESC      @313

COPY ~ImprovedAnvil/itm/blun30d.itm~      ~override/blun30d.itm~
  SAY DESC      @314

COPY ~ImprovedAnvil/itm/blun30.itm~      ~override/blun30.itm~
  SAY DESC      @315

COPY ~ImprovedAnvil/itm/S!misc21.itm~      ~override/S!misc21.itm~
  SAY NAME2     @316
  SAY DESC      @317

COPY ~ImprovedAnvil/itm/S!misc22.itm~      ~override/S!misc22.itm~
  SAY DESC      @318

COPY ~ImprovedAnvil/itm/S!misc23.itm~      ~override/S!misc23.itm~
  SAY NAME2     @319
  SAY DESC      @320

COPY ~ImprovedAnvil/itm/S!misc24.itm~      ~override/S!misc24.itm~
  SAY NAME2     @319
  SAY DESC      @320

COPY ~ImprovedAnvil/itm/S!misc25.itm~      ~override/S!misc25.itm~
  SAY NAME2     @321
  SAY DESC      @322

COPY ~ImprovedAnvil/itm/S!misc26.itm~      ~override/S!misc26.itm~
  SAY DESC      @323

COPY ~ImprovedAnvil/itm/S!ring06.itm~      ~override/S!ring06.itm~
  SAY NAME2     @324
  SAY DESC      @325

COPY ~ImprovedAnvil/itm/npsw06.itm~      ~override/npsw06.itm~
  SAY DESC      @326

COPY ~ImprovedAnvil/itm/staf09.itm~      ~override/staf09.itm~
  SAY DESC      @327

COPY ~ImprovedAnvil/itm/clck05.itm~      ~override/clck05.itm~
  SAY DESC      @328

COPY ~ImprovedAnvil/itm/staf11.itm~      ~override/staf11.itm~
  SAY DESC      @329

COPY ~ImprovedAnvil/itm/S!misc27.itm~      ~override/S!misc27.itm~
  SAY NAME2     @330
  SAY DESC      @331

COPY ~ImprovedAnvil/itm/S!misc28.itm~      ~override/S!misc28.itm~
  SAY NAME2     @332
  SAY DESC      @333

COPY ~ImprovedAnvil/itm/S!berry1.itm~      ~override/S!berry1.itm~
  SAY DESC      @334

COPY ~ImprovedAnvil/itm/S!berry2.itm~      ~override/S!berry2.itm~
  SAY DESC      @335

COPY ~ImprovedAnvil/itm/S!berry3.itm~      ~override/S!berry3.itm~
  SAY DESC      @336

COPY ~ImprovedAnvil/itm/kuobolt2.itm~      ~override/kuobolt2.itm~
  SAY NAME2     @337
  SAY DESC      @338

COPY ~ImprovedAnvil/itm/ax1h10.itm~      ~override/ax1h10.itm~
  SAY DESC      @339

COPY ~ImprovedAnvil/itm/compon05.itm~      ~override/compon05.itm~
  SAY DESC      @340

COPY ~ImprovedAnvil/itm/S!misc29.itm~      ~override/S!misc29.itm~
  SAY NAME2     @341
  SAY DESC      @342

COPY ~ImprovedAnvil/itm/S!sw16.itm~      ~override/S!sw16.itm~
  SAY NAME2     @343
  SAY DESC      @344

COPY ~ImprovedAnvil/itm/S!misc30.itm~      ~override/S!misc30.itm~
  SAY NAME2     @345
  SAY DESC      @346

COPY ~ImprovedAnvil/itm/S!misc31.itm~      ~override/S!misc31.itm~
  SAY NAME2     @347
  SAY DESC      @348

COPY ~ImprovedAnvil/itm/potn33.itm~      ~override/potn33.itm~
  SAY NAME2     @349
  SAY DESC      @350

COPY ~ImprovedAnvil/itm/S!misc32.itm~      ~override/S!misc32.itm~
  SAY NAME2     @351
  SAY DESC      @352

COPY ~ImprovedAnvil/itm/S!misc33.itm~      ~override/S!misc33.itm~
  SAY NAME2     @353
  SAY DESC      @354

COPY ~ImprovedAnvil/itm/S!key1.itm~      ~override/S!key1.itm~
  SAY NAME2     @355
  SAY DESC      @356

COPY ~ImprovedAnvil/itm/sw2h10.itm~      ~override/sw2h10.itm~
  SAY DESC      @357

COPY ~ImprovedAnvil/itm/potn43.itm~      ~override/potn43.itm~
  SAY NAME2     @9000
  SAY DESC      @9001

COPY ~ImprovedAnvil/itm/boot01.itm~      ~override/boot01.itm~
  SAY DESC      @9002

COPY ~ImprovedAnvil/itm/ax1h15.itm~      ~override/ax1h15.itm~
  SAY DESC      @9003

COPY ~ImprovedAnvil/itm/wa2helm.itm~      ~override/wa2helm.itm~
  SAY DESC      @9004

COPY ~ImprovedAnvil/itm/scrl07.itm~      ~override/scrl07.itm~
  SAY DESC      @9005

COPY ~ImprovedAnvil/itm/S!misc34.itm~      ~override/S!misc34.itm~
  SAY NAME2     @9006
  SAY DESC      @9007

COPY ~ImprovedAnvil/itm/S!leat04.itm~      ~override/S!leat04.itm~
  SAY NAME2     @9008
  SAY DESC      @9009

COPY ~ImprovedAnvil/itm/S!leat05.itm~      ~override/S!leat05.itm~
  SAY NAME2     @9010
  SAY DESC      @9011

COPY ~ImprovedAnvil/itm/halb06.itm~      ~override/halb06.itm~
  SAY DESC      @9012

COPY ~ImprovedAnvil/itm/sw1h25.itm~      ~override/sw1h25.itm~
  SAY DESC      @9016

COPY ~ImprovedAnvil/itm/npplat.itm~      ~override/npplat.itm~
  SAY DESC      @9018

COPY ~ImprovedAnvil/itm/hamm09.itm~      ~override/hamm09.itm~
  SAY DESC      @9019

COPY ~ImprovedAnvil/itm/sw1h77.itm~      ~override/sw1h77.itm~
  SAY DESC      @9021

COPY ~ImprovedAnvil/itm/clck30.itm~      ~override/clck30.itm~
  SAY DESC      @9022

COPY ~ImprovedAnvil/itm/S!plat04.itm~      ~override/S!plat04.itm~
  SAY NAME2     @9023
  SAY DESC      @9024

COPY ~ImprovedAnvil/itm/S!scaleg.itm~      ~override/S!scaleg.itm~
  SAY NAME2     @9025
  SAY DESC      @9026

COPY ~ImprovedAnvil/itm/S!plat05.itm~      ~override/S!plat05.itm~
  SAY NAME2     @9027
  SAY DESC      @9028

COPY ~ImprovedAnvil/itm/S!boot03.itm~      ~override/S!boot03.itm~
  SAY NAME2     @9029
  SAY DESC      @9030

COPY ~ImprovedAnvil/itm/waflail.itm~      ~override/waflail.itm~
  SAY NAME2     @9017
  SAY DESC      @9031

COPY ~ImprovedAnvil/itm/S!scaler.itm~      ~override/S!scaler.itm~
  SAY NAME2     @9032
  SAY DESC      @9033

COPY ~ImprovedAnvil/itm/S!plat06.itm~      ~override/S!plat06.itm~
  SAY NAME2     @9034
  SAY DESC      @9035

COPY ~ImprovedAnvil/itm/S!scrl02.itm~      ~override/S!scrl02.itm~
  SAY NAME2     @9036
  SAY DESC      @9037

COPY ~ImprovedAnvil/itm/blun24.itm~      ~override/blun24.itm~
  SAY DESC      @9038

COPY ~ImprovedAnvil/itm/S!misc35.itm~      ~override/S!misc35.itm~
  SAY NAME2     @9040
  SAY DESC      @9041

COPY ~ImprovedAnvil/itm/potn21.itm~      ~override/potn21.itm~
  SAY DESC      @9042

COPY ~ImprovedAnvil/itm/clck07.itm~      ~override/clck07.itm~
  SAY DESC      @9043

COPY ~ImprovedAnvil/itm/belt10.itm~      ~override/belt10.itm~
  SAY DESC      @9045

COPY ~ImprovedAnvil/itm/ring39.itm~      ~override/ring39.itm~
  SAY DESC      @9046

COPY ~ImprovedAnvil/itm/blun25.itm~      ~override/blun25.itm~
  SAY DESC      @9047

COPY ~ImprovedAnvil/itm/S!misc36.itm~      ~override/S!misc36.itm~
  SAY NAME2     @9052
  SAY DESC      @9053

COPY ~ImprovedAnvil/itm/wand07.itm~      ~override/wand07.itm~
  SAY DESC      @9054

COPY ~ImprovedAnvil/itm/S!scrl01.itm~      ~override/S!scrl01.itm~
  SAY NAME2     @9056
  SAY DESC      @9057

COPY ~ImprovedAnvil/itm/sw1h34.itm~      ~override/sw1h34.itm~
  SAY DESC      @9058

COPY ~ImprovedAnvil/itm/S!misc37.itm~      ~override/S!misc37.itm~
  SAY NAME2     @9059
  SAY DESC      @9060

COPY ~ImprovedAnvil/itm/S!misc38.itm~      ~override/S!misc38.itm~
  SAY NAME2     @9061
  SAY DESC      @9062

COPY ~ImprovedAnvil/itm/S!misc39.itm~      ~override/S!misc39.itm~
  SAY NAME2     @9063
  SAY DESC      @9064

COPY ~ImprovedAnvil/itm/S!axe02.itm~      ~override/S!axe02.itm~
  SAY NAME2     @9065
  SAY DESC      @9066

COPY ~ImprovedAnvil/itm/potn37.itm~      ~override/potn37.itm~
  SAY NAME2     @9067
  SAY DESC      @268

COPY ~ImprovedAnvil/itm/S!misc40.itm~      ~override/S!misc40.itm~
  SAY NAME2     @9068
  SAY DESC      @9069

COPY ~ImprovedAnvil/itm/S!sw17.itm~      ~override/S!sw17.itm~
  SAY NAME2     @9072
  SAY DESC      @9073

COPY ~ImprovedAnvil/itm/miscbc.itm~      ~override/miscbc.itm~
  SAY DESC      @9074

COPY ~ImprovedAnvil/itm/S!amul04.itm~      ~override/S!amul04.itm~
  SAY NAME2     @9075
  SAY DESC      @9076

COPY ~ImprovedAnvil/itm/S!amul05.itm~      ~override/S!amul05.itm~
  SAY NAME2     @9077
  SAY DESC      @9078

COPY ~ImprovedAnvil/itm/dart03.itm~      ~override/dart03.itm~
  SAY DESC      @9079

COPY ~ImprovedAnvil/itm/dart04.itm~      ~override/dart04.itm~
  SAY DESC      @9080

COPY ~ImprovedAnvil/itm/amul21.itm~      ~override/amul21.itm~
  SAY DESC      @9081

COPY ~ImprovedAnvil/itm/sw1h36.itm~      ~override/sw1h36.itm~
  SAY DESC      @9082

COPY ~ImprovedAnvil/itm/leat24.itm~      ~override/leat24.itm~
  SAY DESC      @9083

COPY ~ImprovedAnvil/itm/S!misc41.itm~      ~override/S!misc41.itm~
  SAY NAME2     @9084

COPY ~ImprovedAnvil/itm/misc3a1.itm~      ~override/misc3a1.itm~
  SAY DESC      @9085

COPY ~ImprovedAnvil/itm/misc3a2.itm~      ~override/misc3a2.itm~
  SAY DESC      @9086

COPY ~ImprovedAnvil/itm/misc3a4.itm~      ~override/misc3a4.itm~
  SAY DESC      @9087

COPY ~ImprovedAnvil/itm/shld31.itm~      ~override/shld31.itm~
  SAY DESC      @9088

COPY ~ImprovedAnvil/itm/sw2h21.itm~      ~override/sw2h21.itm~
  SAY DESC      @9089

COPY ~ImprovedAnvil/itm/halb05.itm~      ~override/halb05.itm~
  SAY DESC      @9090

COPY ~ImprovedAnvil/itm/misc5x.itm~      ~override/misc5x.itm~
  SAY DESC      @9091

COPY ~ImprovedAnvil/itm/npsw04.itm~      ~override/npsw04.itm~
  SAY DESC      @9092

COPY ~ImprovedAnvil/itm/S!clck04.itm~      ~override/S!clck04.itm~
  SAY NAME2     @9093
  SAY DESC      @9094

COPY ~ImprovedAnvil/itm/S!clck05.itm~      ~override/S!clck05.itm~
  SAY NAME2     @9095
  SAY DESC      @9096

COPY ~ImprovedAnvil/itm/S!scrl05.itm~      ~override/S!scrl05.itm~
  SAY NAME2     @9097
  SAY DESC      @9098

COPY ~ImprovedAnvil/itm/S!scrl06.itm~      ~override/S!scrl06.itm~
  SAY NAME2     @9105
  SAY DESC      @9106

COPY ~ImprovedAnvil/itm/S!scrl07.itm~      ~override/S!scrl07.itm~
  SAY NAME2     @9107
  SAY DESC      @9108

COPY ~ImprovedAnvil/itm/scrl98.itm~      ~override/scrl98.itm~
  SAY DESC      @9109

COPY ~ImprovedAnvil/itm/S!misc43.itm~      ~override/S!misc43.itm~
  SAY NAME2     @9110
  SAY DESC      @9111

COPY ~ImprovedAnvil/itm/helm32.itm~      ~override/helm32.itm~
  SAY DESC      @9115

COPY ~ImprovedAnvil/itm/helm31.itm~      ~override/helm31.itm~
  SAY DESC      @9116

COPY ~ImprovedAnvil/itm/S!staf06.itm~      ~override/S!staf06.itm~
  SAY NAME2     @9117
  SAY DESC      @9118

COPY ~ImprovedAnvil/itm/S!staf07.itm~      ~override/S!staf07.itm~
  SAY NAME2     @9119
  SAY DESC      @9120

COPY ~ImprovedAnvil/itm/sw2h19.itm~      ~override/sw2h19.itm~
  SAY DESC      @9121

COPY ~ImprovedAnvil/itm/sper12.itm~      ~override/sper12.itm~
  SAY DESC      @9122

COPY ~ImprovedAnvil/itm/S!misc44.itm~      ~override/S!misc44.itm~
  SAY NAME2     @9123
  SAY DESC      @9124

COPY ~ImprovedAnvil/itm/S!misc45.itm~      ~override/S!misc45.itm~
  SAY NAME2     @9125
  SAY DESC      @9126

COPY ~ImprovedAnvil/itm/S!misc46.itm~      ~override/S!misc46.itm~
  SAY NAME2     @9127
  SAY DESC      @9128

COPY ~ImprovedAnvil/itm/S!misc47.itm~      ~override/S!misc47.itm~
  SAY NAME2     @9129
  SAY DESC      @9130

COPY ~ImprovedAnvil/itm/bolt03.itm~      ~override/bolt03.itm~
  SAY DESC      @9131

COPY ~ImprovedAnvil/itm/S!misc48.itm~      ~override/S!misc48.itm~
  SAY NAME2     @9132
  SAY DESC      @9133

COPY ~ImprovedAnvil/itm/S!misc49.itm~      ~override/S!misc49.itm~
  SAY NAME2     @9134
  SAY DESC      @9135

COPY ~ImprovedAnvil/itm/S!misc50.itm~      ~override/S!misc50.itm~
  SAY NAME2     @9136
  SAY DESC      @9137

COPY ~ImprovedAnvil/itm/S!keyw.itm~      ~override/S!keyw.itm~
  SAY NAME2     @9138
  SAY DESC      @9139

COPY ~ImprovedAnvil/itm/S!keyg.itm~      ~override/S!keyg.itm~
  SAY NAME2     @9140
  SAY DESC      @9141

COPY ~ImprovedAnvil/itm/S!keyr.itm~      ~override/S!keyr.itm~
  SAY NAME2     @9142
  SAY DESC      @9143

COPY ~ImprovedAnvil/itm/S!keya.itm~      ~override/S!keya.itm~
  SAY NAME2     @9144
  SAY DESC      @9145

COPY ~ImprovedAnvil/itm/S!keyb.itm~      ~override/S!keyb.itm~
  SAY NAME2     @9146
  SAY DESC      @9147

COPY ~ImprovedAnvil/itm/S!misc51.itm~      ~override/S!misc51.itm~
  SAY NAME2     @9148
  SAY DESC      @9149

COPY ~ImprovedAnvil/itm/S!helm06.itm~      ~override/S!helm06.itm~
  SAY NAME2     @9150
  SAY DESC      @9151

COPY ~ImprovedAnvil/itm/S!clck06.itm~      ~override/S!clck06.itm~
  SAY NAME2     @9152
  SAY DESC      @9153

COPY ~ImprovedAnvil/itm/S!clck07.itm~      ~override/S!clck07.itm~
  SAY NAME2     @9154
  SAY DESC      @9155

COPY ~ImprovedAnvil/itm/S!scrl08.itm~      ~override/S!scrl08.itm~
  SAY NAME2     @9156

COPY ~ImprovedAnvil/itm/S!helm07.itm~      ~override/S!helm07.itm~
  SAY NAME2     @9157
  SAY DESC      @9158

COPY ~ImprovedAnvil/itm/S!helm08.itm~      ~override/S!helm08.itm~
  SAY NAME2     @9159
  SAY DESC      @9160

COPY ~ImprovedAnvil/itm/S!amul06.itm~      ~override/S!amul06.itm~
  SAY NAME2     @9161
  SAY DESC      @9162

COPY ~ImprovedAnvil/itm/scrl1p.itm~      ~override/scrl1p.itm~
  SAY DESC      @9055

COPY ~ImprovedAnvil/itm/S!scrl24.itm~      ~override/S!scrl24.itm~
  SAY DESC      @9163

COPY ~ImprovedAnvil/itm/S!scrl23.itm~      ~override/S!scrl23.itm~
  SAY NAME2     @9164
  SAY DESC      @9165

COPY ~ImprovedAnvil/itm/S!scrl25.itm~      ~override/S!scrl25.itm~
  SAY NAME2     @9166
  SAY DESC      @9167

COPY ~ImprovedAnvil/itm/S!scrl26.itm~      ~override/S!scrl26.itm~
  SAY NAME2     @9168
  SAY DESC      @366

COPY ~ImprovedAnvil/itm/S!scrl27.itm~      ~override/S!scrl27.itm~
  SAY NAME2     @9169
  SAY DESC      @9170

COPY ~ImprovedAnvil/itm/S!scrl28.itm~      ~override/S!scrl28.itm~
  SAY NAME2     @9171
  SAY DESC      @9172

COPY ~ImprovedAnvil/itm/blun22.itm~      ~override/blun22.itm~
  SAY NAME2     @9173
  SAY DESC      @9114

COPY ~ImprovedAnvil/itm/S!scrl29.itm~      ~override/S!scrl29.itm~
  SAY NAME2     @9174

COPY ~ImprovedAnvil/itm/rods01.itm~      ~override/rods01.itm~
  SAY NAME2     @9175
  SAY DESC      @9176

COPY ~ImprovedAnvil/itm/S!scrl10.itm~      ~override/S!scrl10.itm~
  SAY DESC      @9177

COPY ~ImprovedAnvil/itm/sw1h69.itm~      ~override/sw1h69.itm~
  SAY DESC      @9178

COPY ~ImprovedAnvil/itm/S!misc59.itm~      ~override/S!misc59.itm~
  SAY NAME2     @9189
  SAY DESC      @9190

COPY ~ImprovedAnvil/itm/S!axe03.itm~      ~override/S!axe03.itm~
  SAY NAME2     @9191
  SAY DESC      @9192

COPY ~ImprovedAnvil/itm/S!staf08.itm~      ~override/S!staf08.itm~
  SAY NAME2     @9193
  SAY DESC      @9194

COPY ~ImprovedAnvil/itm/S!leat06.itm~      ~override/S!leat06.itm~
  SAY NAME2     @9195
  SAY DESC      @9196

COPY ~ImprovedAnvil/itm/S!misc60.itm~      ~override/S!misc60.itm~
  SAY NAME2     @9197
  SAY DESC      @9198

COPY ~ImprovedAnvil/itm/S!sw18.itm~      ~override/S!sw18.itm~
  SAY NAME2     @9199
  SAY DESC      @9200

COPY ~ImprovedAnvil/itm/was2h.itm~      ~override/was2h.itm~
  SAY DESC      @9201

COPY ~ImprovedAnvil/itm/S!helm09.itm~      ~override/S!helm09.itm~
  SAY NAME2     @11097
  SAY DESC      @11098

COPY ~ImprovedAnvil/itm/S!scrl30.itm~      ~override/S!scrl30.itm~
  SAY NAME2     @11105
  SAY DESC      @11106

COPY ~ImprovedAnvil/itm/blun35.itm~      ~override/blun35.itm~

COPY ~ImprovedAnvil/itm/misc3a3.itm~      ~override/misc3a3.itm~

COPY ~ImprovedAnvil/itm/misc3a.itm~      ~override/misc3a.itm~

COPY ~ImprovedAnvil/itm/S!misc42.itm~      ~override/S!misc42.itm~

COPY ~ImprovedAnvil/itm/scrl5o.itm~      ~override/scrl5o.itm~

COPY ~ImprovedAnvil/itm/antiweb.itm~      ~override/antiweb.itm~

COPY ~ImprovedAnvil/itm/arowkc.itm~      ~override/arowkc.itm~

COPY ~ImprovedAnvil/itm/arrophe2.itm~      ~override/arrophe2.itm~

COPY ~ImprovedAnvil/itm/arow09.itm~      ~override/arow09.itm~

COPY ~ImprovedAnvil/itm/sahbolt.itm~      ~override/sahbolt.itm~

COPY ~ImprovedAnvil/itm/S!elegol.itm~      ~override/S!elegol.itm~

COPY ~ImprovedAnvil/itm/S!dlord.itm~      ~override/S!dlord.itm~

COPY ~ImprovedAnvil/itm/S!demgod.itm~      ~override/S!demgod.itm~

COPY ~ImprovedAnvil/itm/S!vlord.itm~      ~override/S!vlord.itm~

COPY ~ImprovedAnvil/itm/S!phound.itm~      ~override/S!phound.itm~

COPY ~ImprovedAnvil/itm/vampreg1.itm~      ~override/vampreg1.itm~

COPY ~ImprovedAnvil/itm/vampreg2.itm~      ~override/vampreg2.itm~

COPY ~ImprovedAnvil/itm/S!elemmu.itm~      ~override/S!elemmu.itm~

COPY ~ImprovedAnvil/itm/S!otyugh.itm~      ~override/S!otyugh.itm~

COPY ~ImprovedAnvil/itm/S!spider.itm~      ~override/S!spider.itm~

COPY ~ImprovedAnvil/itm/S!spide2.itm~      ~override/S!spide2.itm~

COPY ~ImprovedAnvil/itm/S!spide3.itm~      ~override/S!spide3.itm~

COPY ~ImprovedAnvil/itm/S!seeinv.itm~      ~override/S!seeinv.itm~

COPY ~ImprovedAnvil/itm/S!cat1.itm~      ~override/S!cat1.itm~

COPY ~ImprovedAnvil/itm/S!cat2.itm~      ~override/S!cat2.itm~

COPY ~ImprovedAnvil/itm/S!cat3.itm~      ~override/S!cat3.itm~

COPY ~ImprovedAnvil/itm/S!cat4.itm~      ~override/S!cat4.itm~

COPY ~ImprovedAnvil/itm/S!cat5.itm~      ~override/S!cat5.itm~

COPY ~ImprovedAnvil/itm/S!cat6.itm~      ~override/S!cat6.itm~

COPY ~ImprovedAnvil/itm/S!cat7.itm~      ~override/S!cat7.itm~

COPY ~ImprovedAnvil/itm/S!cat8.itm~      ~override/S!cat8.itm~

COPY ~ImprovedAnvil/itm/S!cat9.itm~      ~override/S!cat9.itm~

COPY ~ImprovedAnvil/itm/S!spideq.itm~      ~override/S!spideq.itm~

COPY ~ImprovedAnvil/itm/melfmet.itm~      ~override/melfmet.itm~

COPY ~ImprovedAnvil/itm/eneblade.itm~      ~override/eneblade.itm~

COPY ~ImprovedAnvil/itm/morsword.itm~      ~override/morsword.itm~

COPY ~ImprovedAnvil/itm/S!vipe3.itm~      ~override/S!vipe3.itm~

COPY ~ImprovedAnvil/itm/S!vipe2.itm~      ~override/S!vipe2.itm~

COPY ~ImprovedAnvil/itm/S!vipe1.itm~      ~override/S!vipe1.itm~

COPY ~ImprovedAnvil/itm/dragring.itm~      ~override/dragring.itm~

COPY ~ImprovedAnvil/itm/ringdemn.itm~      ~override/ringdemn.itm~

COPY ~ImprovedAnvil/itm/devaevil.itm~      ~override/devaevil.itm~

COPY ~ImprovedAnvil/itm/deva.itm~      ~override/deva.itm~

COPY ~ImprovedAnvil/itm/gith.itm~      ~override/gith.itm~

COPY ~ImprovedAnvil/itm/planetar.itm~      ~override/planetar.itm~

COPY ~ImprovedAnvil/itm/plat05.itm~      ~override/plat05.itm~

COPY ~ImprovedAnvil/itm/plat14.itm~      ~override/plat14.itm~

COPY ~ImprovedAnvil/itm/rakring.itm~      ~override/rakring.itm~

COPY ~ImprovedAnvil/itm/blakblad.itm~      ~override/blakblad.itm~

COPY ~ImprovedAnvil/itm/lich.itm~      ~override/lich.itm~

COPY ~ImprovedAnvil/itm/S!castt.itm~      ~override/S!castt.itm~

COPY ~ImprovedAnvil/itm/xbow14.itm~      ~override/xbow14.itm~

COPY ~ImprovedAnvil/itm/waninja.itm~      ~override/waninja.itm~

COPY ~ImprovedAnvil/itm/S!spideg.itm~      ~override/S!spideg.itm~

COPY ~ImprovedAnvil/itm/S!icegoa.itm~      ~override/S!icegoa.itm~

COPY ~ImprovedAnvil/itm/S!icegol.itm~      ~override/S!icegol.itm~

COPY ~ImprovedAnvil/itm/S!pasha.itm~      ~override/S!pasha.itm~

COPY ~ImprovedAnvil/itm/S!pasha2.itm~      ~override/S!pasha2.itm~

COPY ~ImprovedAnvil/itm/S!pasha3.itm~      ~override/S!pasha3.itm~

COPY ~ImprovedAnvil/itm/demilich.itm~      ~override/demilich.itm~

COPY ~ImprovedAnvil/itm/S!deshar.itm~      ~override/S!deshar.itm~

COPY ~ImprovedAnvil/itm/ring09.itm~      ~override/ring09.itm~

COPY ~ImprovedAnvil/itm/S!dracon.itm~      ~override/S!dracon.itm~

COPY ~ImprovedAnvil/itm/S!nishru.itm~      ~override/S!nishru.itm~

COPY ~ImprovedAnvil/itm/S!nishr2.itm~      ~override/S!nishr2.itm~

COPY ~ImprovedAnvil/itm/S!escim.itm~      ~override/S!escim.itm~

COPY ~ImprovedAnvil/itm/S!dopple.itm~      ~override/S!dopple.itm~

COPY ~ImprovedAnvil/itm/S!doppl2.itm~      ~override/S!doppl2.itm~

COPY ~ImprovedAnvil/itm/S!killer.itm~      ~override/S!killer.itm~

COPY ~ImprovedAnvil/itm/S!stoner.itm~      ~override/S!stoner.itm~

COPY ~ImprovedAnvil/itm/S!holdr.itm~      ~override/S!holdr.itm~

COPY ~ImprovedAnvil/itm/S!aclaw.itm~      ~override/S!aclaw.itm~

COPY ~ImprovedAnvil/itm/S!ultgol.itm~      ~override/S!ultgol.itm~

COPY ~ImprovedAnvil/itm/S!salam.itm~      ~override/S!salam.itm~

COPY ~ImprovedAnvil/itm/harm.itm~      ~override/harm.itm~

COPY ~ImprovedAnvil/itm/S!bag01.itm~      ~override/S!bag01.itm~
COPY ~ImprovedAnvil/itm/S!bag01.sto~      ~override/S!bag01.sto~

COPY ~ImprovedAnvil/itm/S!mitgol.itm~      ~override/S!mitgol.itm~

COPY ~ImprovedAnvil/itm/wand12.itm~      ~override/wand12.itm~

COPY ~ImprovedAnvil/itm/wand18.itm~      ~override/wand18.itm~

COPY ~ImprovedAnvil/itm/S!wonimp.itm~      ~override/S!wonimp.itm~

COPY ~ImprovedAnvil/itm/S!spidwh.itm~      ~override/S!spidwh.itm~

COPY ~ImprovedAnvil/itm/S!salam3.itm~      ~override/S!salam3.itm~

COPY ~ImprovedAnvil/itm/S!gormis.itm~      ~override/S!gormis.itm~

COPY ~ImprovedAnvil/itm/S!amber.itm~      ~override/S!amber.itm~

COPY ~ImprovedAnvil/itm/S!gorchr.itm~      ~override/S!gorchr.itm~

COPY ~ImprovedAnvil/itm/S!slasp2.itm~      ~override/S!slasp2.itm~

COPY ~ImprovedAnvil/itm/S!bdevil.itm~      ~override/S!bdevil.itm~

COPY ~ImprovedAnvil/itm/sw1h27.itm~      ~override/sw1h27.itm~

COPY ~ImprovedAnvil/itm/S!grvlch.itm~      ~override/S!grvlch.itm~

COPY ~ImprovedAnvil/itm/S!invis.itm~      ~override/S!invis.itm~

COPY ~ImprovedAnvil/itm/S!sling.itm~      ~override/S!sling.itm~

COPY ~ImprovedAnvil/itm/marili.itm~      ~override/marili.itm~

COPY ~ImprovedAnvil/itm/S!phoun2.itm~      ~override/S!phoun2.itm~

COPY ~ImprovedAnvil/itm/S!rakp.itm~      ~override/S!rakp.itm~

COPY ~ImprovedAnvil/itm/giafir2.itm~      ~override/giafir2.itm~

COPY ~ImprovedAnvil/itm/sendai.itm~      ~override/sendai.itm~

COPY ~ImprovedAnvil/itm/S!orcus.itm~      ~override/S!orcus.itm~

COPY ~ImprovedAnvil/itm/S!golbra.itm~      ~override/S!golbra.itm~

COPY ~ImprovedAnvil/itm/misca1.itm~      ~override/misca1.itm~

COPY ~ImprovedAnvil/itm/S!patric.itm~      ~override/S!patric.itm~

COPY ~ImprovedAnvil/itm/S!supgol.itm~      ~override/S!supgol.itm~

COPY ~ImprovedAnvil/itm/S!rune1.itm~      ~override/S!rune1.itm~

COPY ~ImprovedAnvil/itm/S!runef.itm~      ~override/S!runef.itm~

COPY ~ImprovedAnvil/itm/S!haegan.itm~      ~override/S!haegan.itm~

COPY ~ImprovedAnvil/itm/S!umar.itm~      ~override/S!umar.itm~

COPY ~ImprovedAnvil/itm/S!skel.itm~      ~override/S!skel.itm~

COPY ~ImprovedAnvil/itm/S!warden.itm~      ~override/S!warden.itm~

COPY ~ImprovedAnvil/itm/S!ancest.itm~      ~override/S!ancest.itm~

COPY ~ImprovedAnvil/itm/spidvo01.itm~      ~override/spidvo01.itm~

COPY ~ImprovedAnvil/itm/S!miss6.itm~      ~override/S!miss6.itm~

COPY ~ImprovedAnvil/itm/S!ctrly.itm~      ~override/S!ctrly.itm~

COPY ~ImprovedAnvil/itm/nishruu.itm~      ~override/nishruu.itm~

COPY ~ImprovedAnvil/itm/S!dracol.itm~      ~override/S!dracol.itm~

COPY ~ImprovedAnvil/itm/S!draco2.itm~      ~override/S!draco2.itm~

COPY ~ImprovedAnvil/itm/S!shadow.itm~      ~override/S!shadow.itm~

COPY ~ImprovedAnvil/itm/S!kpvipe.itm~      ~override/S!kpvipe.itm~

COPY ~ImprovedAnvil/itm/clck06.itm~      ~override/clck06.itm~

COPY ~ImprovedAnvil/itm/wa2shiel.itm~      ~override/wa2shiel.itm~

COPY ~ImprovedAnvil/itm/S!swansu.itm~      ~override/S!swansu.itm~

COPY ~ImprovedAnvil/itm/staf22.itm~      ~override/staf22.itm~

COPY ~ImprovedAnvil/itm/rods06.itm~      ~override/rods06.itm~

COPY ~ImprovedAnvil/itm/potn45.itm~      ~override/potn45.itm~

COPY ~ImprovedAnvil/itm/S!yuanti.itm~      ~override/S!yuanti.itm~

COPY ~ImprovedAnvil/itm/ring28.itm~      ~override/ring28.itm~

COPY ~ImprovedAnvil/itm/ring29.itm~      ~override/ring29.itm~

COPY ~ImprovedAnvil/itm/S!hlassa.itm~      ~override/S!hlassa.itm~

COPY ~ImprovedAnvil/itm/ring95.itm~      ~override/ring95.itm~

COPY ~ImprovedAnvil/itm/ring99.itm~      ~override/ring99.itm~

COPY ~ImprovedAnvil/itm/shld25.itm~      ~override/shld25.itm~

COPY ~ImprovedAnvil/itm/ax1h05.itm~      ~override/ax1h05.itm~

COPY ~ImprovedAnvil/itm/ax1h06.itm~      ~override/ax1h06.itm~

COPY ~ImprovedAnvil/itm/ax1h08.itm~      ~override/ax1h08.itm~

COPY ~ImprovedAnvil/itm/ax1h09.itm~      ~override/ax1h09.itm~

COPY ~ImprovedAnvil/itm/ax1h16.itm~      ~override/ax1h16.itm~

COPY ~ImprovedAnvil/itm/hamm06.itm~      ~override/hamm06.itm~

COPY ~ImprovedAnvil/itm/S!draggr.itm~      ~override/S!draggr.itm~

COPY ~ImprovedAnvil/itm/S!crawl.itm~      ~override/S!crawl.itm~

COPY ~ImprovedAnvil/itm/S!rat1.itm~      ~override/S!rat1.itm~

COPY ~ImprovedAnvil/itm/S!rat2.itm~      ~override/S!rat2.itm~

COPY ~ImprovedAnvil/itm/S!shados.itm~      ~override/S!shados.itm~

COPY ~ImprovedAnvil/itm/S!gswan.itm~      ~override/S!gswan.itm~

COPY ~ImprovedAnvil/itm/S!swanq.itm~      ~override/S!swanq.itm~

COPY ~ImprovedAnvil/itm/S!demili.itm~      ~override/S!demili.itm~

COPY ~ImprovedAnvil/itm/otyugh.itm~      ~override/otyugh.itm~

COPY ~ImprovedAnvil/itm/blun12.itm~      ~override/blun12.itm~

COPY ~ImprovedAnvil/itm/brdflute.itm~      ~override/brdflute.itm~

COPY ~ImprovedAnvil/itm/killsw01.itm~      ~override/killsw01.itm~

COPY ~ImprovedAnvil/itm/S!chaos.itm~      ~override/S!chaos.itm~

COPY ~ImprovedAnvil/itm/misc5c.itm~      ~override/misc5c.itm~

COPY ~ImprovedAnvil/itm/S!bheye.itm~      ~override/S!bheye.itm~

COPY ~ImprovedAnvil/itm/S!adaman.itm~      ~override/S!adaman.itm~

COPY ~ImprovedAnvil/itm/golfle.itm~      ~override/golfle.itm~

COPY ~ImprovedAnvil/itm/golcla.itm~      ~override/golcla.itm~

COPY ~ImprovedAnvil/itm/golsto.itm~      ~override/golsto.itm~

COPY ~ImprovedAnvil/itm/goliro.itm~      ~override/goliro.itm~

COPY ~ImprovedAnvil/itm/S!twist.itm~      ~override/S!twist.itm~

COPY ~ImprovedAnvil/itm/S!twist1.itm~      ~override/S!twist1.itm~

COPY ~ImprovedAnvil/itm/S!layen2.itm~      ~override/S!layen2.itm~

COPY ~ImprovedAnvil/itm/S!layene.itm~      ~override/S!layene.itm~

COPY ~ImprovedAnvil/itm/S!sion.itm~      ~override/S!sion.itm~

COPY ~ImprovedAnvil/itm/S!elegos.itm~      ~override/S!elegos.itm~

COPY ~ImprovedAnvil/itm/S!scrl03.itm~      ~override/S!scrl03.itm~

COPY ~ImprovedAnvil/itm/S!lavok.itm~      ~override/S!lavok.itm~

COPY ~ImprovedAnvil/itm/sw1h63.itm~      ~override/sw1h63.itm~

COPY ~ImprovedAnvil/itm/S!gith.itm~      ~override/S!gith.itm~

COPY ~ImprovedAnvil/itm/S!nevm4.itm~      ~override/S!nevm4.itm~

COPY ~ImprovedAnvil/itm/S!jailor.itm~      ~override/S!jailor.itm~

COPY ~ImprovedAnvil/itm/S!dblack.itm~      ~override/S!dblack.itm~

COPY ~ImprovedAnvil/itm/dragblaw.itm~      ~override/dragblaw.itm~

COPY ~ImprovedAnvil/itm/S!gorgit.itm~      ~override/S!gorgit.itm~

COPY ~ImprovedAnvil/itm/S!rak1.itm~      ~override/S!rak1.itm~

COPY ~ImprovedAnvil/itm/S!rak2.itm~      ~override/S!rak2.itm~

COPY ~ImprovedAnvil/itm/S!obsdem.itm~      ~override/S!obsdem.itm~

COPY ~ImprovedAnvil/itm/S!elder.itm~      ~override/S!elder.itm~

COPY ~ImprovedAnvil/itm/imp.itm~      ~override/imp.itm~

COPY ~ImprovedAnvil/itm/S!minota.itm~      ~override/S!minota.itm~

COPY ~ImprovedAnvil/itm/S!cleric.itm~      ~override/S!cleric.itm~

COPY ~ImprovedAnvil/itm/shille.itm~      ~override/shille.itm~

COPY ~ImprovedAnvil/itm/umber01.itm~      ~override/umber01.itm~

COPY ~ImprovedAnvil/itm/S!bongo2.itm~      ~override/S!bongo2.itm~

COPY ~ImprovedAnvil/itm/S!bongol.itm~      ~override/S!bongol.itm~

COPY ~ImprovedAnvil/itm/S!minhp1.itm~      ~override/S!minhp1.itm~

COPY ~ImprovedAnvil/itm/S!minhp2.itm~      ~override/S!minhp2.itm~

COPY ~ImprovedAnvil/itm/S!tombgu.itm~      ~override/S!tombgu.itm~

COPY ~ImprovedAnvil/itm/sw1h26.itm~      ~override/sw1h26.itm~

COPY ~ImprovedAnvil/itm/bearspir.itm~      ~override/bearspir.itm~

COPY ~ImprovedAnvil/itm/wolfspir.itm~      ~override/wolfspir.itm~

COPY ~ImprovedAnvil/itm/plyspid.itm~      ~override/plyspid.itm~

COPY ~ImprovedAnvil/itm/plyjelly.itm~      ~override/plyjelly.itm~

COPY ~ImprovedAnvil/itm/polyrat.itm~      ~override/polyrat.itm~

COPY ~ImprovedAnvil/itm/behold.itm~      ~override/behold.itm~

COPY ~ImprovedAnvil/itm/mdog1.itm~      ~override/mdog1.itm~

COPY ~ImprovedAnvil/itm/S!cerebu.itm~      ~override/S!cerebu.itm~

COPY ~ImprovedAnvil/itm/S!swnrng.itm~      ~override/S!swnrng.itm~

COPY ~ImprovedAnvil/itm/S!gtwist.itm~      ~override/S!gtwist.itm~

COPY ~ImprovedAnvil/itm/S!gtwiso.itm~      ~override/S!gtwiso.itm~

COPY ~ImprovedAnvil/itm/S!dragol.itm~      ~override/S!dragol.itm~

COPY ~ImprovedAnvil/itm/S!bodhi.itm~      ~override/S!bodhi.itm~

COPY ~ImprovedAnvil/itm/bootdriz.itm~      ~override/bootdriz.itm~

COPY ~ImprovedAnvil/itm/mistho.itm~      ~override/mistho.itm~

COPY ~ImprovedAnvil/itm/S!firmon.itm~      ~override/S!firmon.itm~

COPY ~ImprovedAnvil/itm/S!avatar.itm~      ~override/S!avatar.itm~

COPY ~ImprovedAnvil/itm/S!book01.itm~      ~override/S!book01.itm~

COPY ~ImprovedAnvil/itm/S!force2.itm~      ~override/S!force2.itm~

COPY ~ImprovedAnvil/itm/ringwolf.itm~      ~override/ringwolf.itm~

COPY ~ImprovedAnvil/itm/wolfgr.itm~      ~override/wolfgr.itm~

COPY ~ImprovedAnvil/itm/S!spidsu.itm~      ~override/S!spidsu.itm~

COPY ~ImprovedAnvil/itm/potn35.itm~      ~override/potn35.itm~

COPY ~ImprovedAnvil/itm/potn34.itm~      ~override/potn34.itm~

COPY ~ImprovedAnvil/itm/hamm10.itm~      ~override/hamm10.itm~

COPY ~ImprovedAnvil/itm/hamm11.itm~      ~override/hamm11.itm~

COPY ~ImprovedAnvil/itm/sw1h61.itm~      ~override/sw1h61.itm~

COPY ~ImprovedAnvil/itm/npstaf.itm~      ~override/npstaf.itm~

COPY ~ImprovedAnvil/itm/misc3m.itm~      ~override/misc3m.itm~

COPY ~ImprovedAnvil/itm/helm30.itm~      ~override/helm30.itm~

COPY ~ImprovedAnvil/itm/staf14.itm~      ~override/staf14.itm~

COPY ~ImprovedAnvil/itm/ring27.itm~      ~override/ring27.itm~

COPY ~ImprovedAnvil/itm/wand11.itm~      ~override/wand11.itm~

COPY ~ImprovedAnvil/itm/vamp.itm~      ~override/vamp.itm~

COPY ~ImprovedAnvil/itm/vamp1.itm~      ~override/vamp1.itm~

COPY ~ImprovedAnvil/itm/vamp2.itm~      ~override/vamp2.itm~

COPY ~ImprovedAnvil/itm/vamp3.itm~      ~override/vamp3.itm~

COPY ~ImprovedAnvil/itm/mistva.itm~      ~override/mistva.itm~

COPY ~ImprovedAnvil/itm/mistva2.itm~      ~override/mistva2.itm~

COPY ~ImprovedAnvil/itm/misc3l.itm~      ~override/misc3l.itm~

COPY ~ImprovedAnvil/itm/berserk.itm~      ~override/berserk.itm~

COPY ~ImprovedAnvil/itm/S!ntroll.itm~      ~override/S!ntroll.itm~

COPY ~ImprovedAnvil/itm/trollall.itm~      ~override/trollall.itm~

COPY ~ImprovedAnvil/itm/firern.itm~      ~override/firern.itm~

COPY ~ImprovedAnvil/itm/earthrn.itm~      ~override/earthrn.itm~

COPY ~ImprovedAnvil/itm/scrl8z.itm~      ~override/scrl8z.itm~

COPY ~ImprovedAnvil/itm/S!plwish.itm~      ~override/S!plwish.itm~

COPY ~ImprovedAnvil/itm/potn18.itm~      ~override/potn18.itm~

COPY ~ImprovedAnvil/itm/S!potn12.itm~      ~override/S!potn12.itm~

COPY ~ImprovedAnvil/itm/S!potn14.itm~      ~override/S!potn14.itm~

COPY ~ImprovedAnvil/itm/potn46.itm~      ~override/potn46.itm~

COPY ~ImprovedAnvil/itm/amsoul01.itm~      ~override/amsoul01.itm~

COPY ~ImprovedAnvil/itm/helm24.itm~      ~override/helm24.itm~

COPY ~ImprovedAnvil/itm/potn11.itm~      ~override/potn11.itm~

COPY ~ImprovedAnvil/itm/elemchan.itm~      ~override/elemchan.itm~

COPY ~ImprovedAnvil/itm/elemsunn.itm~      ~override/elemsunn.itm~

COPY ~ImprovedAnvil/itm/elemzaam.itm~      ~override/elemzaam.itm~

COPY ~ImprovedAnvil/itm/slaylive.itm~      ~override/slaylive.itm~

COPY ~ImprovedAnvil/itm/S!yuansu.itm~      ~override/S!yuansu.itm~

COPY ~ImprovedAnvil/itm/S!trolsu.itm~      ~override/S!trolsu.itm~

COPY ~ImprovedAnvil/itm/S!salasu.itm~      ~override/S!salasu.itm~

COPY ~ImprovedAnvil/itm/S!minosu.itm~      ~override/S!minosu.itm~

COPY ~ImprovedAnvil/itm/S!anacsu.itm~      ~override/S!anacsu.itm~

COPY ~ImprovedAnvil/itm/S!smilsu.itm~      ~override/S!smilsu.itm~

COPY ~ImprovedAnvil/itm/potn39.itm~      ~override/potn39.itm~

COPY ~ImprovedAnvil/itm/staf15.itm~      ~override/staf15.itm~

COPY ~ImprovedAnvil/itm/potn31.itm~      ~override/potn31.itm~

COPY ~ImprovedAnvil/itm/potn02.itm~      ~override/potn02.itm~

COPY ~ImprovedAnvil/itm/potn22.itm~      ~override/potn22.itm~

COPY ~ImprovedAnvil/itm/scrl04.itm~      ~override/scrl04.itm~

COPY ~ImprovedAnvil/itm/scrl05.itm~      ~override/scrl05.itm~

COPY ~ImprovedAnvil/itm/scrl06.itm~      ~override/scrl06.itm~

COPY ~ImprovedAnvil/itm/scrl5o.itm~      ~override/scrl5o.itm~

COPY ~ImprovedAnvil/itm/npchan.itm~      ~override/npchan.itm~

COPY ~ImprovedAnvil/itm/helm21.itm~      ~override/helm21.itm~

COPY ~ImprovedAnvil/itm/staf10.itm~      ~override/staf10.itm~

COPY ~ImprovedAnvil/itm/plytroll.itm~      ~override/plytroll.itm~

COPY ~ImprovedAnvil/itm/ghast1.itm~      ~override/ghast1.itm~

COPY ~ImprovedAnvil/itm/blun18.itm~      ~override/blun18.itm~

COPY ~ImprovedAnvil/itm/S!grlich.itm~      ~override/S!grlich.itm~

COPY ~ImprovedAnvil/itm/S!goliro.itm~      ~override/S!goliro.itm~

COPY ~ImprovedAnvil/itm/S!nobut1.itm~      ~override/S!nobut1.itm~

COPY ~ImprovedAnvil/itm/S!windma.itm~      ~override/S!windma.itm~

COPY ~ImprovedAnvil/itm/S!mircha.itm~      ~override/S!mircha.itm~

COPY ~ImprovedAnvil/itm/S!drsoul.itm~      ~override/S!drsoul.itm~

COPY ~ImprovedAnvil/itm/sw1h58.itm~      ~override/sw1h58.itm~

COPY ~ImprovedAnvil/itm/sw1h59.itm~      ~override/sw1h59.itm~

COPY ~ImprovedAnvil/itm/S!dempri.itm~      ~override/S!dempri.itm~

COPY ~ImprovedAnvil/itm/amul15.itm~      ~override/amul15.itm~

COPY ~ImprovedAnvil/itm/S!mom.itm~      ~override/S!mom.itm~

COPY ~ImprovedAnvil/itm/boot03.itm~      ~override/boot03.itm~

COPY ~ImprovedAnvil/itm/staf12.itm~      ~override/staf12.itm~

COPY ~ImprovedAnvil/itm/S!teltie.itm~      ~override/S!teltie.itm~

COPY ~ImprovedAnvil/itm/trollimm.itm~      ~override/trollimm.itm~

COPY ~ImprovedAnvil/itm/scrl8y.itm~      ~override/scrl8y.itm~

COPY ~ImprovedAnvil/itm/S!inqui1.itm~      ~override/S!inqui1.itm~

COPY ~ImprovedAnvil/itm/ax1h12.itm~      ~override/ax1h12.itm~

COPY ~ImprovedAnvil/itm/ax1h13.itm~      ~override/ax1h13.itm~

COPY ~ImprovedAnvil/itm/leat09.itm~      ~override/leat09.itm~

COPY ~ImprovedAnvil/itm/sw2h14.itm~      ~override/sw2h14.itm~

COPY ~ImprovedAnvil/itm/S!webgol.itm~      ~override/S!webgol.itm~

COPY ~ImprovedAnvil/itm/elemogre.itm~      ~override/elemogre.itm~

COPY ~ImprovedAnvil/itm/sw1h06.itm~      ~override/sw1h06.itm~

COPY_EXISTING ~helm01.itm~ ~override/helm14.itm~

COPY_EXISTING ~arow01.itm~ ~override/arow07.itm~

COPY_EXISTING ~shld04.itm~ ~override/shld24.itm~

COPY_EXISTING ~scrl15.itm~ ~override/scrl09.itm~

COPY_EXISTING ~sw1h48.itm~ ~override/wawak.itm~

COPY_EXISTING ~scrl9m.itm~ ~override/scrl9r.itm~

COPY_EXISTING ~potn11.itm~ ~override/potn40.itm~

COPY_EXISTING ~scrl9m.itm~ ~override/scrl9l.itm~

COPY_EXISTING ~scrl7m.itm~ ~override/scrl7v.itm~

COPY_EXISTING ~ax1h01.itm~ ~override/waaxe.itm~

COPY_EXISTING ~scrl6w.itm~ ~override/scrl6t.itm~

COPY_EXISTING ~amul09.itm~ ~override/amul17.itm~

COPY_EXISTING ~sw1h02.itm~ ~override/sw1h37.itm~

// Patching items //

COPY_EXISTING ~wa2harp.itm~ ~override/wa2harp.itm~
  WRITE_LONG  0x34   56000 // price

COPY_EXISTING ~xbow15.itm~ ~override/xbow15.itm~
  WRITE_LONG  0x34   26500 // price

COPY_EXISTING ~brac14.itm~ ~override/brac14.itm~
  WRITE_LONG  0x34   20000 // price

COPY_EXISTING ~brac15.itm~ ~override/brac15.itm~
  WRITE_LONG  0x34   32500 // price

COPY_EXISTING ~leat17.itm~ ~override/leat17.itm~
  WRITE_LONG  0x34   25000 // price

COPY_EXISTING ~bow11.itm~ ~override/bow11.itm~
  WRITE_LONG  0x34   16500 // price

COPY_EXISTING ~clck03.itm~ ~override/clck03.itm~
  WRITE_LONG  0x34   14000 // price

COPY_EXISTING ~xbow08.itm~ ~override/xbow08.itm~
  WRITE_LONG  0x34   13500 // price

COPY_EXISTING ~helm16.itm~ ~override/helm16.itm~
  WRITE_LONG  0x34   23670 // price

COPY_EXISTING ~blun19.itm~ ~override/blun19.itm~
  WRITE_LONG  0x34   14000 // price

COPY_EXISTING ~scrla4.itm~ ~override/scrla4.itm~
  WRITE_LONG  0x34    9000 // price

COPY_EXISTING ~sw1h33.itm~ ~override/sw1h33.itm~
  WRITE_LONG  0x34   25000 // price

COPY_EXISTING ~sw2h09.itm~ ~override/sw2h09.itm~
  WRITE_LONG  0x34   35000 // price

COPY_EXISTING ~wand13.itm~ ~override/wand13.itm~
  WRITE_LONG  0x34   50000 // price

COPY_EXISTING ~wand05.itm~ ~override/wand05.itm~
  WRITE_LONG  0x34   45000 // price

COPY_EXISTING ~wand06.itm~ ~override/wand06.itm~
  WRITE_LONG  0x34   50000 // price

COPY_EXISTING ~wand02.itm~ ~override/wand02.itm~
  WRITE_LONG  0x34   27000 // price

COPY_EXISTING ~wand03.itm~ ~override/wand03.itm~
  WRITE_LONG  0x34   10000 // price

COPY_EXISTING ~wand10.itm~ ~override/wand10.itm~
  WRITE_LONG  0x34   50000 // price

COPY_EXISTING ~wa2dak.itm~ ~override/wa2dak.itm~
  WRITE_LONG  0x34   28500 // price

COPY_EXISTING ~plat17.itm~ ~override/plat17.itm~
  WRITE_LONG  0x34   17000 // price

COPY_EXISTING ~scrl9z.itm~ ~override/scrl9z.itm~
  WRITE_LONG  0x34   10000 // price

COPY_EXISTING ~misc45.itm~ ~override/misc45.itm~
  WRITE_LONG  0x34    2500 // price

COPY_EXISTING ~misc44.itm~ ~override/misc44.itm~
  WRITE_LONG  0x34    2500 // price

COPY_EXISTING ~helm23.itm~ ~override/helm23.itm~
  WRITE_LONG  0x34   25000 // price

COPY_EXISTING ~wa2halb.itm~ ~override/wa2halb.itm~
  WRITE_LONG  0x34   30000 // price

COPY_EXISTING ~gberry.itm~ ~override/gberry.itm~
  WRITE_LONG  0x34       0 // price
  WRITE_SHORT  0x38     40 // stack amount

COPY_EXISTING ~misc3h.itm~ ~override/misc3h.itm~
  WRITE_LONG  0x34    1500 // price

COPY_EXISTING ~shld22.itm~ ~override/shld22.itm~
  WRITE_LONG  0x34   30000 // price

COPY_EXISTING ~sper10.itm~ ~override/sper10.itm~
  WRITE_LONG  0x34   40000 // price

COPY_EXISTING ~misc3o.itm~ ~override/misc3o.itm~
  WRITE_LONG  0x34    5000 // price

COPY_EXISTING ~belt12.itm~ ~override/belt12.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~belt13.itm~ ~override/belt13.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~belt14.itm~ ~override/belt14.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~bow19a.itm~ ~override/bow19a.itm~
  WRITE_LONG  0x34    5000 // price

COPY_EXISTING ~bow19b.itm~ ~override/bow19b.itm~
  WRITE_LONG  0x34    2500 // price

COPY_EXISTING ~sw1h40.itm~ ~override/sw1h40.itm~
  WRITE_LONG  0x34   28000 // price

COPY_EXISTING ~helm03.itm~ ~override/helm03.itm~
  WRITE_LONG  0x34   21000 // price

COPY_EXISTING ~scrl08.itm~ ~override/scrl08.itm~
  WRITE_LONG  0x34    1500 // price

COPY_EXISTING ~shld21.itm~ ~override/shld21.itm~
  WRITE_LONG  0x34   10000 // price

COPY_EXISTING ~bow10.itm~ ~override/bow10.itm~
  WRITE_LONG  0x34   15000 // price

COPY_EXISTING ~dart08.itm~ ~override/dart08.itm~
  WRITE_LONG  0x34    5000 // price

COPY_EXISTING ~bow14.itm~ ~override/bow14.itm~
  WRITE_LONG  0x34   15000 // price

COPY_EXISTING ~slng07.itm~ ~override/slng07.itm~
  WRITE_LONG  0x34   27000 // price

COPY_EXISTING ~sw1h68.itm~ ~override/sw1h68.itm~
  WRITE_LONG  0x34   20000 // price

COPY_EXISTING ~potn56.itm~ ~override/potn56.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl5a.itm~ ~override/scrl5a.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~stardart.itm~ ~override/stardart.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn24.itm~ ~override/S!potn04.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn43.itm~ ~override/S!potn05.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn08.itm~ ~override/S!potn06.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn30.itm~ ~override/S!potn07.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn36.itm~ ~override/S!potn08.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn39.itm~ ~override/S!potn09.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn44.itm~ ~override/S!potn10.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn23.itm~ ~override/S!potn11.itm~
  WRITE_LONG  0x34       0 // price
  WRITE_SHORT  0x38      5 // stack amount
  WRITE_ASCII 0x3a ~IPOTN14~ #8
  WRITE_ASCII 0x58 ~CPOTN13~ #8

COPY_EXISTING ~potn32.itm~ ~override/S!potn13.itm~
  WRITE_LONG  0x34       0 // price
  WRITE_SHORT  0x38      5 // stack amount
  WRITE_ASCII 0x3a ~IPOTN20~ #8
  WRITE_ASCII 0x58 ~CPOTN41~ #8

COPY_EXISTING ~potn19.itm~ ~override/S!potn15.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn42.itm~ ~override/S!potn16.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn52.itm~ ~override/S!potn17.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn17.itm~ ~override/S!potn18.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~potn10.itm~ ~override/S!potn19.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl56.itm~ ~override/S!scrl11.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl61.itm~ ~override/S!scrl12.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~restore.itm~ ~override/S!scrl13.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl15.itm~ ~override/S!scrl14.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl82.itm~ ~override/S!scrl15.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl85.itm~ ~override/S!scrl16.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl1t.itm~ ~override/S!scrl17.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl93.itm~ ~override/S!scrl18.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl73.itm~ ~override/S!scrl19.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl76.itm~ ~override/S!scrl20.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~scrl6w.itm~ ~override/S!scrl22.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~clck12.itm~ ~override/clck12.itm~
  READ_BYTE 0x2f "kitusability4"
  WRITE_BYTE 0x2f ("%kitusability4%" BOR 0b00000100)

COPY_EXISTING ~clck13.itm~ ~override/clck13.itm~
  READ_BYTE 0x2f "kitusability4"
  WRITE_BYTE 0x2f ("%kitusability4%" BOR 0b00000100)

COPY_EXISTING ~clck14.itm~ ~override/clck14.itm~
  READ_BYTE 0x2f "kitusability4"
  WRITE_BYTE 0x2f ("%kitusability4%" BOR 0b00000100)

COPY_EXISTING ~clck15.itm~ ~override/clck15.itm~
  READ_BYTE 0x2f "kitusability4"
  WRITE_BYTE 0x2f ("%kitusability4%" BOR 0b00000100)

COPY_EXISTING ~clck16.itm~ ~override/clck16.itm~
  READ_BYTE 0x2f "kitusability4"
  WRITE_BYTE 0x2f ("%kitusability4%" BOR 0b00000100)

COPY_EXISTING ~clck17.itm~ ~override/clck17.itm~
  READ_BYTE 0x2f "kitusability4"
  WRITE_BYTE 0x2f ("%kitusability4%" BOR 0b00000100)

COPY_EXISTING ~clck18.itm~ ~override/clck18.itm~
  READ_BYTE 0x2f "kitusability4"
  WRITE_BYTE 0x2f ("%kitusability4%" BOR 0b00000100)

COPY_EXISTING ~clck29.itm~ ~override/clck29.itm~
  READ_BYTE 0x2f "kitusability4"
  WRITE_BYTE 0x2f ("%kitusability4%" BOR 0b00000100)

COPY_EXISTING ~wand08.itm~ ~override/S!wand01.itm~
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b00000001) // set unsellable flag

COPY_EXISTING ~wand03.itm~ ~override/S!wand02.itm~
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b00000001) // set unsellable flag

COPY_EXISTING ~wand06.itm~ ~override/S!wand03.itm~
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b00000001) // set unsellable flag

COPY_EXISTING ~key20.itm~ ~override/key20.itm~
  WRITE_LONG  0x34    5000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~misc9x.itm~ ~override/misc9x.itm~
  WRITE_LONG  0x34    2500 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~misc9y.itm~ ~override/misc9y.itm~
  WRITE_LONG  0x34    5000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~key26.itm~ ~override/key26.itm~
  WRITE_LONG  0x34    5000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~misc8q.itm~ ~override/misc8q.itm~
  WRITE_LONG  0x34    2000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~misca7.itm~ ~override/misca7.itm~
  WRITE_LONG  0x34    6000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~misca8.itm~ ~override/misca8.itm~
  WRITE_LONG  0x34    6000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~miscbv.itm~ ~override/miscbv.itm~
  WRITE_LONG  0x34    6000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~book94.itm~ ~override/book94.itm~
  WRITE_LONG  0x34    8000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~book95.itm~ ~override/book95.itm~
  WRITE_LONG  0x34    5000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~book96.itm~ ~override/book96.itm~
  WRITE_LONG  0x34    5000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~key23.itm~ ~override/key23.itm~
  WRITE_LONG  0x34    4000 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111110) // clear unsellable flag

COPY_EXISTING ~sw1h50.itm~ ~override/sw1h50.itm~
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BAND 0b11111011) // clear movable flag

COPY_EXISTING ~sgrasp01.itm~ ~override/sgrasp01.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp02.itm~ ~override/sgrasp02.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp03.itm~ ~override/sgrasp03.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp04.itm~ ~override/sgrasp04.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp05.itm~ ~override/sgrasp05.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp06.itm~ ~override/sgrasp06.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp07.itm~ ~override/sgrasp07.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp08.itm~ ~override/sgrasp08.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp09.itm~ ~override/sgrasp09.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp10.itm~ ~override/sgrasp10.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp11.itm~ ~override/sgrasp11.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp12.itm~ ~override/sgrasp12.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp13.itm~ ~override/sgrasp13.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp14.itm~ ~override/sgrasp14.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp15.itm~ ~override/sgrasp15.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp16.itm~ ~override/sgrasp16.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp17.itm~ ~override/sgrasp17.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp18.itm~ ~override/sgrasp18.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp19.itm~ ~override/sgrasp19.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~sgrasp20.itm~ ~override/sgrasp20.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~serious.itm~ ~override/serious.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~critical.itm~ ~override/critical.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~dwwhip.itm~ ~override/dwwhip.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~halb11.itm~ ~override/halb11.itm~
  WRITE_LONG  0x60   5 // magic level

COPY_EXISTING ~hamm04.itm~ ~override/hamm04.itm~
  WRITE_LONG  0x60   1 // magic level

COPY_EXISTING ~dragred1.itm~ ~override/dragred1.itm~
  WRITE_LONG  0x60   4 // magic level

COPY_EXISTING ~mindflay.itm~ ~override/mindflay.itm~
  WRITE_LONG  0x60   3 // magic level

COPY_EXISTING ~senspi01.itm~ ~override/senspi01.itm~
  WRITE_LONG  0x60   4 // magic level

COPY_EXISTING ~blun10.itm~ ~override/blun10.itm~
  WRITE_LONG  0x34    8000 // price
  WRITE_LONG  0x60   1 // magic level

COPY_EXISTING ~plyflind.itm~ ~override/plyflind.itm~
  WRITE_LONG  0x60   1 // magic level

COPY_EXISTING ~blun23.itm~ ~override/blun23.itm~
  WRITE_LONG  0x60   2 // magic level

COPY_EXISTING ~catlio.itm~ ~override/S!catlio.itm~
  WRITE_LONG  0x60   3 // magic level

COPY_EXISTING ~maurezhi.itm~ ~override/maurezhi.itm~
  WRITE_LONG  0x60   5 // magic level
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~lionspir.itm~ ~override/lionspir.itm~
  WRITE_LONG  0x60   3 // magic level
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~snakspir.itm~ ~override/snakspir.itm~
  WRITE_LONG  0x60   3 // magic level
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~demabi01.itm~ ~override/demabi01.itm~
  WRITE_LONG  0x60   4 // magic level
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~stalkesu.itm~ ~override/stalkesu.itm~
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~dax1h01.itm~ ~override/dax1h01.itm~
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~wolfm.itm~ ~override/wolfm.itm~
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~mumgrew.itm~ ~override/mumgrew.itm~
  WRITE_LONG  0x60   4 // magic level
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~mummyw.itm~ ~override/mummyw.itm~
  WRITE_LONG  0x60   3 // magic level
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~B3-24.itm~ ~override/B3-24.itm~
  WRITE_LONG  0x60   3 // magic level
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~mistpo.itm~ ~override/mistpo.itm~
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~mistcd.itm~ ~override/mistcd.itm~
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~sw1h46.itm~ ~override/sw1h46.itm~
  READ_LONG 0x1e "usability"
  WRITE_LONG 0x1e ("%usability%" BOR 1073741824)

COPY_EXISTING ~sw1h47.itm~ ~override/sw1h47.itm~
  READ_LONG 0x1e "usability"
  WRITE_LONG 0x1e ("%usability%" BOR 1073741824)

COPY_EXISTING ~scrl8o.itm~ ~override/scrl8o.itm~
  SAY DESC      @269

COPY_EXISTING ~scrl1q.itm~ ~override/scrl1q.itm~
  SAY DESC      @283

COPY_EXISTING ~scrla3.itm~ ~override/scrla3.itm~
  SAY DESC      @364

COPY_EXISTING ~scrl1x.itm~ ~override/scrl5j.itm~

COPY_EXISTING ~ring30.itm~ ~override/ring30.itm~
  SAY DESC      @9020
  WRITE_BYTE  0x32      9 // min charisma
  WRITE_LONG  0x34   27000 // price

COPY_EXISTING ~scrl71.itm~ ~override/scrl71.itm~
  SAY DESC      @9503

COPY_EXISTING ~arow01.itm~ ~override/arow01.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~arow05.itm~ ~override/arow05.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~arow12.itm~ ~override/arow12.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~arow16.itm~ ~override/arow16.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~bolt01.itm~ ~override/bolt01.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~bolt04.itm~ ~override/bolt04.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~bull01.itm~ ~override/bull01.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~bull02.itm~ ~override/bull02.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~bull03.itm~ ~override/bull03.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~bull05.itm~ ~override/bull05.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~bull06.itm~ ~override/bull06.itm~
  WRITE_SHORT  0x38    200 // stack amount

COPY_EXISTING ~sw1h24.itm~ ~override/sw1h24.itm~
  SAY NAME2     @9044
  WRITE_LONG  0x60   1 // magic level

COPY_EXISTING ~scrl94.itm~ ~override/scrl94.itm~
  SAY DESC      @9049

COPY_EXISTING ~scrl8x.itm~ ~override/S!scrl04.itm~
  SAY DESC      @9050

COPY_EXISTING ~scrl5f.itm~ ~override/scrl5f.itm~
  SAY DESC      @9051

COPY_EXISTING ~hamm03.itm~ ~override/hamm03.itm~
  SAY NAME2     @9112

COPY_EXISTING ~hamm05.itm~ ~override/hamm05.itm~
  SAY NAME2     @9113

COPY_EXISTING ~scrlal.itm~ ~override/scrlal.itm~
  SAY DESC      @9520

COPY_EXISTING ~scrl90.itm~ ~override/scrl90.itm~
  SAY NAME2     #12017

COPY_EXISTING ~scrl87.itm~ ~override/scrl87.itm~
  SAY NAME2     #12042

COPY_EXISTING ~miscag.itm~ ~override/S!misc53.itm~
  SAY NAME2     @9179
  SAY DESC      @9180
  WRITE_LONG  0x34       0 // price
  READ_BYTE 0x18 "ioffset"
  WRITE_BYTE "0x18" ("%ioffset%" BOR 0b01000000) // sets magical flag

COPY_EXISTING ~S!misc53.itm~ ~override/S!misc54.itm~
  SAY NAME2     @9181
  SAY DESC      @9182
  WRITE_ASCII 0x3a ~S!mirrin~ #8

COPY_EXISTING ~S!misc53.itm~ ~override/S!misc55.itm~
  SAY NAME2     @9183
  SAY DESC      @9182
  WRITE_ASCII 0x3a ~S!mir1in~ #8

COPY_EXISTING ~S!misc53.itm~ ~override/S!misc56.itm~
  SAY NAME2     @9184
  SAY DESC      @9182
  WRITE_ASCII 0x3a ~S!mir2in~ #8

COPY_EXISTING ~S!misc44.itm~ ~override/S!misc57.itm~
  SAY NAME2     @9185
  SAY DESC      @9186

COPY_EXISTING ~S!misc36.itm~ ~override/S!misc58.itm~
  SAY NAME2     @9187
  SAY DESC      @9188

COPY_EXISTING ~scrl5t.itm~ ~override/scrl5t.itm~
  READ_BYTE 0x2f "kit_usability"
  WRITE_BYTE 0x2f ("%kit_usability%" BAND 0b11111010)

COPY_EXISTING ~scrl1w.itm~ ~override/scrl1w.itm~
  READ_BYTE 0x2f "kit_usability"
  WRITE_BYTE 0x2f ("%kit_usability%" BAND 0b11111010)

COPY_EXISTING ~scrl7u.itm~ ~override/scrl7u.itm~
  READ_BYTE 0x2f "kit_usability"
  WRITE_BYTE 0x2f ("%kit_usability%" BAND 0b11111110)

COPY_EXISTING ~SCRLA9.itm~ ~override/SCRLA9.itm~
  WRITE_LONG  0x34       0 // price

COPY_EXISTING ~wand03.itm~ ~override/rods03.itm~

COPY_EXISTING ~scrl8s.itm~ ~override/scrl8f.itm~

COPY_EXISTING ~scrl8s.itm~ ~override/scrl8n.itm~

COPY_EXISTING ~scrl2g.itm~ ~override/scrl8x.itm~

COPY_EXISTING ~scrlal.itm~ ~override/scrlar.itm~

COPY_EXISTING ~scrl8g.itm~ ~override/scrl8i.itm~

COPY_EXISTING ~scrl8y.itm~ ~override/scrl9b.itm~

COPY_EXISTING ~scrl7s.itm~ ~override/scrl7k.itm~

COPY_EXISTING ~scrl1v.itm~ ~override/scrl2b.itm~

COPY_EXISTING ~scrl9q.itm~ ~override/scrl9n.itm~

COPY_EXISTING ~scrl3g.itm~ ~override/S!scrl21.itm~

COPY_EXISTING ~sw2h11.itm~ ~override/sw2h06.itm~

COPY_EXISTING ~sw2h11.itm~ ~override/sw2h13.itm~

COPY_EXISTING ~book61.itm~ ~override/book34.itm~

COPY_EXISTING ~boot06.itm~ ~override/boot12.itm~

COPY_EXISTING ~plat04.itm~ ~override/plat21.itm~

COPY_EXISTING ~helm08.itm~ ~override/helm02.itm~

COPY_EXISTING ~wand03.itm~ ~override/wand19.itm~

COPY_EXISTING ~ring43.itm~ ~override/ring42.itm~

COPY_EXISTING ~scrl76.itm~ ~override/scrl3g.itm~

COPY_EXISTING ~ring10.itm~ ~override/ring34.itm~

COPY_EXISTING ~scrl2d.itm~ ~override/scrl7d.itm~

COPY_EXISTING ~scrl1e.itm~ ~override/scrl6g.itm~

COPY_EXISTING ~scrlam.itm~ ~override/scrl9j.itm~

COPY_EXISTING ~mfist3.itm~ ~override/mfist3.itm~
  SAY NAME1 @10190
  SAY NAME2 @10190
  WRITE_LONG  0x60 1 // +1 enchantment

  READ_BYTE  0x18 "flags01"
  WRITE_BYTE 0x18 ("%flags01%" BOR 0b01000000)  // adds magical flag

  READ_LONG   0x64 "ability_offset"
  READ_SHORT  0x68 "ability_num"
  FOR (index = 0; index < ability_num; index = index + 1) BEGIN
    READ_SHORT  ("%ability_offset%" + ("%index%" * 0x38)) "type"
    PATCH_IF ("%type%" = 1) BEGIN // melee check
      WRITE_SHORT ("%ability_offset%" + 0x14 + ("%index%" * 0x38)) 1  // THAC0 bonus
      WRITE_SHORT ("%ability_offset%" + 0x1a + ("%index%" * 0x38)) 1  // damage bonus
    END
  END
  BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~mfist4.itm~ ~override/mfist4.itm~
  SAY NAME1 @10191
  SAY NAME2 @10191
  WRITE_LONG  0x60 2 // +2 enchantment

  READ_LONG   0x64 "ability_offset"
  READ_SHORT  0x68 "ability_num"
  FOR (index = 0; index < ability_num; index = index + 1) BEGIN
    READ_SHORT  ("%ability_offset%" + ("%index%" * 0x38)) "type"
    PATCH_IF ("%type%" = 1) BEGIN // melee check
      WRITE_SHORT ("%ability_offset%" + 0x16 + ("%index%" * 0x38)) 6  // Dice size
      WRITE_SHORT ("%ability_offset%" + 0x18 + ("%index%" * 0x38)) 2  // Number of dice
      WRITE_SHORT ("%ability_offset%" + 0x14 + ("%index%" * 0x38)) 2  // THAC0 bonus
      WRITE_SHORT ("%ability_offset%" + 0x1a + ("%index%" * 0x38)) 2  // damage bonus
    END
  END
  BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~mfist5.itm~ ~override/mfist5.itm~
  SAY NAME1 @10192
  SAY NAME2 @10192
  WRITE_LONG  0x60 3 // +3 enchantment

  READ_LONG   0x64 "ability_offset"
  READ_SHORT  0x68 "ability_num"
  FOR (index = 0; index < ability_num; index = index + 1) BEGIN
    READ_SHORT  ("%ability_offset%" + ("%index%" * 0x38)) "type"
    PATCH_IF ("%type%" = 1) BEGIN // melee check
      WRITE_SHORT ("%ability_offset%" + 0x16 + ("%index%" * 0x38)) 6  // Dice size
      WRITE_SHORT ("%ability_offset%" + 0x18 + ("%index%" * 0x38)) 2  // Number of dice
      WRITE_SHORT ("%ability_offset%" + 0x14 + ("%index%" * 0x38)) 3  // THAC0 bonus
      WRITE_SHORT ("%ability_offset%" + 0x1a + ("%index%" * 0x38)) 3  // damage bonus
    END
  END
  BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~mfist6.itm~ ~override/mfist6.itm~
  SAY NAME1 @10192
  SAY NAME2 @10192
  WRITE_LONG  0x60 3 // +3 enchantment

  READ_LONG   0x64 "ability_offset"
  READ_SHORT  0x68 "ability_num"
  FOR (index = 0; index < ability_num; index = index + 1) BEGIN
    READ_SHORT  ("%ability_offset%" + ("%index%" * 0x38)) "type"
    PATCH_IF ("%type%" = 1) BEGIN // melee check
      WRITE_SHORT ("%ability_offset%" + 0x16 + ("%index%" * 0x38)) 8  // Dice size
      WRITE_SHORT ("%ability_offset%" + 0x18 + ("%index%" * 0x38)) 2  // Number of dice
      WRITE_SHORT ("%ability_offset%" + 0x14 + ("%index%" * 0x38)) 3  // THAC0 bonus
      WRITE_SHORT ("%ability_offset%" + 0x1a + ("%index%" * 0x38)) 3  // damage bonus
    END
  END
  BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~mfist7.itm~ ~override/mfist7.itm~
  SAY NAME1 @10193
  SAY NAME2 @10193
  WRITE_LONG  0x60 4 // +4 enchantment

  READ_LONG   0x64 "ability_offset"
  READ_SHORT  0x68 "ability_num"
  FOR (index = 0; index < ability_num; index = index + 1) BEGIN
    READ_SHORT  ("%ability_offset%" + ("%index%" * 0x38)) "type"
    PATCH_IF ("%type%" = 1) BEGIN // melee check
      WRITE_SHORT ("%ability_offset%" + 0x16 + ("%index%" * 0x38)) 8  // Dice size
      WRITE_SHORT ("%ability_offset%" + 0x18 + ("%index%" * 0x38)) 2  // Number of dice
      WRITE_SHORT ("%ability_offset%" + 0x14 + ("%index%" * 0x38)) 4  // THAC0 bonus
      WRITE_SHORT ("%ability_offset%" + 0x1a + ("%index%" * 0x38)) 4  // damage bonus
    END
  END
  BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~mfist8.itm~ ~override/mfist8.itm~
  SAY NAME1 @10193
  SAY NAME2 @10193
  WRITE_LONG  0x60 4 // +4 enchantment

  READ_LONG   0x64 "ability_offset"
  READ_SHORT  0x68 "ability_num"
  FOR (index = 0; index < ability_num; index = index + 1) BEGIN
    READ_SHORT  ("%ability_offset%" + ("%index%" * 0x38)) "type"
    PATCH_IF ("%type%" = 1) BEGIN // melee check
      WRITE_SHORT ("%ability_offset%" + 0x16 + ("%index%" * 0x38)) 10  // Dice size
      WRITE_SHORT ("%ability_offset%" + 0x18 + ("%index%" * 0x38)) 2  // Number of dice
      WRITE_SHORT ("%ability_offset%" + 0x14 + ("%index%" * 0x38)) 4  // THAC0 bonus
      WRITE_SHORT ("%ability_offset%" + 0x1a + ("%index%" * 0x38)) 4  // damage bonus
    END
  END
  BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~mfist8.itm~ ~override/mfist9.itm~
  SAY NAME1 @10194
  SAY NAME2 @10194
  WRITE_LONG  0x60 5 // +5 enchantment

  READ_LONG   0x64 "ability_offset"
  READ_SHORT  0x68 "ability_num"
  FOR (index = 0; index < ability_num; index = index + 1) BEGIN
    READ_SHORT  ("%ability_offset%" + ("%index%" * 0x38)) "type"
    PATCH_IF ("%type%" = 1) BEGIN // melee check
      WRITE_SHORT ("%ability_offset%" + 0x14 + ("%index%" * 0x38)) 5  // THAC0 bonus
      WRITE_SHORT ("%ability_offset%" + 0x1a + ("%index%" * 0x38)) 5  // damage bonus
    END
  END
  BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~mfist8.itm~ ~override/mfist10.itm~
  SAY NAME1 @10194
  SAY NAME2 @10194
  WRITE_LONG  0x60 5 // +5 enchantment

  READ_LONG   0x64 "ability_offset"
  READ_SHORT  0x68 "ability_num"
  FOR (index = 0; index < ability_num; index = index + 1) BEGIN
    READ_SHORT  ("%ability_offset%" + ("%index%" * 0x38)) "type"
    PATCH_IF ("%type%" = 1) BEGIN // melee check
      WRITE_SHORT ("%ability_offset%" + 0x16 + ("%index%" * 0x38)) 8  // Dice size
      WRITE_SHORT ("%ability_offset%" + 0x18 + ("%index%" * 0x38)) 3  // Number of dice
      WRITE_SHORT ("%ability_offset%" + 0x14 + ("%index%" * 0x38)) 5  // THAC0 bonus
      WRITE_SHORT ("%ability_offset%" + 0x1a + ("%index%" * 0x38)) 5  // damage bonus
    END
  END
  BUT_ONLY_IF_IT_CHANGES

// Copying creatures //

COPY ~ImprovedAnvil/cre/S!djinn.cre~         ~override/S!djinn.cre~
  SAY NAME1     @400
  SAY NAME2     @400

COPY ~ImprovedAnvil/cre/fsdragon.cre~         ~override/fsdragon.cre~
  SAY NAME1     @401
  SAY NAME2     @401

COPY ~ImprovedAnvil/cre/pirsea03.cre~         ~override/pirsea03.cre~
  SAY NAME1     @402
  SAY NAME2     @402

COPY ~ImprovedAnvil/cre/S!berser.cre~         ~override/S!berser.cre~
  SAY NAME1     @403
  SAY NAME2     @403

COPY ~ImprovedAnvil/cre/bdturm04.cre~         ~override/bdturm04.cre~
  SAY NAME1     @404
  SAY NAME2     @404

COPY ~ImprovedAnvil/cre/pbhunt03.cre~         ~override/pbhunt03.cre~
  SAY NAME1     @405
  SAY NAME2     @405

COPY ~ImprovedAnvil/cre/ceskel01.cre~         ~override/ceskel01.cre~
  SAY NAME1     @406
  SAY NAME2     @406

COPY ~ImprovedAnvil/cre/S!gem.cre~         ~override/S!gem.cre~
  SAY NAME1     @407
  SAY NAME2     @407

COPY ~ImprovedAnvil/cre/S!gem2.cre~         ~override/S!gem2.cre~
  SAY NAME1     @407
  SAY NAME2     @407

COPY ~ImprovedAnvil/cre/S!gem3.cre~         ~override/S!gem3.cre~
  SAY NAME1     @407
  SAY NAME2     @407

COPY ~ImprovedAnvil/cre/S!gems.cre~         ~override/S!gems.cre~
  SAY NAME1     @407
  SAY NAME2     @407

COPY ~ImprovedAnvil/cre/S!gemt.cre~         ~override/S!gemt.cre~
  SAY NAME1     @407
  SAY NAME2     @407

COPY ~ImprovedAnvil/cre/S!geml.cre~         ~override/S!geml.cre~
  SAY NAME1     @407
  SAY NAME2     @407

COPY ~ImprovedAnvil/cre/amtarc01.cre~         ~override/amtarc01.cre~
  SAY NAME1     @407
  SAY NAME2     @407

COPY ~ImprovedAnvil/cre/hlarch.cre~         ~override/hlarch.cre~
  SAY NAME1     @407
  SAY NAME2     @407

COPY ~ImprovedAnvil/cre/S!roegol.cre~         ~override/S!roegol.cre~
  SAY NAME1     @407
  SAY NAME2     @407

COPY ~ImprovedAnvil/cre/S!gemc.cre~         ~override/S!gemc.cre~
  SAY NAME1     @407
  SAY NAME2     @407

COPY ~ImprovedAnvil/cre/S!gemg.cre~         ~override/S!gemg.cre~
  SAY NAME1     @407
  SAY NAME2     @407

COPY ~ImprovedAnvil/cre/S!gemw.cre~         ~override/S!gemw.cre~
  SAY NAME1     @407
  SAY NAME2     @407

COPY ~ImprovedAnvil/cre/S!gemgy.cre~         ~override/S!gemgy.cre~
  SAY NAME1     @407
  SAY NAME2     @407

COPY ~ImprovedAnvil/cre/S!gemhel.cre~         ~override/S!gemhel.cre~
  SAY NAME1     @407
  SAY NAME2     @407

COPY ~ImprovedAnvil/cre/S!gemwi.cre~         ~override/S!gemwi.cre~
  SAY NAME1     @407
  SAY NAME2     @407

COPY ~ImprovedAnvil/cre/S!ggem.cre~         ~override/S!ggem.cre~
  SAY NAME1     @407
  SAY NAME2     @407

COPY ~ImprovedAnvil/cre/S!gemran.cre~         ~override/S!gemran.cre~
  SAY NAME1     @407
  SAY NAME2     @407

COPY ~ImprovedAnvil/cre/S!gemrnd.cre~         ~override/S!gemrnd.cre~
  SAY NAME1     @407
  SAY NAME2     @407

COPY ~ImprovedAnvil/cre/amtcle01.cre~         ~override/amtcle01.cre~
  SAY NAME1     @408
  SAY NAME2     @408

COPY ~ImprovedAnvil/cre/S!elegol.cre~         ~override/S!elegol.cre~
  SAY NAME1     @409
  SAY NAME2     @409

COPY ~ImprovedAnvil/cre/S!elego1.cre~         ~override/S!elego1.cre~
  SAY NAME1     @409
  SAY NAME2     @409

COPY ~ImprovedAnvil/cre/S!elego2.cre~         ~override/S!elego2.cre~
  SAY NAME1     @409
  SAY NAME2     @409

COPY ~ImprovedAnvil/cre/S!elego3.cre~         ~override/S!elego3.cre~
  SAY NAME1     @409
  SAY NAME2     @409

COPY ~ImprovedAnvil/cre/S!elego4.cre~         ~override/S!elego4.cre~
  SAY NAME1     @409
  SAY NAME2     @409

COPY ~ImprovedAnvil/cre/S!elego5.cre~         ~override/S!elego5.cre~
  SAY NAME1     @409
  SAY NAME2     @409

COPY ~ImprovedAnvil/cre/S!elegob.cre~         ~override/S!elegob.cre~
  SAY NAME1     @409
  SAY NAME2     @409

COPY ~ImprovedAnvil/cre/S!elegoe.cre~         ~override/S!elegoe.cre~
  SAY NAME1     @409
  SAY NAME2     @409

COPY ~ImprovedAnvil/cre/S!elegog.cre~         ~override/S!elegog.cre~
  SAY NAME1     @409
  SAY NAME2     @409

COPY ~ImprovedAnvil/cre/S!elegoh.cre~         ~override/S!elegoh.cre~
  SAY NAME1     @409
  SAY NAME2     @409

COPY ~ImprovedAnvil/cre/S!elegow.cre~         ~override/S!elegow.cre~
  SAY NAME1     @409
  SAY NAME2     @409

COPY ~ImprovedAnvil/cre/S!elegra.cre~         ~override/S!elegra.cre~
  SAY NAME1     @409
  SAY NAME2     @409

COPY ~ImprovedAnvil/cre/S!elegwi.cre~         ~override/S!elegwi.cre~
  SAY NAME1     @409
  SAY NAME2     @409

COPY ~ImprovedAnvil/cre/S!elernd.cre~         ~override/S!elernd.cre~
  SAY NAME1     @409
  SAY NAME2     @409

COPY ~ImprovedAnvil/cre/S!coin.cre~         ~override/S!coin.cre~
  SAY NAME1     @410
  SAY NAME2     @410

COPY ~ImprovedAnvil/cre/S!coin2.cre~         ~override/S!coin2.cre~
  SAY NAME1     @410
  SAY NAME2     @410

COPY ~ImprovedAnvil/cre/S!coin3.cre~         ~override/S!coin3.cre~
  SAY NAME1     @410
  SAY NAME2     @410

COPY ~ImprovedAnvil/cre/ppiron.cre~         ~override/ppiron.cre~
  SAY NAME1     @410
  SAY NAME2     @410

COPY ~ImprovedAnvil/cre/S!coinb.cre~         ~override/S!coinb.cre~
  SAY NAME1     @410
  SAY NAME2     @410

COPY ~ImprovedAnvil/cre/S!coinc.cre~         ~override/S!coinc.cre~
  SAY NAME1     @410
  SAY NAME2     @410

COPY ~ImprovedAnvil/cre/S!coinco.cre~         ~override/S!coinco.cre~
  SAY NAME1     @410
  SAY NAME2     @410

COPY ~ImprovedAnvil/cre/S!coing.cre~         ~override/S!coing.cre~
  SAY NAME1     @410
  SAY NAME2     @410

COPY ~ImprovedAnvil/cre/S!coinw.cre~         ~override/S!coinw.cre~
  SAY NAME1     @410
  SAY NAME2     @410

COPY ~ImprovedAnvil/cre/S!coinwi.cre~         ~override/S!coinwi.cre~
  SAY NAME1     @410
  SAY NAME2     @410

COPY ~ImprovedAnvil/cre/S!coingy.cre~         ~override/S!coingy.cre~
  SAY NAME1     @410
  SAY NAME2     @410

COPY ~ImprovedAnvil/cre/S!coinhe.cre~         ~override/S!coinhe.cre~
  SAY NAME1     @410
  SAY NAME2     @410

COPY ~ImprovedAnvil/cre/S!coinra.cre~         ~override/S!coinra.cre~
  SAY NAME1     @410
  SAY NAME2     @410

COPY ~ImprovedAnvil/cre/S!coins.cre~         ~override/S!coins.cre~
  SAY NAME1     @410
  SAY NAME2     @410

COPY ~ImprovedAnvil/cre/S!coirnd.cre~         ~override/S!coirnd.cre~
  SAY NAME1     @410
  SAY NAME2     @410

COPY ~ImprovedAnvil/cre/S!gcoin.cre~         ~override/S!gcoin.cre~
  SAY NAME1     @410
  SAY NAME2     @410

COPY ~ImprovedAnvil/cre/S!skel.cre~         ~override/S!skel.cre~
  SAY NAME1     @411
  SAY NAME2     @411

COPY ~ImprovedAnvil/cre/S!skel2.cre~         ~override/S!skel2.cre~
  SAY NAME1     @411
  SAY NAME2     @411

COPY ~ImprovedAnvil/cre/S!skel3.cre~         ~override/S!skel3.cre~
  SAY NAME1     @411
  SAY NAME2     @411

COPY ~ImprovedAnvil/cre/S!skeld.cre~         ~override/S!skeld.cre~
  SAY NAME1     @411
  SAY NAME2     @411

COPY ~ImprovedAnvil/cre/S!skell1.cre~         ~override/S!skell1.cre~
  SAY NAME1     @411
  SAY NAME2     @411

COPY ~ImprovedAnvil/cre/S!skell2.cre~         ~override/S!skell2.cre~
  SAY NAME1     @411
  SAY NAME2     @411

COPY ~ImprovedAnvil/cre/S!skell3.cre~         ~override/S!skell3.cre~
  SAY NAME1     @411
  SAY NAME2     @411

COPY ~ImprovedAnvil/cre/S!skell4.cre~         ~override/S!skell4.cre~
  SAY NAME1     @411
  SAY NAME2     @411

COPY ~ImprovedAnvil/cre/S!skell5.cre~         ~override/S!skell5.cre~
  SAY NAME1     @411
  SAY NAME2     @411

COPY ~ImprovedAnvil/cre/S!skelpp.cre~         ~override/S!skelpp.cre~
  SAY NAME1     @411
  SAY NAME2     @411

COPY ~ImprovedAnvil/cre/S!skelr2.cre~         ~override/S!skelr2.cre~
  SAY NAME1     @411
  SAY NAME2     @411

COPY ~ImprovedAnvil/cre/S!skels.cre~         ~override/S!skels.cre~
  SAY NAME1     @411
  SAY NAME2     @411

COPY ~ImprovedAnvil/cre/S!skelsu.cre~         ~override/S!skelsu.cre~
  SAY NAME1     @411
  SAY NAME2     @411

COPY ~ImprovedAnvil/cre/S!dlord.cre~         ~override/S!dlord.cre~
  SAY NAME1     @412
  SAY NAME2     @412

COPY ~ImprovedAnvil/cre/S!phound.cre~         ~override/S!phound.cre~
  SAY NAME1     @413
  SAY NAME2     @413

COPY ~ImprovedAnvil/cre/S!phoun3.cre~         ~override/S!phoun3.cre~
  SAY NAME1     @413
  SAY NAME2     @413

COPY ~ImprovedAnvil/cre/ppguard1.cre~         ~override/ppguard1.cre~
  SAY NAME1     @414
  SAY NAME2     @414

COPY ~ImprovedAnvil/cre/ppguard2.cre~         ~override/ppguard2.cre~
  SAY NAME1     @414
  SAY NAME2     @414

COPY ~ImprovedAnvil/cre/ppguard3.cre~         ~override/ppguard3.cre~
  SAY NAME1     @414
  SAY NAME2     @414

COPY ~ImprovedAnvil/cre/S!vlord.cre~         ~override/S!vlord.cre~
  SAY NAME1     @415
  SAY NAME2     @415

COPY ~ImprovedAnvil/cre/S!demgod.cre~         ~override/S!demgod.cre~
  SAY NAME1     @416
  SAY NAME2     @416

COPY ~ImprovedAnvil/cre/S!minion.cre~         ~override/S!minion.cre~
  SAY NAME1     @417
  SAY NAME2     @417

COPY ~ImprovedAnvil/cre/S!minhel.cre~         ~override/S!minhel.cre~
  SAY NAME1     @417
  SAY NAME2     @417

COPY ~ImprovedAnvil/cre/S!elemmu.cre~         ~override/S!elemmu.cre~
  SAY NAME1     @418
  SAY NAME2     @418

COPY ~ImprovedAnvil/cre/S!otyugh.cre~         ~override/S!otyugh.cre~
  SAY NAME1     @419
  SAY NAME2     @419

COPY ~ImprovedAnvil/cre/S!otyugd.cre~         ~override/S!otyugd.cre~
  SAY NAME1     @419
  SAY NAME2     @419

COPY ~ImprovedAnvil/cre/S!otyug2.cre~         ~override/S!otyug2.cre~
  SAY NAME1     @419
  SAY NAME2     @419

COPY ~ImprovedAnvil/cre/S!dryad.cre~         ~override/S!dryad.cre~
  SAY NAME1     @420
  SAY NAME2     @420

COPY ~ImprovedAnvil/cre/S!spider.cre~         ~override/S!spider.cre~
  SAY NAME1     @421
  SAY NAME2     @421

COPY ~ImprovedAnvil/cre/S!spgrov.cre~         ~override/S!spgrov.cre~
  SAY NAME1     @421
  SAY NAME2     @421

COPY ~ImprovedAnvil/cre/S!spidrh.cre~         ~override/S!spidrh.cre~
  SAY NAME1     @421
  SAY NAME2     @421

COPY ~ImprovedAnvil/cre/S!spide2.cre~         ~override/S!spide2.cre~
  SAY NAME1     @422
  SAY NAME2     @422

COPY ~ImprovedAnvil/cre/S!spid2h.cre~         ~override/S!spid2h.cre~
  SAY NAME1     @422
  SAY NAME2     @422

COPY ~ImprovedAnvil/cre/S!spide3.cre~         ~override/S!spide3.cre~
  SAY NAME1     @423
  SAY NAME2     @423

COPY ~ImprovedAnvil/cre/S!cat1.cre~         ~override/S!cat1.cre~
  SAY NAME1     @424
  SAY NAME2     @424

COPY ~ImprovedAnvil/cre/S!cat2.cre~         ~override/S!cat2.cre~
  SAY NAME1     @424
  SAY NAME2     @424

COPY ~ImprovedAnvil/cre/S!cat3.cre~         ~override/S!cat3.cre~
  SAY NAME1     @424
  SAY NAME2     @424

COPY ~ImprovedAnvil/cre/S!cat4.cre~         ~override/S!cat4.cre~
  SAY NAME1     @424
  SAY NAME2     @424

COPY ~ImprovedAnvil/cre/S!cat5.cre~         ~override/S!cat5.cre~
  SAY NAME1     @424
  SAY NAME2     @424

COPY ~ImprovedAnvil/cre/S!cat6.cre~         ~override/S!cat6.cre~
  SAY NAME1     @424
  SAY NAME2     @424

COPY ~ImprovedAnvil/cre/S!cat7.cre~         ~override/S!cat7.cre~
  SAY NAME1     @424
  SAY NAME2     @424

COPY ~ImprovedAnvil/cre/S!cat8.cre~         ~override/S!cat8.cre~
  SAY NAME1     @424
  SAY NAME2     @424

COPY ~ImprovedAnvil/cre/S!cat9.cre~         ~override/S!cat9.cre~
  SAY NAME1     @424
  SAY NAME2     @424

COPY ~ImprovedAnvil/cre/S!slave.cre~         ~override/S!slave.cre~
  SAY NAME1     @425
  SAY NAME2     @425

COPY ~ImprovedAnvil/cre/S!spideq.cre~         ~override/S!spideq.cre~
  SAY NAME1     @426
  SAY NAME2     @426

COPY ~ImprovedAnvil/cre/S!spidsu.cre~         ~override/S!spidsu.cre~
  SAY NAME1     @427
  SAY NAME2     @427

COPY ~ImprovedAnvil/cre/S!palad.cre~         ~override/S!palad.cre~
  SAY NAME1     @428
  SAY NAME2     @428

COPY ~ImprovedAnvil/cre/S!rune1.cre~         ~override/S!rune1.cre~
  SAY NAME1     @429
  SAY NAME2     @429

COPY ~ImprovedAnvil/cre/S!rune2.cre~         ~override/S!rune2.cre~
  SAY NAME1     @430
  SAY NAME2     @430

COPY ~ImprovedAnvil/cre/S!runef2.cre~         ~override/S!runef2.cre~
  SAY NAME1     @430
  SAY NAME2     @430

COPY ~ImprovedAnvil/cre/S!rune3.cre~         ~override/S!rune3.cre~
  SAY NAME1     @431
  SAY NAME2     @431

COPY ~ImprovedAnvil/cre/S!runef3.cre~         ~override/S!runef3.cre~
  SAY NAME1     @431
  SAY NAME2     @431

COPY ~ImprovedAnvil/cre/S!vipe3.cre~         ~override/S!vipe3.cre~
  SAY NAME1     @432
  SAY NAME2     @432

COPY ~ImprovedAnvil/cre/S!vipe2.cre~         ~override/S!vipe2.cre~
  SAY NAME1     @433
  SAY NAME2     @433

COPY ~ImprovedAnvil/cre/S!vipe1.cre~         ~override/S!vipe1.cre~
  SAY NAME1     @434
  SAY NAME2     @434

COPY ~ImprovedAnvil/cre/S!gypsy.cre~         ~override/S!gypsy.cre~
  SAY NAME1     @435
  SAY NAME2     @435

COPY ~ImprovedAnvil/cre/S!gypgod.cre~         ~override/S!gypgod.cre~
  SAY NAME1     @435
  SAY NAME2     @435

COPY ~ImprovedAnvil/cre/sewrak01.cre~         ~override/sewrak01.cre~
  SAY NAME1     @436
  SAY NAME2     @436

COPY ~ImprovedAnvil/cre/S!rak2.cre~         ~override/S!rak2.cre~
  SAY NAME1     @436
  SAY NAME2     @436

COPY ~ImprovedAnvil/cre/S!rak2g.cre~         ~override/S!rak2g.cre~
  SAY NAME1     @436
  SAY NAME2     @436

COPY ~ImprovedAnvil/cre/S!rak2r.cre~         ~override/S!rak2r.cre~
  SAY NAME1     @436
  SAY NAME2     @436

COPY ~ImprovedAnvil/cre/S!rakgy2.cre~         ~override/S!rakgy2.cre~
  SAY NAME1     @436
  SAY NAME2     @436

COPY ~ImprovedAnvil/cre/S!rak1.cre~         ~override/S!rak1.cre~
  SAY NAME1     @437
  SAY NAME2     @437

COPY ~ImprovedAnvil/cre/S!rak1s.cre~         ~override/S!rak1s.cre~
  SAY NAME1     @437
  SAY NAME2     @437

COPY ~ImprovedAnvil/cre/S!rakgyp.cre~         ~override/S!rakgyp.cre~
  SAY NAME1     @437
  SAY NAME2     @437

COPY ~ImprovedAnvil/cre/S!nrak.cre~         ~override/S!nrak.cre~
  SAY NAME1     @437
  SAY NAME2     @437

COPY ~ImprovedAnvil/cre/S!order.cre~         ~override/S!order.cre~
  SAY NAME1     @438
  SAY NAME2     @438

COPY ~ImprovedAnvil/cre/S!lady1.cre~         ~override/S!lady1.cre~
  SAY NAME1     @439
  SAY NAME2     @439

COPY ~ImprovedAnvil/cre/S!lady2.cre~         ~override/S!lady2.cre~
  SAY NAME1     @440
  SAY NAME2     @440

COPY ~ImprovedAnvil/cre/S!ladygy.cre~         ~override/S!ladygy.cre~
  SAY NAME1     @440
  SAY NAME2     @440

COPY ~ImprovedAnvil/cre/S!ladyde.cre~         ~override/S!ladyde.cre~
  SAY NAME1     @440
  SAY NAME2     @440

COPY ~ImprovedAnvil/cre/S!ladyhe.cre~         ~override/S!ladyhe.cre~
  SAY NAME1     @440
  SAY NAME2     @440

COPY ~ImprovedAnvil/cre/S!lady3.cre~         ~override/S!lady3.cre~
  SAY NAME1     @441
  SAY NAME2     @441

COPY ~ImprovedAnvil/cre/S!lady4.cre~         ~override/S!lady4.cre~
  SAY NAME1     @441
  SAY NAME2     @441

COPY ~ImprovedAnvil/cre/S!hlady3.cre~         ~override/S!hlady3.cre~
  SAY NAME1     @441
  SAY NAME2     @441

COPY ~ImprovedAnvil/cre/S!spidbo.cre~         ~override/S!spidbo.cre~
  SAY NAME1     @442
  SAY NAME2     @442

COPY ~ImprovedAnvil/cre/S!spided.cre~         ~override/S!spided.cre~
  SAY NAME1     @442
  SAY NAME2     @442

COPY ~ImprovedAnvil/cre/S!spidet.cre~         ~override/S!spidet.cre~
  SAY NAME1     @442
  SAY NAME2     @442

COPY ~ImprovedAnvil/cre/S!spideg.cre~         ~override/S!spideg.cre~
  SAY NAME1     @442
  SAY NAME2     @442

COPY ~ImprovedAnvil/cre/S!senspi.cre~         ~override/S!senspi.cre~
  SAY NAME1     @442
  SAY NAME2     @442

COPY ~ImprovedAnvil/cre/S!spideh.cre~         ~override/S!spideh.cre~
  SAY NAME1     @442
  SAY NAME2     @442

COPY ~ImprovedAnvil/cre/S!spidgr.cre~         ~override/S!spidgr.cre~
  SAY NAME1     @442
  SAY NAME2     @442

COPY ~ImprovedAnvil/cre/S!pasha.cre~         ~override/S!pasha.cre~
  SAY NAME1     @443
  SAY NAME2     @443

COPY ~ImprovedAnvil/cre/S!pasha2.cre~         ~override/S!pasha2.cre~
  SAY NAME1     @443
  SAY NAME2     @443

COPY ~ImprovedAnvil/cre/S!limak.cre~         ~override/S!limak.cre~
  SAY NAME1     @444
  SAY NAME2     @444

COPY ~ImprovedAnvil/cre/S!nishru.cre~         ~override/S!nishru.cre~
  SAY NAME1     @445
  SAY NAME2     @445

COPY ~ImprovedAnvil/cre/S!efreet.cre~         ~override/S!efreet.cre~
  SAY NAME1     @446
  SAY NAME2     @446

COPY ~ImprovedAnvil/cre/S!efree2.cre~         ~override/S!efree2.cre~
  SAY NAME1     @446
  SAY NAME2     @446

COPY ~ImprovedAnvil/cre/S!roshan.cre~         ~override/S!roshan.cre~
  SAY NAME1     @447
  SAY NAME2     @447

COPY ~ImprovedAnvil/cre/S!rosha2.cre~         ~override/S!rosha2.cre~
  SAY NAME1     @447
  SAY NAME2     @447

COPY ~ImprovedAnvil/cre/S!trollk.cre~         ~override/S!trollk.cre~
  SAY NAME1     @448
  SAY NAME2     @448

COPY ~ImprovedAnvil/cre/S!trollq.cre~         ~override/S!trollq.cre~
  SAY NAME1     @449
  SAY NAME2     @449

COPY ~ImprovedAnvil/cre/S!auriel.cre~         ~override/S!auriel.cre~
  SAY NAME1     @450
  SAY NAME2     @450

COPY ~ImprovedAnvil/cre/S!aurie2.cre~         ~override/S!aurie2.cre~
  SAY NAME1     @450
  SAY NAME2     @450

COPY ~ImprovedAnvil/cre/S!aurie3.cre~         ~override/S!aurie3.cre~
  SAY NAME1     @450
  SAY NAME2     @450

COPY ~ImprovedAnvil/cre/S!dopple.cre~         ~override/S!dopple.cre~
  SAY NAME1     @451
  SAY NAME2     @451

COPY ~ImprovedAnvil/cre/S!domran.cre~         ~override/S!domran.cre~
  SAY NAME1     @452
  SAY NAME2     @452

COPY ~ImprovedAnvil/cre/S!dompal.cre~         ~override/S!dompal.cre~
  SAY NAME1     @453
  SAY NAME2     @453

COPY ~ImprovedAnvil/cre/S!killer.cre~         ~override/S!killer.cre~
  SAY NAME1     @454
  SAY NAME2     @454

COPY ~ImprovedAnvil/cre/S!illgol.cre~         ~override/S!illgol.cre~
  SAY NAME1     @455
  SAY NAME2     @455

COPY ~ImprovedAnvil/cre/S!illvam.cre~         ~override/S!illvam.cre~
  SAY NAME1     @456
  SAY NAME2     @456

COPY ~ImprovedAnvil/cre/S!runef.cre~         ~override/S!runef.cre~
  SAY NAME1     @457
  SAY NAME2     @457

COPY ~ImprovedAnvil/cre/S!amarie.cre~         ~override/S!amarie.cre~
  SAY NAME1     @458
  SAY NAME2     @458

COPY ~ImprovedAnvil/cre/S!amari2.cre~         ~override/S!amari2.cre~
  SAY NAME1     @458
  SAY NAME2     @458

COPY ~ImprovedAnvil/cre/S!ammar.cre~         ~override/S!ammar.cre~
  SAY NAME1     @459
  SAY NAME2     @459

COPY ~ImprovedAnvil/cre/S!ammar2.cre~         ~override/S!ammar2.cre~
  SAY NAME1     @460
  SAY NAME2     @460

COPY ~ImprovedAnvil/cre/S!senpet.cre~         ~override/S!senpet.cre~
  SAY NAME1     @461
  SAY NAME2     @461

COPY ~ImprovedAnvil/cre/S!salam.cre~         ~override/S!salam.cre~
  SAY NAME1     @462
  SAY NAME2     @462

COPY ~ImprovedAnvil/cre/S!salam2.cre~         ~override/S!salam2.cre~
  SAY NAME1     @462
  SAY NAME2     @462

COPY ~ImprovedAnvil/cre/S!salam3.cre~         ~override/S!salam3.cre~
  SAY NAME1     @462
  SAY NAME2     @462

COPY ~ImprovedAnvil/cre/S!salam4.cre~         ~override/S!salam4.cre~
  SAY NAME1     @462
  SAY NAME2     @462

COPY ~ImprovedAnvil/cre/S!ultgg1.cre~         ~override/S!ultgg1.cre~
  SAY NAME1     @463
  SAY NAME2     @463

COPY ~ImprovedAnvil/cre/S!ultgg2.cre~         ~override/S!ultgg2.cre~
  SAY NAME1     @463
  SAY NAME2     @463

COPY ~ImprovedAnvil/cre/S!ultgol.cre~         ~override/S!ultgol.cre~
  SAY NAME1     @463
  SAY NAME2     @463

COPY ~ImprovedAnvil/cre/S!ultgoa.cre~         ~override/S!ultgoa.cre~
  SAY NAME1     @463
  SAY NAME2     @463

COPY ~ImprovedAnvil/cre/S!ultgod.cre~         ~override/S!ultgod.cre~
  SAY NAME1     @463
  SAY NAME2     @463

COPY ~ImprovedAnvil/cre/S!mitgol.cre~         ~override/S!mitgol.cre~
  SAY NAME1     @464
  SAY NAME2     @464

COPY ~ImprovedAnvil/cre/rumar03.cre~         ~override/rumar03.cre~
  SAY NAME1     @465
  SAY NAME2     @465

COPY ~ImprovedAnvil/cre/S!spidwh.cre~         ~override/S!spidwh.cre~
  SAY NAME1     @466
  SAY NAME2     @466

COPY ~ImprovedAnvil/cre/S!spidwf.cre~         ~override/S!spidwf.cre~
  SAY NAME1     @466
  SAY NAME2     @466

COPY ~ImprovedAnvil/cre/S!spidwd.cre~         ~override/S!spidwd.cre~
  SAY NAME1     @466
  SAY NAME2     @466

COPY ~ImprovedAnvil/cre/S!spidwr.cre~         ~override/S!spidwr.cre~
  SAY NAME1     @466
  SAY NAME2     @466

COPY ~ImprovedAnvil/cre/S!spiwd2.cre~         ~override/S!spiwd2.cre~
  SAY NAME1     @466
  SAY NAME2     @466

COPY ~ImprovedAnvil/cre/S!spiwd3.cre~         ~override/S!spiwd3.cre~
  SAY NAME1     @466
  SAY NAME2     @466

COPY ~ImprovedAnvil/cre/S!spidpp.cre~         ~override/S!spidpp.cre~
  SAY NAME1     @466
  SAY NAME2     @466

COPY ~ImprovedAnvil/cre/S!gormis.cre~         ~override/S!gormis.cre~
  SAY NAME1     @467
  SAY NAME2     @467

COPY ~ImprovedAnvil/cre/S!amber.cre~         ~override/S!amber.cre~
  SAY NAME1     @468
  SAY NAME2     @468

COPY ~ImprovedAnvil/cre/S!amber2.cre~         ~override/S!amber2.cre~
  SAY NAME1     @468
  SAY NAME2     @468

COPY ~ImprovedAnvil/cre/S!amber3.cre~         ~override/S!amber3.cre~
  SAY NAME1     @468
  SAY NAME2     @468

COPY ~ImprovedAnvil/cre/S!amber4.cre~         ~override/S!amber4.cre~
  SAY NAME1     @468
  SAY NAME2     @468

COPY ~ImprovedAnvil/cre/S!amberd.cre~         ~override/S!amberd.cre~
  SAY NAME1     @468
  SAY NAME2     @468

COPY ~ImprovedAnvil/cre/S!amberg.cre~         ~override/S!amberg.cre~
  SAY NAME1     @468
  SAY NAME2     @468

COPY ~ImprovedAnvil/cre/S!ambers.cre~         ~override/S!ambers.cre~
  SAY NAME1     @468
  SAY NAME2     @468

COPY ~ImprovedAnvil/cre/S!slasp1.cre~         ~override/S!slasp1.cre~
  SAY NAME1     @469
  SAY NAME2     @469

COPY ~ImprovedAnvil/cre/S!slasp2.cre~         ~override/S!slasp2.cre~
  SAY NAME1     @469
  SAY NAME2     @469

COPY ~ImprovedAnvil/cre/S!bdevil.cre~         ~override/S!bdevil.cre~
  SAY NAME1     @470
  SAY NAME2     @470

COPY ~ImprovedAnvil/cre/S!bdevit.cre~         ~override/S!bdevit.cre~
  SAY NAME1     @470
  SAY NAME2     @470

COPY ~ImprovedAnvil/cre/grvlch01.cre~         ~override/grvlch01.cre~
  SAY NAME1     @471
  SAY NAME2     @471

COPY ~ImprovedAnvil/cre/S!grlch1.cre~         ~override/S!grlch1.cre~
  SAY NAME1     @471
  SAY NAME2     @471

COPY ~ImprovedAnvil/cre/S!grlch2.cre~         ~override/S!grlch2.cre~
  SAY NAME1     @471
  SAY NAME2     @471

COPY ~ImprovedAnvil/cre/S!grlch3.cre~         ~override/S!grlch3.cre~
  SAY NAME1     @471
  SAY NAME2     @471

COPY ~ImprovedAnvil/cre/S!grlch4.cre~         ~override/S!grlch4.cre~
  SAY NAME1     @471
  SAY NAME2     @471

COPY ~ImprovedAnvil/cre/S!grlch5.cre~         ~override/S!grlch5.cre~
  SAY NAME1     @471
  SAY NAME2     @471

COPY ~ImprovedAnvil/cre/S!grlch6.cre~         ~override/S!grlch6.cre~
  SAY NAME1     @471
  SAY NAME2     @471

COPY ~ImprovedAnvil/cre/S!grlch7.cre~         ~override/S!grlch7.cre~
  SAY NAME1     @471
  SAY NAME2     @471

COPY ~ImprovedAnvil/cre/S!grlch8.cre~         ~override/S!grlch8.cre~
  SAY NAME1     @471
  SAY NAME2     @471

COPY ~ImprovedAnvil/cre/S!glchra.cre~         ~override/S!glchra.cre~
  SAY NAME1     @471
  SAY NAME2     @471

COPY ~ImprovedAnvil/cre/S!mlar.cre~         ~override/S!mlar.cre~
  SAY NAME1     @472
  SAY NAME2     @472

COPY ~ImprovedAnvil/cre/S!hrack.cre~         ~override/S!hrack.cre~
  SAY NAME1     @473
  SAY NAME2     @473

COPY ~ImprovedAnvil/cre/gorgit.cre~         ~override/gorgit.cre~
  SAY NAME1     @474
  SAY NAME2     @474

COPY ~ImprovedAnvil/cre/S!runewa.cre~         ~override/S!runewa.cre~
  SAY NAME1     @475
  SAY NAME2     @475

COPY ~ImprovedAnvil/cre/teltief3.cre~         ~override/teltief3.cre~
  SAY NAME1     @476
  SAY NAME2     @476

COPY ~ImprovedAnvil/cre/S!phoun2.cre~         ~override/S!phoun2.cre~
  SAY NAME1     @477
  SAY NAME2     @477

COPY ~ImprovedAnvil/cre/S!rakp.cre~         ~override/S!rakp.cre~
  SAY NAME1     @478
  SAY NAME2     @478

COPY ~ImprovedAnvil/cre/S!orcus.cre~         ~override/S!orcus.cre~
  SAY NAME1     @479
  SAY NAME2     @479

COPY ~ImprovedAnvil/cre/S!supgol.cre~         ~override/S!supgol.cre~
  SAY NAME1     @480
  SAY NAME2     @480

COPY ~ImprovedAnvil/cre/S!supgow.cre~         ~override/S!supgow.cre~
  SAY NAME1     @480
  SAY NAME2     @480

COPY ~ImprovedAnvil/cre/S!tanthf.cre~         ~override/S!tanthf.cre~
  SAY NAME1     @481
  SAY NAME2     @481

COPY ~ImprovedAnvil/cre/yaga02.cre~         ~override/yaga02.cre~
  SAY NAME1     @482
  SAY NAME2     @482

COPY ~ImprovedAnvil/cre/yaga05.cre~         ~override/yaga05.cre~
  SAY NAME1     @483
  SAY NAME2     @483

COPY ~ImprovedAnvil/cre/S!ancest.cre~         ~override/S!ancest.cre~
  SAY NAME1     @484
  SAY NAME2     @484

COPY ~ImprovedAnvil/cre/S!spy2.cre~         ~override/S!spy2.cre~
  SAY NAME1     @485
  SAY NAME2     @485

COPY ~ImprovedAnvil/cre/S!cghost.cre~         ~override/S!cghost.cre~
  SAY NAME1     @486
  SAY NAME2     @486

COPY ~ImprovedAnvil/cre/S!cghos2.cre~         ~override/S!cghos2.cre~
  SAY NAME1     @486
  SAY NAME2     @486

COPY ~ImprovedAnvil/cre/S!dracol.cre~         ~override/S!dracol.cre~
  SAY NAME1     @487
  SAY NAME2     @487

COPY ~ImprovedAnvil/cre/S!shadow.cre~         ~override/S!shadow.cre~
  SAY NAME1     @488
  SAY NAME2     @488

COPY ~ImprovedAnvil/cre/S!shado2.cre~         ~override/S!shado2.cre~
  SAY NAME1     @488
  SAY NAME2     @488

COPY ~ImprovedAnvil/cre/S!gghost.cre~         ~override/S!gghost.cre~
  SAY NAME1     @489
  SAY NAME2     @489

COPY ~ImprovedAnvil/cre/S!kpvipe.cre~         ~override/S!kpvipe.cre~
  SAY NAME1     @490
  SAY NAME2     @490

COPY ~ImprovedAnvil/cre/S!swansu.cre~         ~override/S!swansu.cre~
  SAY NAME1     @491
  SAY NAME2     @491

COPY ~ImprovedAnvil/cre/S!swanme.cre~         ~override/S!swanme.cre~
  SAY NAME1     @491
  SAY NAME2     @491

COPY ~ImprovedAnvil/cre/S!draggr.cre~         ~override/S!draggr.cre~
  SAY NAME1     @492
  SAY NAME2     @492

COPY ~ImprovedAnvil/cre/sewcc.cre~         ~override/sewcc.cre~
  SAY NAME1     @493
  SAY NAME2     @493

COPY ~ImprovedAnvil/cre/S!rat1.cre~         ~override/S!rat1.cre~
  SAY NAME1     @494
  SAY NAME2     @494

COPY ~ImprovedAnvil/cre/S!rat2.cre~         ~override/S!rat2.cre~
  SAY NAME1     @495
  SAY NAME2     @495

COPY ~ImprovedAnvil/cre/S!shados.cre~         ~override/S!shados.cre~
  SAY NAME1     @496
  SAY NAME2     @496

COPY ~ImprovedAnvil/cre/S!gswan.cre~         ~override/S!gswan.cre~
  SAY NAME1     @497
  SAY NAME2     @497

COPY ~ImprovedAnvil/cre/S!swanq.cre~         ~override/S!swanq.cre~
  SAY NAME1     @498
  SAY NAME2     @498

COPY ~ImprovedAnvil/cre/S!twist1.cre~         ~override/S!twist1.cre~
  SAY NAME1     @499
  SAY NAME2     @499

COPY ~ImprovedAnvil/cre/S!twist2.cre~         ~override/S!twist2.cre~
  SAY NAME1     @499
  SAY NAME2     @499

COPY ~ImprovedAnvil/cre/S!twist3.cre~         ~override/S!twist3.cre~
  SAY NAME1     @499
  SAY NAME2     @499

COPY ~ImprovedAnvil/cre/S!twist4.cre~         ~override/S!twist4.cre~
  SAY NAME1     @499
  SAY NAME2     @499

COPY ~ImprovedAnvil/cre/S!twist5.cre~         ~override/S!twist5.cre~
  SAY NAME1     @499
  SAY NAME2     @499

COPY ~ImprovedAnvil/cre/S!twist6.cre~         ~override/S!twist6.cre~
  SAY NAME1     @499
  SAY NAME2     @499

COPY ~ImprovedAnvil/cre/S!malbar.cre~         ~override/S!malbar.cre~
  SAY NAME1     @11000
  SAY NAME2     @11000

COPY ~ImprovedAnvil/cre/S!malba2.cre~         ~override/S!malba2.cre~
  SAY NAME1     @11000
  SAY NAME2     @11000

COPY ~ImprovedAnvil/cre/S!elegos.cre~         ~override/S!elegos.cre~
  SAY NAME1     @11001
  SAY NAME2     @11001

COPY ~ImprovedAnvil/cre/S!gelego.cre~         ~override/S!gelego.cre~
  SAY NAME1     @11001
  SAY NAME2     @11001

COPY ~ImprovedAnvil/cre/S!gelegs.cre~         ~override/S!gelegs.cre~
  SAY NAME1     @11001
  SAY NAME2     @11001

COPY ~ImprovedAnvil/cre/S!elegoa.cre~         ~override/S!elegoa.cre~
  SAY NAME1     @11001
  SAY NAME2     @11001

COPY ~ImprovedAnvil/cre/S!orvam.cre~         ~override/S!orvam.cre~
  SAY NAME1     @11002
  SAY NAME2     @11002

COPY ~ImprovedAnvil/cre/S!masvam.cre~         ~override/S!masvam.cre~
  SAY NAME1     @11002
  SAY NAME2     @11002

COPY ~ImprovedAnvil/cre/nevm4.cre~         ~override/nevm4.cre~
  SAY NAME1     @11003
  SAY NAME2     @11003

COPY ~ImprovedAnvil/cre/S!nevm1.cre~         ~override/S!nevm1.cre~
  SAY NAME1     @11003
  SAY NAME2     @11003

COPY ~ImprovedAnvil/cre/S!vamwis.cre~         ~override/S!vamwis.cre~
  SAY NAME1     @11003
  SAY NAME2     @11003

COPY ~ImprovedAnvil/cre/S!gempp.cre~         ~override/S!gempp.cre~
  SAY NAME1     @11004
  SAY NAME2     @11004

COPY ~ImprovedAnvil/cre/S!skelg1.cre~         ~override/S!skelg1.cre~
  SAY NAME1     @11005
  SAY NAME2     @11005

COPY ~ImprovedAnvil/cre/S!skelg2.cre~         ~override/S!skelg2.cre~
  SAY NAME1     @11005
  SAY NAME2     @11005

COPY ~ImprovedAnvil/cre/S!skelg3.cre~         ~override/S!skelg3.cre~
  SAY NAME1     @11005
  SAY NAME2     @11005

COPY ~ImprovedAnvil/cre/S!skelg4.cre~         ~override/S!skelg4.cre~
  SAY NAME1     @11005
  SAY NAME2     @11005

COPY ~ImprovedAnvil/cre/S!skelg5.cre~         ~override/S!skelg5.cre~
  SAY NAME1     @11005
  SAY NAME2     @11005

COPY ~ImprovedAnvil/cre/S!skelg6.cre~         ~override/S!skelg6.cre~
  SAY NAME1     @11005
  SAY NAME2     @11005

COPY ~ImprovedAnvil/cre/S!skelgr.cre~         ~override/S!skelgr.cre~
  SAY NAME1     @11005
  SAY NAME2     @11005

COPY ~ImprovedAnvil/cre/S!skelo1.cre~         ~override/S!skelo1.cre~
  SAY NAME1     @11005
  SAY NAME2     @11005

COPY ~ImprovedAnvil/cre/S!skelo2.cre~         ~override/S!skelo2.cre~
  SAY NAME1     @11005
  SAY NAME2     @11005

COPY ~ImprovedAnvil/cre/S!skelo3.cre~         ~override/S!skelo3.cre~
  SAY NAME1     @11005
  SAY NAME2     @11005

COPY ~ImprovedAnvil/cre/S!skelo4.cre~         ~override/S!skelo4.cre~
  SAY NAME1     @11005
  SAY NAME2     @11005

COPY ~ImprovedAnvil/cre/S!skelo5.cre~         ~override/S!skelo5.cre~
  SAY NAME1     @11005
  SAY NAME2     @11005

COPY ~ImprovedAnvil/cre/S!skelo6.cre~         ~override/S!skelo6.cre~
  SAY NAME1     @11005
  SAY NAME2     @11005

COPY ~ImprovedAnvil/cre/S!skelo7.cre~         ~override/S!skelo7.cre~
  SAY NAME1     @11005
  SAY NAME2     @11005

COPY ~ImprovedAnvil/cre/S!skelo8.cre~         ~override/S!skelo8.cre~
  SAY NAME1     @11005
  SAY NAME2     @11005

COPY ~ImprovedAnvil/cre/S!skelre.cre~         ~override/S!skelre.cre~
  SAY NAME1     @11005
  SAY NAME2     @11005

COPY ~ImprovedAnvil/cre/mekimp01.cre~         ~override/mekimp01.cre~
  SAY NAME1     @11006
  SAY NAME2     @11006

COPY ~ImprovedAnvil/cre/S!bongof.cre~         ~override/S!bongof.cre~
  SAY NAME1     @11007
  SAY NAME2     @11007

COPY ~ImprovedAnvil/cre/S!bongol.cre~         ~override/S!bongol.cre~
  SAY NAME1     @11007
  SAY NAME2     @11007

COPY ~ImprovedAnvil/cre/S!bonrnd.cre~         ~override/S!bonrnd.cre~
  SAY NAME1     @11007
  SAY NAME2     @11007

COPY ~ImprovedAnvil/cre/S!cangua.cre~         ~override/S!cangua.cre~
  SAY NAME1     @11008
  SAY NAME2     @11008

COPY ~ImprovedAnvil/cre/S!belgua.cre~         ~override/S!belgua.cre~
  SAY NAME1     @11008
  SAY NAME2     @11008

COPY ~ImprovedAnvil/cre/S!sahvip.cre~         ~override/S!sahvip.cre~
  SAY NAME1     @11009
  SAY NAME2     @11009

COPY ~ImprovedAnvil/cre/S!crypt.cre~         ~override/S!crypt.cre~
  SAY NAME1     @11010
  SAY NAME2     @11010

COPY ~ImprovedAnvil/cre/S!bolich.cre~         ~override/S!bolich.cre~
  SAY NAME1     @11011
  SAY NAME2     @11011

COPY ~ImprovedAnvil/cre/S!bomin1.cre~         ~override/S!bomin1.cre~
  SAY NAME1     @11012
  SAY NAME2     @11012

COPY ~ImprovedAnvil/cre/S!bomin2.cre~         ~override/S!bomin2.cre~
  SAY NAME1     @11013
  SAY NAME2     @11013

COPY ~ImprovedAnvil/cre/S!spy3.cre~         ~override/S!spy3.cre~
  SAY NAME1     @11014
  SAY NAME2     @11014

COPY ~ImprovedAnvil/cre/S!skelwl.cre~         ~override/S!skelwl.cre~
  SAY NAME1     @11015
  SAY NAME2     @11015

COPY ~ImprovedAnvil/cre/S!skelfi.cre~         ~override/S!skelfi.cre~
  SAY NAME1     @11015
  SAY NAME2     @11015

COPY ~ImprovedAnvil/cre/S!skelw2.cre~         ~override/S!skelw2.cre~
  SAY NAME1     @11015
  SAY NAME2     @11015

COPY ~ImprovedAnvil/cre/gdruid.cre~         ~override/gdruid.cre~
  SAY NAME1     @11016
  SAY NAME2     @11016

COPY ~ImprovedAnvil/cre/S!gtwist.cre~         ~override/S!gtwist.cre~
  SAY NAME1     @11017
  SAY NAME2     @11017

COPY ~ImprovedAnvil/cre/S!dragol.cre~         ~override/S!dragol.cre~
  SAY NAME1     @11018
  SAY NAME2     @11018

COPY ~ImprovedAnvil/cre/firmon03.cre~         ~override/firmon03.cre~
  SAY NAME1     @11019
  SAY NAME2     @11019

COPY ~ImprovedAnvil/cre/S!oldone.cre~         ~override/S!oldone.cre~
  SAY NAME1     @11020
  SAY NAME2     @11020

COPY ~ImprovedAnvil/cre/S!oldon2.cre~         ~override/S!oldon2.cre~
  SAY NAME1     @11021
  SAY NAME2     @11021

COPY ~ImprovedAnvil/cre/S!squi02.cre~         ~override/S!squi02.cre~
  SAY NAME1     @11022
  SAY NAME2     @11022

COPY ~ImprovedAnvil/cre/S!squi03.cre~         ~override/S!squi03.cre~
  SAY NAME1     @11023
  SAY NAME2     @11023

COPY ~ImprovedAnvil/cre/S!squi04.cre~         ~override/S!squi04.cre~
  SAY NAME1     @11023
  SAY NAME2     @11023

COPY ~ImprovedAnvil/cre/S!sqassa.cre~         ~override/S!sqassa.cre~
  SAY NAME1     @11024
  SAY NAME2     @11024

COPY ~ImprovedAnvil/cre/S!sqass2.cre~         ~override/S!sqass2.cre~
  SAY NAME1     @11024
  SAY NAME2     @11024

COPY ~ImprovedAnvil/cre/S!sqass3.cre~         ~override/S!sqass3.cre~
  SAY NAME1     @11024
  SAY NAME2     @11024

COPY ~ImprovedAnvil/cre/S!sqass4.cre~         ~override/S!sqass4.cre~
  SAY NAME1     @11024
  SAY NAME2     @11024

COPY ~ImprovedAnvil/cre/S!sqass5.cre~         ~override/S!sqass5.cre~
  SAY NAME1     @11024
  SAY NAME2     @11024

COPY ~ImprovedAnvil/cre/S!demarc.cre~         ~override/S!demarc.cre~
  SAY NAME1     @11025
  SAY NAME2     @11025

COPY ~ImprovedAnvil/cre/S!morid1.cre~         ~override/S!morid1.cre~
  SAY NAME1     @11026
  SAY NAME2     @11026

COPY ~ImprovedAnvil/cre/S!morid2.cre~         ~override/S!morid2.cre~
  SAY NAME1     @11026
  SAY NAME2     @11026

COPY ~ImprovedAnvil/cre/S!force1.cre~         ~override/S!force1.cre~
  SAY NAME1     @11027
  SAY NAME2     @11027

COPY ~ImprovedAnvil/cre/S!force2.cre~         ~override/S!force2.cre~
  SAY NAME1     @11027
  SAY NAME2     @11027

COPY ~ImprovedAnvil/cre/S!woogol.cre~         ~override/S!woogol.cre~
  SAY NAME1     @11028
  SAY NAME2     @11028

COPY ~ImprovedAnvil/cre/S!woogo1.cre~         ~override/S!woogo1.cre~
  SAY NAME1     @11028
  SAY NAME2     @11028

COPY ~ImprovedAnvil/cre/S!woogo2.cre~         ~override/S!woogo2.cre~
  SAY NAME1     @11028
  SAY NAME2     @11028

COPY ~ImprovedAnvil/cre/S!woogo3.cre~         ~override/S!woogo3.cre~
  SAY NAME1     @11028
  SAY NAME2     @11028

COPY ~ImprovedAnvil/cre/S!woogo4.cre~         ~override/S!woogo4.cre~
  SAY NAME1     @11028
  SAY NAME2     @11028

COPY ~ImprovedAnvil/cre/S!spy4.cre~         ~override/S!spy4.cre~
  SAY NAME1     @11029
  SAY NAME2     @11029

COPY ~ImprovedAnvil/cre/S!ntroll.cre~         ~override/S!ntroll.cre~
  SAY NAME1     @11031
  SAY NAME2     @11031

COPY ~ImprovedAnvil/cre/S!ntrol2.cre~         ~override/S!ntrol2.cre~
  SAY NAME1     @11031
  SAY NAME2     @11031

COPY ~ImprovedAnvil/cre/trollsm2.cre~         ~override/trollsm2.cre~
  SAY NAME1     @11032
  SAY NAME2     @11032

COPY ~ImprovedAnvil/cre/firrak01.cre~         ~override/firrak01.cre~
  SAY NAME1     @11033
  SAY NAME2     @11033

COPY ~ImprovedAnvil/cre/S!kuoduk.cre~         ~override/S!kuoduk.cre~
  SAY NAME1     @11034
  SAY NAME2     @11034

COPY ~ImprovedAnvil/cre/S!kuodu2.cre~         ~override/S!kuodu2.cre~
  SAY NAME1     @11034
  SAY NAME2     @11034

COPY ~ImprovedAnvil/cre/S!trolsu.cre~         ~override/S!trolsu.cre~
  SAY NAME1     @11035
  SAY NAME2     @11035

COPY ~ImprovedAnvil/cre/S!anacsu.cre~         ~override/S!anacsu.cre~
  SAY NAME1     @11036
  SAY NAME2     @11036

COPY ~ImprovedAnvil/cre/S!smilsu.cre~         ~override/S!smilsu.cre~
  SAY NAME1     @11037
  SAY NAME2     @11037

COPY ~ImprovedAnvil/cre/S!swanfa.cre~         ~override/S!swanfa.cre~
  SAY NAME1     @11038
  SAY NAME2     @11038

COPY ~ImprovedAnvil/cre/S!rngspi.cre~         ~override/S!rngspi.cre~
  SAY NAME1     @11039
  SAY NAME2     @11039

COPY ~ImprovedAnvil/cre/S!wetlan.cre~         ~override/S!wetlan.cre~
  SAY NAME1     @11039
  SAY NAME2     @11039

COPY ~ImprovedAnvil/cre/S!vipmir.cre~         ~override/S!vipmir.cre~
  SAY NAME1     @11040
  SAY NAME2     @11040

COPY ~ImprovedAnvil/cre/S!vipmi1.cre~         ~override/S!vipmi1.cre~
  SAY NAME1     @11040
  SAY NAME2     @11040

COPY ~ImprovedAnvil/cre/S!windm1.cre~         ~override/S!windm1.cre~
  SAY NAME1     @11041
  SAY NAME2     @11041

COPY ~ImprovedAnvil/cre/S!windmi.cre~         ~override/S!windmi.cre~
  SAY NAME1     @11042
  SAY NAME2     @11042

COPY ~ImprovedAnvil/cre/S!spidmi.cre~         ~override/S!spidmi.cre~
  SAY NAME1     @11043
  SAY NAME2     @11043

COPY ~ImprovedAnvil/cre/S!skelmi.cre~         ~override/S!skelmi.cre~
  SAY NAME1     @11044
  SAY NAME2     @11044

COPY ~ImprovedAnvil/cre/S!spidwm.cre~         ~override/S!spidwm.cre~
  SAY NAME1     @11045
  SAY NAME2     @11045

COPY ~ImprovedAnvil/cre/S!mircre.cre~         ~override/S!mircre.cre~
  SAY NAME1     @11046
  SAY NAME2     @11046

COPY ~ImprovedAnvil/cre/S!poncre.cre~         ~override/S!poncre.cre~
  SAY NAME1     @11047
  SAY NAME2     @11047

COPY ~ImprovedAnvil/cre/S!shadm1.cre~         ~override/S!shadm1.cre~
  SAY NAME1     @11048
  SAY NAME2     @11048

COPY ~ImprovedAnvil/cre/S!shadmi.cre~         ~override/S!shadmi.cre~
  SAY NAME1     @11048
  SAY NAME2     @11048

COPY ~ImprovedAnvil/cre/S!gelem1.cre~         ~override/S!gelem1.cre~
  SAY NAME1     @11049
  SAY NAME2     @11049

COPY ~ImprovedAnvil/cre/S!mircha.cre~         ~override/S!mircha.cre~
  SAY NAME1     @11050
  SAY NAME2     @11050

COPY ~ImprovedAnvil/cre/S!mirrng.cre~         ~override/S!mirrng.cre~
  SAY NAME1     @11051
  SAY NAME2     @11051

COPY ~ImprovedAnvil/cre/S!drsoul.cre~         ~override/S!drsoul.cre~
  SAY NAME1     @11052
  SAY NAME2     @11052

COPY ~ImprovedAnvil/cre/S!mom.cre~         ~override/S!mom.cre~
  SAY NAME1     @11053
  SAY NAME2     @11053

COPY ~ImprovedAnvil/cre/S!momd.cre~         ~override/S!momd.cre~
  SAY NAME1     @11053
  SAY NAME2     @11053

COPY ~ImprovedAnvil/cre/S!inqui1.cre~         ~override/S!inqui1.cre~
  SAY NAME1     @11054
  SAY NAME2     @11054

COPY ~ImprovedAnvil/cre/S!inqui2.cre~         ~override/S!inqui2.cre~
  SAY NAME1     @11054
  SAY NAME2     @11054

COPY ~ImprovedAnvil/cre/S!inqui3.cre~         ~override/S!inqui3.cre~
  SAY NAME1     @11054
  SAY NAME2     @11054

COPY ~ImprovedAnvil/cre/S!inqui4.cre~         ~override/S!inqui4.cre~
  SAY NAME1     @11054
  SAY NAME2     @11054

COPY ~ImprovedAnvil/cre/S!sencoi.cre~         ~override/S!sencoi.cre~
  SAY NAME1     @11055
  SAY NAME2     @11055

COPY ~ImprovedAnvil/cre/S!sengem.cre~         ~override/S!sengem.cre~
  SAY NAME1     @11055
  SAY NAME2     @11055

COPY ~ImprovedAnvil/cre/S!edeswa.cre~         ~override/S!edeswa.cre~
  SAY NAME1     @11056
  SAY NAME2     @11056

COPY ~ImprovedAnvil/cre/coplion.cre~         ~override/coplion.cre~

COPY ~ImprovedAnvil/cre/beast.cre~         ~override/beast.cre~

COPY ~ImprovedAnvil/cre/chak.cre~         ~override/chak.cre~

COPY ~ImprovedAnvil/cre/akae.cre~         ~override/akae.cre~

COPY ~ImprovedAnvil/cre/bdturm02.cre~         ~override/bdturm02.cre~

COPY ~ImprovedAnvil/cre/torgal.cre~         ~override/torgal.cre~

COPY ~ImprovedAnvil/cre/kpyuan01.cre~         ~override/kpyuan01.cre~

COPY ~ImprovedAnvil/cre/shadel.cre~         ~override/shadel.cre~

COPY ~ImprovedAnvil/cre/rngsha04.cre~         ~override/rngsha04.cre~

COPY ~ImprovedAnvil/cre/mindal01.cre~         ~override/mindal01.cre~

COPY ~ImprovedAnvil/cre/amtgen01.cre~         ~override/amtgen01.cre~

COPY ~ImprovedAnvil/cre/amtmag01.cre~         ~override/amtmag01.cre~

COPY ~ImprovedAnvil/cre/theshal.cre~         ~override/theshal.cre~

COPY ~ImprovedAnvil/cre/gorsal.cre~         ~override/gorsal.cre~

COPY ~ImprovedAnvil/cre/hgber01.cre~         ~override/hgber01.cre~

COPY ~ImprovedAnvil/cre/icmin01.cre~         ~override/icmin01.cre~

COPY ~ImprovedAnvil/cre/uddeath.cre~         ~override/uddeath.cre~

COPY ~ImprovedAnvil/cre/uddeath2.cre~         ~override/uddeath2.cre~

COPY ~ImprovedAnvil/cre/kproen01.cre~         ~override/kproen01.cre~

COPY ~ImprovedAnvil/cre/kproen02.cre~         ~override/kproen02.cre~

COPY ~ImprovedAnvil/cre/kproen03.cre~         ~override/kproen03.cre~

COPY ~ImprovedAnvil/cre/kproen04.cre~         ~override/kproen04.cre~

COPY ~ImprovedAnvil/cre/kproen05.cre~         ~override/kproen05.cre~

COPY ~ImprovedAnvil/cre/borinall.cre~         ~override/borinall.cre~

COPY ~ImprovedAnvil/cre/rakmah01.cre~         ~override/rakmah01.cre~

COPY ~ImprovedAnvil/cre/rakraj01.cre~         ~override/rakraj01.cre~

COPY ~ImprovedAnvil/cre/rakruh01.cre~         ~override/rakruh01.cre~

COPY ~ImprovedAnvil/cre/raksha01.cre~         ~override/raksha01.cre~

COPY ~ImprovedAnvil/cre/S!beggar.cre~         ~override/S!beggar.cre~

COPY ~ImprovedAnvil/cre/kruin.cre~         ~override/kruin.cre~

COPY ~ImprovedAnvil/cre/S!icego1.cre~         ~override/S!icego1.cre~

COPY ~ImprovedAnvil/cre/S!icego2.cre~         ~override/S!icego2.cre~

COPY ~ImprovedAnvil/cre/S!icegol.cre~         ~override/S!icegol.cre~

COPY ~ImprovedAnvil/cre/S!icegoa.cre~         ~override/S!icegoa.cre~

COPY ~ImprovedAnvil/cre/S!icegor.cre~         ~override/S!icegor.cre~

COPY ~ImprovedAnvil/cre/nishrusu.cre~         ~override/nishrusu.cre~

COPY ~ImprovedAnvil/cre/haksu.cre~         ~override/haksu.cre~

COPY ~ImprovedAnvil/cre/efreetsu.cre~         ~override/efreetsu.cre~

COPY ~ImprovedAnvil/cre/djinnisu.cre~         ~override/djinnisu.cre~

COPY ~ImprovedAnvil/cre/bazdra01.cre~         ~override/bazdra01.cre~

COPY ~ImprovedAnvil/cre/bazdra02.cre~         ~override/bazdra02.cre~

COPY ~ImprovedAnvil/cre/sengua04.cre~         ~override/sengua04.cre~

COPY ~ImprovedAnvil/cre/senspi01.cre~         ~override/senspi01.cre~

COPY ~ImprovedAnvil/cre/senken01.cre~         ~override/senken01.cre~

COPY ~ImprovedAnvil/cre/drofod03.cre~         ~override/drofod03.cre~

COPY ~ImprovedAnvil/cre/drofod04.cre~         ~override/drofod04.cre~

COPY ~ImprovedAnvil/cre/senlich.cre~         ~override/senlich.cre~

COPY ~ImprovedAnvil/cre/sendai.cre~         ~override/sendai.cre~

COPY ~ImprovedAnvil/cre/S!delon1.cre~         ~override/S!delon1.cre~

COPY ~ImprovedAnvil/cre/S!delon2.cre~         ~override/S!delon2.cre~

COPY ~ImprovedAnvil/cre/S!delon3.cre~         ~override/S!delon3.cre~

COPY ~ImprovedAnvil/cre/S!delon4.cre~         ~override/S!delon4.cre~

COPY ~ImprovedAnvil/cre/S!girl1.cre~         ~override/S!girl1.cre~

COPY ~ImprovedAnvil/cre/S!girl2.cre~         ~override/S!girl2.cre~

COPY ~ImprovedAnvil/cre/S!knight.cre~         ~override/S!knight.cre~

COPY ~ImprovedAnvil/cre/S!knigh2.cre~         ~override/S!knigh2.cre~

COPY ~ImprovedAnvil/cre/S!knigh3.cre~         ~override/S!knigh3.cre~

COPY ~ImprovedAnvil/cre/S!enchan.cre~         ~override/S!enchan.cre~

COPY ~ImprovedAnvil/cre/S!illusi.cre~         ~override/S!illusi.cre~

COPY ~ImprovedAnvil/cre/S!dwarf.cre~         ~override/S!dwarf.cre~

COPY ~ImprovedAnvil/cre/S!spy1.cre~         ~override/S!spy1.cre~

COPY ~ImprovedAnvil/cre/mage16c.cre~         ~override/mage16c.cre~

COPY ~ImprovedAnvil/cre/mage18z.cre~         ~override/mage18z.cre~

COPY ~ImprovedAnvil/cre/S!mageco.cre~         ~override/S!mageco.cre~

COPY ~ImprovedAnvil/cre/wish01.cre~         ~override/wish01.cre~

COPY ~ImprovedAnvil/cre/wish02.cre~         ~override/wish02.cre~

COPY ~ImprovedAnvil/cre/sword02.cre~         ~override/sword02.cre~

COPY ~ImprovedAnvil/cre/abazigal.cre~         ~override/abazigal.cre~

COPY ~ImprovedAnvil/cre/dragblue.cre~         ~override/dragblue.cre~

COPY ~ImprovedAnvil/cre/resuna.cre~         ~override/resuna.cre~

COPY ~ImprovedAnvil/cre/reeldar.cre~         ~override/reeldar.cre~

COPY ~ImprovedAnvil/cre/remage01.cre~         ~override/remage01.cre~

COPY ~ImprovedAnvil/cre/recler01.cre~         ~override/recler01.cre~

COPY ~ImprovedAnvil/cre/rethie01.cre~         ~override/rethie01.cre~

COPY ~ImprovedAnvil/cre/refigh01.cre~         ~override/refigh01.cre~

COPY ~ImprovedAnvil/cre/rethug02.cre~         ~override/rethug02.cre~

COPY ~ImprovedAnvil/cre/rethug01.cre~         ~override/rethug01.cre~

COPY ~ImprovedAnvil/cre/rethug03.cre~         ~override/rethug03.cre~

COPY ~ImprovedAnvil/cre/rethug04.cre~         ~override/rethug04.cre~

COPY ~ImprovedAnvil/cre/ccguard2.cre~         ~override/ccguard2.cre~

COPY ~ImprovedAnvil/cre/sevpat01.cre~         ~override/sevpat01.cre~

COPY ~ImprovedAnvil/cre/sevpat03.cre~         ~override/sevpat03.cre~

COPY ~ImprovedAnvil/cre/sevpat04.cre~         ~override/sevpat04.cre~

COPY ~ImprovedAnvil/cre/sevpat05.cre~         ~override/sevpat05.cre~

COPY ~ImprovedAnvil/cre/hldemi.cre~         ~override/hldemi.cre~

COPY ~ImprovedAnvil/cre/demilich.cre~         ~override/demilich.cre~

COPY ~ImprovedAnvil/cre/hgnya01.cre~         ~override/hgnya01.cre~

COPY ~ImprovedAnvil/cre/S!balor.cre~         ~override/S!balor.cre~

COPY ~ImprovedAnvil/cre/hellslay.cre~         ~override/hellslay.cre~

COPY ~ImprovedAnvil/cre/gpthief1.cre~         ~override/gpthief1.cre~

COPY ~ImprovedAnvil/cre/gorchr.cre~         ~override/gorchr.cre~

COPY ~ImprovedAnvil/cre/kpglai01.cre~         ~override/kpglai01.cre~

COPY ~ImprovedAnvil/cre/hlshade.cre~         ~override/hlshade.cre~

COPY ~ImprovedAnvil/cre/devaevil.cre~         ~override/devaevil.cre~

COPY ~ImprovedAnvil/cre/devagood.cre~         ~override/devagood.cre~

COPY ~ImprovedAnvil/cre/plangood.cre~         ~override/plangood.cre~

COPY ~ImprovedAnvil/cre/planevil.cre~         ~override/planevil.cre~

COPY ~ImprovedAnvil/cre/planwish.cre~         ~override/planwish.cre~

COPY ~ImprovedAnvil/cre/udbalor.cre~         ~override/udbalor.cre~

COPY ~ImprovedAnvil/cre/S!gclay.cre~         ~override/S!gclay.cre~

COPY ~ImprovedAnvil/cre/S!gstone.cre~         ~override/S!gstone.cre~

COPY ~ImprovedAnvil/cre/gororc01.cre~         ~override/gororc01.cre~

COPY ~ImprovedAnvil/cre/gororc02.cre~         ~override/gororc02.cre~

COPY ~ImprovedAnvil/cre/gororc03.cre~         ~override/gororc03.cre~

COPY ~ImprovedAnvil/cre/hgwar02.cre~         ~override/hgwar02.cre~

COPY ~ImprovedAnvil/cre/gromnir.cre~         ~override/gromnir.cre~

COPY ~ImprovedAnvil/cre/udelder.cre~         ~override/udelder.cre~

COPY ~ImprovedAnvil/cre/gall.cre~         ~override/gall.cre~

COPY ~ImprovedAnvil/cre/tarnor.cre~         ~override/tarnor.cre~

COPY ~ImprovedAnvil/cre/gaius.cre~         ~override/gaius.cre~

COPY ~ImprovedAnvil/cre/rengaa.cre~         ~override/rengaa.cre~

COPY ~ImprovedAnvil/cre/berkref.cre~         ~override/berkref.cre~

COPY ~ImprovedAnvil/cre/gpmage1.cre~         ~override/gpmage1.cre~

COPY ~ImprovedAnvil/cre/S!messen.cre~         ~override/S!messen.cre~

COPY ~ImprovedAnvil/cre/gromg03.cre~         ~override/gromg03.cre~

COPY ~ImprovedAnvil/cre/gromg08.cre~         ~override/gromg08.cre~

COPY ~ImprovedAnvil/cre/gromg09.cre~         ~override/gromg09.cre~

COPY ~ImprovedAnvil/cre/gromg10.cre~         ~override/gromg10.cre~

COPY ~ImprovedAnvil/cre/hlcleric.cre~         ~override/hlcleric.cre~

COPY ~ImprovedAnvil/cre/hlmage.cre~         ~override/hlmage.cre~

COPY ~ImprovedAnvil/cre/hlstal.cre~         ~override/hlstal.cre~

COPY ~ImprovedAnvil/cre/jael01.cre~         ~override/jael01.cre~

COPY ~ImprovedAnvil/cre/jael02.cre~         ~override/jael02.cre~

COPY ~ImprovedAnvil/cre/jael03.cre~         ~override/jael03.cre~

COPY ~ImprovedAnvil/cre/obshal01.cre~         ~override/obshal01.cre~

COPY ~ImprovedAnvil/cre/obshal02.cre~         ~override/obshal02.cre~

COPY ~ImprovedAnvil/cre/obshal07.cre~         ~override/obshal07.cre~

COPY ~ImprovedAnvil/cre/uddwarf.cre~         ~override/uddwarf.cre~

COPY ~ImprovedAnvil/cre/udgolem.cre~         ~override/udgolem.cre~

COPY ~ImprovedAnvil/cre/udmaster.cre~         ~override/udmaster.cre~

COPY ~ImprovedAnvil/cre/ppcowled.cre~         ~override/ppcowled.cre~

COPY ~ImprovedAnvil/cre/pirsea01.cre~         ~override/pirsea01.cre~

COPY ~ImprovedAnvil/cre/pirsea02.cre~         ~override/pirsea02.cre~

COPY ~ImprovedAnvil/cre/udprince.cre~         ~override/udprince.cre~

COPY ~ImprovedAnvil/cre/hlrevan.cre~         ~override/hlrevan.cre~

COPY ~ImprovedAnvil/cre/hlshang.cre~         ~override/hlshang.cre~

COPY ~ImprovedAnvil/cre/S!block.cre~         ~override/S!block.cre~

COPY ~ImprovedAnvil/cre/S!block2.cre~         ~override/S!block2.cre~

COPY ~ImprovedAnvil/cre/S!block3.cre~         ~override/S!block3.cre~

COPY ~ImprovedAnvil/cre/S!blockd.cre~         ~override/S!blockd.cre~

COPY ~ImprovedAnvil/cre/S!slassa.cre~         ~override/S!slassa.cre~

COPY ~ImprovedAnvil/cre/slapri.cre~         ~override/slapri.cre~

COPY ~ImprovedAnvil/cre/sppain.cre~         ~override/sppain.cre~

COPY ~ImprovedAnvil/cre/suraam.cre~         ~override/suraam.cre~

COPY ~ImprovedAnvil/cre/rumar01.cre~         ~override/rumar01.cre~

COPY ~ImprovedAnvil/cre/sengua03.cre~         ~override/sengua03.cre~

COPY ~ImprovedAnvil/cre/tanthf01.cre~         ~override/tanthf01.cre~

COPY ~ImprovedAnvil/cre/smspid02.cre~         ~override/smspid02.cre~

COPY ~ImprovedAnvil/cre/sevpat02.cre~         ~override/sevpat02.cre~

COPY ~ImprovedAnvil/cre/nymphsu.cre~         ~override/nymphsu.cre~

COPY ~ImprovedAnvil/cre/illasera.cre~         ~override/illasera.cre~

COPY ~ImprovedAnvil/cre/zilarc01.cre~         ~override/zilarc01.cre~

COPY ~ImprovedAnvil/cre/zilfgt01.cre~         ~override/zilfgt01.cre~

COPY ~ImprovedAnvil/cre/zilfgt02.cre~         ~override/zilfgt02.cre~

COPY ~ImprovedAnvil/cre/zilmag01.cre~         ~override/zilmag01.cre~

COPY ~ImprovedAnvil/cre/sujon.cre~         ~override/sujon.cre~

COPY ~ImprovedAnvil/cre/shalt01.cre~         ~override/shalt01.cre~

COPY ~ImprovedAnvil/cre/guard3.cre~         ~override/guard3.cre~

COPY ~ImprovedAnvil/cre/udvith.cre~         ~override/udvith.cre~

COPY ~ImprovedAnvil/cre/kpsham01.cre~         ~override/kpsham01.cre~

COPY ~ImprovedAnvil/cre/icyuan03.cre~         ~override/icyuan03.cre~

COPY ~ImprovedAnvil/cre/samia.cre~         ~override/samia.cre~

COPY ~ImprovedAnvil/cre/elairsu3.cre~         ~override/elairsu3.cre~

COPY ~ImprovedAnvil/cre/elearsu4.cre~         ~override/elearsu4.cre~

COPY ~ImprovedAnvil/cre/elfirsu4.cre~         ~override/elfirsu4.cre~

COPY ~ImprovedAnvil/cre/elearpr3.cre~         ~override/elearpr3.cre~

COPY ~ImprovedAnvil/cre/elfirpr3.cre~         ~override/elfirpr3.cre~

COPY ~ImprovedAnvil/cre/cowenf2.cre~         ~override/cowenf2.cre~

COPY ~ImprovedAnvil/cre/cedruid2.cre~         ~override/cedruid2.cre~

COPY ~ImprovedAnvil/cre/telwrai.cre~         ~override/telwrai.cre~

COPY ~ImprovedAnvil/cre/cefald01.cre~         ~override/cefald01.cre~

COPY ~ImprovedAnvil/cre/drshch01.cre~         ~override/drshch01.cre~

COPY ~ImprovedAnvil/cre/bheye.cre~         ~override/bheye.cre~

COPY ~ImprovedAnvil/cre/imoen213.cre~         ~override/imoen213.cre~

COPY ~ImprovedAnvil/cre/imoen10.cre~         ~override/imoen10.cre~

COPY ~ImprovedAnvil/cre/imoen15.cre~         ~override/imoen15.cre~

COPY ~ImprovedAnvil/cre/tomegol2.cre~         ~override/tomegol2.cre~

COPY ~ImprovedAnvil/cre/hlshyr.cre~         ~override/hlshyr.cre~

COPY ~ImprovedAnvil/cre/hlvaxal.cre~         ~override/hlvaxal.cre~

COPY ~ImprovedAnvil/cre/S!looker.cre~         ~override/S!looker.cre~

COPY ~ImprovedAnvil/cre/S!looke2.cre~         ~override/S!looke2.cre~

COPY ~ImprovedAnvil/cre/hlketta.cre~         ~override/hlketta.cre~

COPY ~ImprovedAnvil/cre/kaol.cre~         ~override/kaol.cre~

COPY ~ImprovedAnvil/cre/deck622.cre~         ~override/deck622.cre~

COPY ~ImprovedAnvil/cre/sword68.cre~         ~override/sword68.cre~

COPY ~ImprovedAnvil/cre/obsfir01.cre~         ~override/obsfir01.cre~

COPY ~ImprovedAnvil/cre/S!mekear.cre~         ~override/S!mekear.cre~

COPY ~ImprovedAnvil/cre/ppireni2.cre~         ~override/ppireni2.cre~

COPY ~ImprovedAnvil/cre/S!shlich.cre~         ~override/S!shlich.cre~

COPY ~ImprovedAnvil/cre/gormind.cre~         ~override/gormind.cre~

COPY ~ImprovedAnvil/cre/mindul01.cre~         ~override/mindul01.cre~

COPY ~ImprovedAnvil/cre/gpfight1.cre~         ~override/gpfight1.cre~

COPY ~ImprovedAnvil/cre/gorlic01.cre~         ~override/gorlic01.cre~

COPY ~ImprovedAnvil/cre/icbone01.cre~         ~override/icbone01.cre~

COPY ~ImprovedAnvil/cre/S!pirmur.cre~         ~override/S!pirmur.cre~

COPY ~ImprovedAnvil/cre/sengua05.cre~         ~override/sengua05.cre~

COPY ~ImprovedAnvil/cre/bhcrypt.cre~         ~override/bhcrypt.cre~

COPY ~ImprovedAnvil/cre/jellmu.cre~         ~override/jellmu.cre~

COPY ~ImprovedAnvil/cre/S!droww.cre~         ~override/S!droww.cre~

COPY ~ImprovedAnvil/cre/haer19.cre~         ~override/haer19.cre~

COPY ~ImprovedAnvil/cre/sahoty01.cre~         ~override/sahoty01.cre~

COPY ~ImprovedAnvil/cre/moondog.cre~         ~override/moondog.cre~

COPY ~ImprovedAnvil/cre/S!chick1.cre~         ~override/S!chick1.cre~

COPY ~ImprovedAnvil/cre/S!chick2.cre~         ~override/S!chick2.cre~

COPY ~ImprovedAnvil/cre/S!chick3.cre~         ~override/S!chick3.cre~

COPY ~ImprovedAnvil/cre/S!horse1.cre~         ~override/S!horse1.cre~

COPY ~ImprovedAnvil/cre/S!moose1.cre~         ~override/S!moose1.cre~

COPY ~ImprovedAnvil/cre/c6bodhi.cre~         ~override/c6bodhi.cre~

COPY ~ImprovedAnvil/cre/deathkni.cre~         ~override/deathkni.cre~

COPY ~ImprovedAnvil/cre/telcam1.cre~         ~override/telcam1.cre~

COPY ~ImprovedAnvil/cre/mistho01.cre~         ~override/mistho01.cre~

COPY ~ImprovedAnvil/cre/S!mistho.cre~         ~override/S!mistho.cre~

COPY ~ImprovedAnvil/cre/S!blocko.cre~         ~override/S!blocko.cre~

COPY ~ImprovedAnvil/cre/hapip.cre~         ~override/hapip.cre~

COPY ~ImprovedAnvil/cre/S!avatar.cre~         ~override/S!avatar.cre~

COPY ~ImprovedAnvil/cre/demmag.cre~         ~override/demmag.cre~

COPY ~ImprovedAnvil/cre/demfig01.cre~         ~override/demfig01.cre~

COPY ~ImprovedAnvil/cre/demfig02.cre~         ~override/demfig02.cre~

COPY ~ImprovedAnvil/cre/dempri.cre~         ~override/dempri.cre~

COPY ~ImprovedAnvil/cre/S!acton2.cre~         ~override/S!acton2.cre~

COPY ~ImprovedAnvil/cre/S!timemf.cre~         ~override/S!timemf.cre~

COPY ~ImprovedAnvil/cre/S!timema.cre~         ~override/S!timema.cre~

COPY ~ImprovedAnvil/cre/S!youngb.cre~         ~override/S!youngb.cre~

COPY ~ImprovedAnvil/cre/S!youngl.cre~         ~override/S!youngl.cre~

COPY ~ImprovedAnvil/cre/wolfgr01.cre~         ~override/wolfgr01.cre~

COPY ~ImprovedAnvil/cre/S!balor2.cre~         ~override/S!balor2.cre~

COPY ~ImprovedAnvil/cre/S!balorf.cre~         ~override/S!balorf.cre~

COPY ~ImprovedAnvil/cre/S!balorh.cre~         ~override/S!balorh.cre~

COPY ~ImprovedAnvil/cre/maevar.cre~         ~override/maevar.cre~

COPY ~ImprovedAnvil/cre/mvpries.cre~         ~override/mvpries.cre~

COPY ~ImprovedAnvil/cre/c6bguard.cre~         ~override/c6bguard.cre~

COPY ~ImprovedAnvil/cre/lassal02.cre~         ~override/lassal02.cre~

COPY ~ImprovedAnvil/cre/sarvam01.cre~         ~override/sarvam01.cre~

COPY ~ImprovedAnvil/cre/mistva01.cre~         ~override/mistva01.cre~

COPY ~ImprovedAnvil/cre/hgmis01.cre~         ~override/hgmis01.cre~

COPY ~ImprovedAnvil/cre/kobkam01.cre~         ~override/kobkam01.cre~

COPY ~ImprovedAnvil/cre/elemsunn.cre~         ~override/elemsunn.cre~

COPY ~ImprovedAnvil/cre/elemzaam.cre~         ~override/elemzaam.cre~

COPY ~ImprovedAnvil/cre/S!trolic.cre~         ~override/S!trolic.cre~

COPY ~ImprovedAnvil/cre/S!trolr.cre~         ~override/S!trolr.cre~

COPY ~ImprovedAnvil/cre/shadfi02.cre~         ~override/shadfi02.cre~

COPY ~ImprovedAnvil/cre/hgwra02.cre~         ~override/hgwra02.cre~

COPY ~ImprovedAnvil/cre/spidsm02.cre~         ~override/spidsm02.cre~

COPY ~ImprovedAnvil/cre/kuocap01.cre~         ~override/kuocap01.cre~

COPY ~ImprovedAnvil/cre/kuomag01.cre~         ~override/kuomag01.cre~

COPY ~ImprovedAnvil/cre/kuomon01.cre~         ~override/kuomon01.cre~

COPY ~ImprovedAnvil/cre/kuopri01.cre~         ~override/kuopri01.cre~

COPY ~ImprovedAnvil/cre/kuowar01.cre~         ~override/kuowar01.cre~

COPY ~ImprovedAnvil/cre/kuowhi01.cre~         ~override/kuowhi01.cre~

COPY ~ImprovedAnvil/cre/giafir01.cre~         ~override/giafir01.cre~

COPY ~ImprovedAnvil/cre/reband04.cre~         ~override/reband04.cre~

COPY ~ImprovedAnvil/cre/S!yuansu.cre~         ~override/S!yuansu.cre~

COPY ~ImprovedAnvil/cre/S!salasu.cre~         ~override/S!salasu.cre~

COPY ~ImprovedAnvil/cre/S!minosu.cre~         ~override/S!minosu.cre~

COPY ~ImprovedAnvil/cre/S!spy5.cre~         ~override/S!spy5.cre~

COPY ~ImprovedAnvil/cre/S!icbonr.cre~         ~override/S!icbonr.cre~

COPY ~ImprovedAnvil/cre/S!drofo4.cre~         ~override/S!drofo4.cre~

COPY ~ImprovedAnvil/cre/S!drofo3.cre~         ~override/S!drofo3.cre~

COPY ~ImprovedAnvil/cre/S!spyran.cre~         ~override/S!spyran.cre~

COPY ~ImprovedAnvil/cre/S!spy6.cre~         ~override/S!spy6.cre~

COPY ~ImprovedAnvil/cre/S!squi05.cre~         ~override/S!squi05.cre~

COPY ~ImprovedAnvil/cre/S!spy7.cre~         ~override/S!spy7.cre~

COPY ~ImprovedAnvil/cre/S!blockm.cre~         ~override/S!blockm.cre~

COPY ~ImprovedAnvil/cre/S!spy8.cre~         ~override/S!spy8.cre~

// Patching creatures //

COPY_EXISTING ~shadra01.cre~ ~override/shadra01.cre~
  WRITE_LONG  0x14   57500 // xp
  WRITE_LONG  0x1c    6598 // gold
  WRITE_SHORT 0x24     184 // current hp
  WRITE_SHORT 0x26     184 // max hp
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a     100 // resist cold
  WRITE_BYTE  0x5b      50 // resist electricity
  WRITE_BYTE  0x5c     100 // resist acid
  WRITE_BYTE  0x5d      85 // resist magic
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x23f     15 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~S!misc02~ #0 #0 #0 ~UNSTEALABLE~ ~INV12~
  ADD_CRE_ITEM ~scrl6m~ #0 #0 #0 ~UNSTEALABLE~ ~INV13~
  ADD_CRE_ITEM ~S!misc04~ #0 #0 #0 ~IDENTIFIED~ ~INV14~
  ADD_CRE_ITEM ~MISC29~ #0 #0 #0 ~UNSTEALABLE~ ~INV15~

COPY_EXISTING ~firkra02.cre~ ~override/firkra02.cre~
  WRITE_LONG  0x1c    9000 // gold
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x5d      90 // resist magic
  WRITE_BYTE  0x60      55 // resist slashing
  WRITE_BYTE  0x61      55 // resist crushing
  WRITE_BYTE  0x62      55 // resist piercing
  WRITE_BYTE  0x63      80 // resist missile
  WRITE_BYTE  0x234     26 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~minhp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!scrl21~ #0 #0 #0 ~UNSTEALABLE~ ~INV11~
  ADD_CRE_ITEM ~misc30~ #0 #0 #0 ~UNSTEALABLE~ ~INV12~
  ADD_CRE_ITEM ~S!misc03~ #0 #0 #0 ~IDENTIFIED~ ~INV13~
  ADD_CRE_ITEM ~ring02~ #0 #0 #0 ~UNSTEALABLE~ ~INV14~
  ADD_CRE_ITEM ~scrla4~ #0 #0 #0 ~UNSTEALABLE~ ~INV15~

COPY_EXISTING ~dragblac.cre~ ~override/dragblac.cre~
  WRITE_LONG  0x14   70000 // xp
  WRITE_LONG  0x1c   6000 // gold
  WRITE_SHORT 0x24     240 // current hp
  WRITE_SHORT 0x26     240 // max hp
  WRITE_BYTE  0x59     100 // resist fire
  WRITE_BYTE  0x5a     100 // resist cold
  WRITE_BYTE  0x5b     100 // resist electricity
  WRITE_BYTE  0x5d      70 // resist magic
  WRITE_BYTE  0x5e     100 // resist magic fire
  WRITE_BYTE  0x5f     100 // resist magic cold
  WRITE_BYTE  0x60      60 // resist slashing
  WRITE_BYTE  0x61      60 // resist crushing
  WRITE_BYTE  0x62      60 // resist piercing
  WRITE_BYTE  0x63     100 // resist missile
  WRITE_BYTE  0x234     30 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dblack~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~minhp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!misc02~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~S!scrl06~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!scrl27~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~

COPY_EXISTING ~pwarden.cre~ ~override/pwarden.cre~
  WRITE_LONG  0x14   20000 // xp
  WRITE_LONG  0x1c    1000 // gold
  WRITE_SHORT 0x24     140 // current hp
  WRITE_SHORT 0x26     140 // max hp
  WRITE_SHORT 0x46  (0 - 1) // base ac
  WRITE_SHORT 0x48  (0 - 1) // effective ac
  WRITE_BYTE  0x52  (0 - 1) // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59     100 // resist fire
  WRITE_BYTE  0x5a     100 // resist cold
  WRITE_BYTE  0x5b     100 // resist electricity
  WRITE_BYTE  0x5c     100 // resist acid
  WRITE_BYTE  0x5d      80 // resist magic
  WRITE_BYTE  0x5e     100 // resist magic fire
  WRITE_BYTE  0x5f     100 // resist magic cold
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     22 // level
  WRITE_BYTE  0x235     20 // level secondary class
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     91 // strength % bonus
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!warden~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "sw1h35" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~scrl6m~ #8 // write new item
   END
END
  ADD_CRE_ITEM ~S!warden~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~sw1h35~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~dragring~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~belt01~ #0 #0 #0 ~UNSTEALABLE~ ~INV15~
  ADD_CRE_ITEM ~S!misc02~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~scrl9m~ #0 #0 #0 ~UNSTEALABLE~ ~INV11~
  ADD_CRE_ITEM ~scrl5k~ #0 #0 #0 ~UNSTEALABLE~ ~INV12~
  ADD_CRE_ITEM ~scrl7q~ #0 #0 #0 ~UNSTEALABLE~ ~INV13~
  ADD_CRE_ITEM ~scrl7o~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  ADD_CRE_ITEM ~scrl8g~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~scrl6u~ #4 #0 #0 ~UNSTEALABLE~ ~QITEM2~

COPY_EXISTING ~pmaster.cre~ ~override/pmaster.cre~
  WRITE_SHORT 0x24     136 // current hp
  WRITE_SHORT 0x26     136 // max hp
  WRITE_BYTE  0x5b     100 // resist electricity
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "staf15" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~pairel01.cre~ ~override/pairel01.cre~
  WRITE_BYTE  0x5b     100 // resist electricity

COPY_EXISTING ~berinvar.cre~ ~override/berinvar.cre~
  ADD_CRE_ITEM ~potn08~ #0 #0 #0 ~NONE~ ~INV8~

COPY_EXISTING ~lavok02.cre~ ~override/lavok02.cre~
  ADD_CRE_ITEM ~S!misc05~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~scrl7j~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!amul04~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~scrl8l~ #0 #0 #0 ~UNSTEALABLE~ ~INV11~
  ADD_CRE_ITEM ~ring07~ #0 #0 #0 ~UNSTEALABLE~ ~INV12~
  ADD_CRE_ITEM ~S!misc01~ #0 #0 #0 ~UNSTEALABLE~ ~INV14~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "ring40" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
   END
END

COPY_EXISTING ~lavok01.cre~ ~override/lavok01.cre~
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x54       7 // save vs death
  WRITE_BYTE  0x5d     100 // resist magic
  WRITE_BYTE  0x60      60 // resist slashing
  WRITE_BYTE  0x61      60 // resist crushing
  WRITE_BYTE  0x62      60 // resist piercing
  WRITE_BYTE  0x63     100 // resist missile
  WRITE_BYTE  0x234     24 // level
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trapr~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~clck02~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~CLOAK~
  ADD_CRE_ITEM ~scrl6u~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~scrl7i~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~scrl7o~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~S!lavok~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~

COPY_EXISTING ~firmag01.cre~ ~override/firmag01.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_LONG  0x1c     250 // gold
  WRITE_SHORT 0x24      94 // current hp
  WRITE_SHORT 0x26      94 // max hp
  WRITE_BYTE  0x52      14 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       4 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x59     100 // resist fire
  WRITE_BYTE  0x5e     100 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     21 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x250 ~S!firmag~ #8       // class script
  WRITE_ASCII 0x268 ~~ #8       // removes default script
  ADD_CRE_ITEM ~S!breath~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~clck01~ #0 #0 #0 ~UNSTEALABLE~ ~CLOAK~
  ADD_CRE_ITEM ~scrl9p~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~scrl8g~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  ADD_CRE_ITEM ~scrl6m~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~scrl6h~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~scrl9m~ #0 #0 #0 ~UNSTEALABLE~ ~INV11~
  ADD_CRE_ITEM ~S!misc06~ #0 #0 #0 ~UNSTEALABLE~ ~INV12~
  ADD_CRE_ITEM ~misc29~ #0 #0 #0 ~UNSTEALABLE~ ~INV13~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "staf01" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~staf18~ #8 // write new item
   END
END
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "key09" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
   END
END

COPY_EXISTING ~draug.cre~ ~override/draug.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_LONG  0x1c     300 // gold
  WRITE_BYTE  0x52       3 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x5d      40 // resist magic
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      60 // resist missile
  WRITE_BYTE  0x234     18 // level
  WRITE_ASCII 0x248 ~S!gall~ #8 // override script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!minhp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~potn14~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~potn35~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~potn52~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "helm06" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~hllayen.cre~ ~override/hllayen.cre~
  WRITE_LONG  0x14   35000 // xp
  WRITE_SHORT 0x24      67 // current hp
  WRITE_SHORT 0x26      67 // max hp
  WRITE_BYTE  0x52      10 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x59      60 // resist fire
  WRITE_BYTE  0x5d      75 // resist magic
  WRITE_BYTE  0x5e      60 // resist magic fire
  WRITE_BYTE  0x60      60 // resist slashing
  WRITE_BYTE  0x61      60// resist crushing
  WRITE_BYTE  0x62      60 // resist piercing
  WRITE_BYTE  0x63     100 // resist missile
  WRITE_BYTE  0x234     31 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23d     16 // constitution
  WRITE_BYTE  0x23f     20 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!layene~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8       // removes class script
  WRITE_ASCII 0x268 ~~ #8       // removes default script
  WRITE_BYTE  0x272      1 // race
  ADD_CRE_ITEM ~S!castt~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~ARMOR~
  ADD_CRE_ITEM ~S!misc06~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~S!misc02~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~scrl9m~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~scrl7j~ #0 #0 #0 ~UNSTEALABLE~ ~INV11~
  ADD_CRE_ITEM ~S!scrl02~ #0 #0 #0 ~UNSTEALABLE~ ~INV12~
  ADD_CRE_ITEM ~brac18~ #0 #0 #0 ~UNSTEALABLE~ ~INV13~
  ADD_CRE_ITEM ~misc44~ #0 #0 #0 ~UNSTEALABLE~ ~INV14~
  ADD_CRE_ITEM ~helm26~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~S!layene~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~scrl7i~ #4 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~scrl9p~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~scrl9p~ #4 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~

COPY_EXISTING ~scsarles.cre~ ~override/scsarles.cre~
  ADD_CRE_ITEM ~potn08~ #0 #0 #0 ~NONE~ ~INV8~

COPY_EXISTING ~hlsion.cre~ ~override/hlsion.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_SHORT 0x24      65 // current hp
  WRITE_SHORT 0x26      65 // max hp
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5d     100 // resist magic
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x234     22 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~~ #8 // removes override script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~scrl8l~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~scrl5k~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!scrl09~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~scrl9p~ #4 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~scrl9u~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~scrl9m~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  ADD_CRE_ITEM ~S!sion~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~staf18~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ TWOHANDED

COPY_EXISTING ~rock.cre~ ~override/rock.cre~
  WRITE_LONG  0x14   25000 // xp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x5d      60 // resist magic
  WRITE_BYTE  0x60      60 // resist slashing
  WRITE_BYTE  0x61      60 // resist crushing
  WRITE_BYTE  0x62      60 // resist piercing
  WRITE_BYTE  0x63     100 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~amul05~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc30~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~S!rock~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~miscai~ #0 #0 #0 ~UNSTEALABLE~ ~BOOTS~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~

COPY_EXISTING ~garock.cre~ ~override/garock.cre~
  WRITE_LONG  0x14   20000 // xp
  WRITE_BYTE  0x52       2 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x5d      40 // resist magic
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     19 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~misc6z~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!rock~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~gromg05.cre~ ~override/gromg05.cre~
  WRITE_LONG  0x14   24000 // xp
  WRITE_LONG  0x1c    100 // gold
  WRITE_SHORT 0x24      69 // current hp
  WRITE_SHORT 0x26      69 // max hp
  WRITE_BYTE  0x52      11 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     28 // level
  WRITE_BYTE  0x238     16 // strength
  WRITE_BYTE  0x23a     18 // intelligence
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~S!gromag~ #8       // class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!pasha2~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~immune1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~clck01~ #0 #0 #0 ~UNSTEALABLE~ ~CLOAK~
  ADD_CRE_ITEM ~clck14~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~ARMOR~
  ADD_CRE_ITEM ~potn55~ #3 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~scrl6u~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~scrl7i~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  ADD_CRE_ITEM ~bull06~ #20 #0 #0 ~UNSTEALABLE~ ~QUIVER1~
  ADD_CRE_ITEM ~slng04~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON2~
  ADD_CRE_ITEM ~scrl9d~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~scrl5i~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~scrl1j~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~

COPY_EXISTING ~gromg13.cre~ ~override/gromg13.cre~
  WRITE_SHORT 0x24      68 // current hp
  WRITE_SHORT 0x26      68 // max hp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     25 // level
  WRITE_BYTE  0x238     16 // strength
  WRITE_BYTE  0x23a     18 // intelligence
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "clck14" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~clck01~ #8 // write new item
   END
END

COPY_EXISTING ~fsmage04.cre~ ~override/fsmage04.cre~
  WRITE_LONG  0x14   20000 // xp
  WRITE_SHORT 0x24      68 // current hp
  WRITE_SHORT 0x26      68 // max hp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     25 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23a     18 // intelligence
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~staf18~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ TWOHANDED

COPY_EXISTING ~fsmage03.cre~ ~override/fsmage03.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_SHORT 0x24      63 // current hp
  WRITE_SHORT 0x26      63 // max hp
  WRITE_BYTE  0x52      14 // thac0
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~staf18~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ TWOHANDED

COPY_EXISTING ~fsmage02.cre~ ~override/fsmage02.cre~
  WRITE_LONG  0x14    8000 // xp
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~staf02~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ TWOHANDED

COPY_EXISTING ~sargrd06.cre~ ~override/sargrd06.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_SHORT 0x24      68 // current hp
  WRITE_SHORT 0x26      68 // max hp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     25 // level
  WRITE_BYTE  0x238     16 // strength
  WRITE_BYTE  0x23a     18 // intelligence
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~staf18~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ TWOHANDED

COPY_EXISTING ~teltief1.cre~ ~override/teltief1.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_SHORT 0x24     136 // current hp
  WRITE_SHORT 0x26     136 // max hp
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~S!ransm2~ #8      // default script
  ADD_CRE_ITEM ~S!teltie~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~potn35~ #1 #0 #0 ~UNSTEALABLE~ ~QITEM3~

COPY_EXISTING ~teltief2.cre~ ~override/teltief2.cre~
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       4 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57      11 // save vs breath
  WRITE_BYTE  0x58       5 // save vs spell
  WRITE_BYTE  0x60      75 // resist slashing
  WRITE_BYTE  0x61      75 // resist crushing
  WRITE_BYTE  0x62      75 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     23 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~TELTIEF2~ #8      // default script
  ADD_CRE_ITEM ~S!teltie~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~minhp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn35~ #1 #0 #0 ~UNSTEALABLE~ ~QITEM3~

COPY_EXISTING ~haegan.cre~ ~override/haegan.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_LONG  0x1c    1000 // gold
  WRITE_SHORT 0x24     100 // current hp
  WRITE_SHORT 0x26     100 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     51 // strength % bonus
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     20 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  ADD_CRE_ITEM ~S!haegan~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!misc35~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~S!misc40~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!helm09~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~potn55~ #3 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "sw2h01" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~sw1h41~ #8 // write new item
   END
END

COPY_EXISTING ~slguard1.cre~ ~override/slgurad1.cre~
  WRITE_LONG  0x14     840 // xp
  WRITE_LONG  0x1c      28 // gold
  WRITE_SHORT 0x24      63 // current hp
  WRITE_SHORT 0x26      63 // max hp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234      9 // level
  WRITE_ASCII 0x250 ~S!sl0405~ #8       // class script

COPY_EXISTING ~slguard2.cre~ ~override/slguard2.cre~
  WRITE_LONG  0x14     840 // xp
  WRITE_LONG  0x1c      28 // gold
  WRITE_SHORT 0x24      72 // current hp
  WRITE_SHORT 0x26      72 // max hp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234      9 // level
  WRITE_ASCII 0x250 ~S!sl0405~ #8       // class script

COPY_EXISTING ~slarch1.cre~ ~override/slarch1.cre~
  WRITE_LONG  0x14     840 // xp
  WRITE_LONG  0x1c      42 // gold
  WRITE_SHORT 0x24      63 // current hp
  WRITE_SHORT 0x26      63 // max hp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234      9 // level
  WRITE_ASCII 0x250 ~S!sl0405~ #8       // class script
  WRITE_BYTE  0x273     0x2 // class fighter

COPY_EXISTING ~slmage1.cre~ ~override/slmage1.cre~
  WRITE_LONG  0x14    4800 // xp
  WRITE_LONG  0x1c      51 // gold
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x52      16 // thac0
  WRITE_BYTE  0x54      11 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57      11 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x60      60 // resist slashing
  WRITE_BYTE  0x61      60 // resist crushing
  WRITE_BYTE  0x62      60 // resist piercing
  WRITE_BYTE  0x63      60 // resist missile
  WRITE_BYTE  0x234     14 // level
  WRITE_BYTE  0x238     16 // strength
  WRITE_BYTE  0x23a     18 // intelligence
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!slmage~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8       // removes class script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~ring06~ #0 #0 #0 ~UNSTEALABLE~ ~RRING~
  ADD_CRE_ITEM ~surehp1~ #0 #0 #0 ~UNSTEALABLE~ ~LRING~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~helm20~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~clck11~ #0 #0 #0 ~UNSTEALABLE~ ~ARMOR~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~scrl7q~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~scrl5h~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM2~

COPY_EXISTING ~obsdem01.cre~ ~override/obsdem01.cre~
  WRITE_LONG  0x14   16000 // xp
  WRITE_SHORT 0x24     160 // current hp
  WRITE_SHORT 0x26     160 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x5d      75 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!misc30~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~S!scrl05~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~dragring~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "S1-10" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!obsdem~ #8 // write new item
   END
END

COPY_EXISTING ~obsdem04.cre~ ~override/obsdem04.cre~
  WRITE_LONG  0x14     7500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~S!antic3~ #8     // class script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~obshal03.cre~ ~override/obshal03.cre~
  WRITE_LONG  0x14   10000 // xp
  WRITE_LONG  0x1c     500 // gold
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  ADD_CRE_ITEM ~scrl6m~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~

COPY_EXISTING ~kaypal01.cre~ ~override/kaypal01.cre~
  WRITE_LONG  0x14   10000 // xp
  WRITE_LONG  0x1c    1000 // gold
  WRITE_BYTE  0x5d      90 // resist magic
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~misc30~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~amul12~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~pirmur01.cre~ ~override/pirmur01.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_LONG  0x1c     500 // gold
  WRITE_SHORT 0x24     119 // current hp
  WRITE_SHORT 0x26     119 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x5d      70 // resist magic
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~ring06~ #0 #0 #0 ~UNSTEALABLE~ ~LRING~
  ADD_CRE_ITEM ~shld04~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~
  ADD_CRE_ITEM ~helm06~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!minhp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~amul05~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc26~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~misc36~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~misc30~ #0 #0 #0 ~UNSTEALABLE~ ~INV11~
  ADD_CRE_ITEM ~potn55~ #3 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~potn35~ #1 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "leat12" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~plat04~ #8 // write new item
   END
END

COPY_EXISTING ~pirmur07.cre~ ~override/pirmur07.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_LONG  0x1c     250 // gold
  WRITE_SHORT 0x24      65 // current hp
  WRITE_SHORT 0x26      65 // max hp
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x5d      70 // resist magic
  WRITE_BYTE  0x60      60 // resist slashing
  WRITE_BYTE  0x61      60 // resist crushing
  WRITE_BYTE  0x62      60 // resist piercing
  WRITE_BYTE  0x63      60 // resist missile
  WRITE_BYTE  0x234     22 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!vadek~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8       // removes class script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  ADD_CRE_ITEM ~S!castt~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~ARMOR~
  ADD_CRE_ITEM ~scrl5t~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~surehp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~scrl9p~ #4 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~scrl9u~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM2~

COPY_EXISTING ~tazok.cre~ ~override/tazok.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_LONG  0x1c    4900 // gold
  WRITE_SHORT 0x24     142 // current hp
  WRITE_SHORT 0x26     142 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!tazok~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~helm04~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~S!tazok~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!minhp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~potn55~ #2 #0 #0 ~NONE~ ~QITEM1~
  ADD_CRE_ITEM ~potn35~ #0 #0 #0 ~NONE~ ~QITEM3~
  ADD_CRE_ITEM ~misc39~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc42~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~misc35~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~uhrang01.cre~ ~override/uhrang01.cre~
  WRITE_LONG  0x1c    4444 // gold
  ADD_CRE_ITEM ~misc33~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc16~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~misc30~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~S!scrl09~ #0 #0 #0 ~UNSTEALABLE~ ~INV11~
  ADD_CRE_ITEM ~misc43~ #0 #0 #0 ~UNSTEALABLE~ ~INV12~
  ADD_CRE_ITEM ~misc26~ #0 #0 #0 ~UNSTEALABLE~ ~INV13~
  ADD_CRE_ITEM ~misc41~ #0 #0 #0 ~UNSTEALABLE~ ~INV14~
  ADD_CRE_ITEM ~S!misc06~ #0 #0 #0 ~UNSTEALABLE~ ~INV15~

COPY_EXISTING ~rngsha02.cre~ ~override/rngsha02.cre~
  WRITE_LONG  0x14   11500 // xp
  WRITE_SHORT 0x24     114 // current hp
  WRITE_SHORT 0x26     114 // max hp
  WRITE_BYTE  0x52       4 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5d      90 // resist magic
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23b     18 // wisdom
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23d     18 // constitution
  WRITE_ASCII 0x248 ~S!rngsha~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8      // removes class script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!patric~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "ring95" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~dragring~ #8 // write new item
   END
END

COPY_EXISTING ~obshal05.cre~ ~override/obshal05.cre~
  WRITE_LONG  0x14   13500 // xp
  WRITE_LONG  0x1c      50 // gold
  WRITE_SHORT 0x24      62 // current hp
  WRITE_SHORT 0x26      62 // max hp
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!kayard~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8      // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~ring18~ #0 #0 #0 ~UNSTEALABLE~ ~RRING~
  ADD_CRE_ITEM ~ring06~ #0 #0 #0 ~UNSTEALABLE~ ~LRING~
  ADD_CRE_ITEM ~staf02~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ TWOHANDED
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~misc43~ #0 #0 #0 ~UNSTEALABLE~ ~INV7~
  ADD_CRE_ITEM ~scrl6h~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~scrl7p~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~scrl9c~ #3 #0 #0 ~UNSTEALABLE~ ~QITEM2~

COPY_EXISTING ~obshal06.cre~ ~override/obshal06.cre~
  WRITE_LONG  0x14   13000 // xp
  WRITE_SHORT 0x24      88 // current hp
  WRITE_SHORT 0x26      88 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x235     13 // level secondary class
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~S!equip~ #8       // class script
  WRITE_ASCII 0x258 ~mage12d~ #8      // removes race script
  WRITE_BYTE  0x273     0x7 // class fighter mage
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~dagg02~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~

COPY_EXISTING ~tolger2.cre~ ~override/tolger2.cre~
  WRITE_LONG  0x14   20000 // xp
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x5d     100 // resist magic
  WRITE_BYTE  0x60      25 // resist slashing
  WRITE_BYTE  0x61      25 // resist crushing
  WRITE_BYTE  0x62      25 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     22 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!tolger~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8      // removes class script
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x27b     0x13 // alignment
  ADD_CRE_ITEM ~scrl7l~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~scrl9a~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~scrl7j~ #0 #0 #0 ~UNSTEALABLE~ ~INV12~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~scrl7o~ #4 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~scrl6u~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM3~

COPY_EXISTING ~tolmag02.cre~ ~override/tolmag02.cre~
  WRITE_LONG  0x14   10000 // xp
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x54      11 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57      11 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     14 // level
  WRITE_ASCII 0x248 ~S!tolmag~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8      // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~scrl6m~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~scrl6y~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~hlkoshi.cre~ ~override/hlkoshi.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_SHORT 0x24     104 // current hp
  WRITE_SHORT 0x26     104 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5b      50 // resist electricity
  WRITE_BYTE  0x5d      40 // resist magic
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     93 // strength % bonus
  WRITE_ASCII 0x248 ~S!koshi~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8      // removes class script
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~helm26~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~potn55~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~S!koshi~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~misc43~ #0 #0 #0 ~UNSTEALABLE~ ~INV5~
  ADD_CRE_ITEM ~misc42~ #0 #0 #0 ~UNSTEALABLE~ ~INV6~
  ADD_CRE_ITEM ~misc26~ #0 #0 #0 ~UNSTEALABLE~ ~INV7~

COPY_EXISTING ~hlolaf.cre~ ~override/hlolaf.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_SHORT 0x24     125 // current hp
  WRITE_SHORT 0x26     125 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5d     100 // resist magic
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!olaf~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8      // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~potn55~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~

COPY_EXISTING ~hlmafer.cre~ ~override/hlmafer.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_SHORT 0x24     125 // current hp
  WRITE_SHORT 0x26     125 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5d      40 // resist magic
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!mafer~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8      // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~minhp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn55~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "potn42" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~potn35~ #8 // write new item
   END
END
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "helm04" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~sahpr2.cre~ ~override/sahpr2.cre~
  WRITE_LONG  0x14   17500 // xp
  WRITE_LONG  0x1c    1000 // gold
  WRITE_SHORT 0x24     160 // current hp
  WRITE_SHORT 0x26     160 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a     100 // resist cold
  WRITE_BYTE  0x5b     100 // resist electricity
  WRITE_BYTE  0x5c     100 // resist acid
  WRITE_BYTE  0x5d      60 // resist magic
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x60      75 // resist slashing
  WRITE_BYTE  0x61      75 // resist crushing
  WRITE_BYTE  0x62      75 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  WRITE_ASCII 0x268 ~S!villyn~ #8      // default script
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!minhp2~ #0 #0 #0 ~UNSTEALABLE~ ~BOOTS~
  ADD_CRE_ITEM ~S!seeinv~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!scrl23~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "sper08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "halb09b" = 0)) BEGIN
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
  END
END

COPY_EXISTING ~hlfight.cre~ ~override/hlfight.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_LONG  0x1c     250 // gold
  WRITE_SHORT 0x24     127 // current hp
  WRITE_SHORT 0x26     127 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x5d      40 // resist magic
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~S!hlfigh~ #8       // class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~blun13~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~helm06~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~potn55~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "chan01" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~plat04~ #8 // write new item
   END
END

COPY_EXISTING ~hlassa.cre~ ~override/hlassa.cre~
  WRITE_LONG  0x14   21000 // xp
  WRITE_LONG  0x1c    1000 // gold
  WRITE_SHORT 0x24      92 // current hp
  WRITE_SHORT 0x26      92 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       4 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57      11 // save vs breath
  WRITE_BYTE  0x58       5 // save vs spell
  WRITE_BYTE  0x5d      75 // resist magic
  WRITE_BYTE  0x60      75 // resist slashing
  WRITE_BYTE  0x61      75 // resist crushing
  WRITE_BYTE  0x62      75 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     25 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!hlassa~ #8 // override script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!hlassa~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~dagg14~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~shld17~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~
  ADD_CRE_ITEM ~misc45~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~potn10~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "leat04" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~leat12~ #8 // write new item
   END
END

COPY_EXISTING ~pirpir05.cre~ ~override/pirpir05.cre~
  WRITE_LONG  0x14    3300 // xp
  WRITE_BYTE  0x52      16 // thac0
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55       8 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57      13 // save vs breath
  WRITE_BYTE  0x58       9 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x238     16 // strength
  WRITE_BYTE  0x23c     18 // dexterity

COPY_EXISTING ~legdor.cre~ ~override/legdor.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_LONG  0x1c    1500 // gold
  WRITE_SHORT 0x24     106 // current hp
  WRITE_SHORT 0x26     106 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       2 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       8 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x59     100 // resist fire
  WRITE_BYTE  0x5b      50 // resist electricity
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e     100 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23b     18 // wisdom
  WRITE_BYTE  0x23c     17 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!legdor~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8       // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x27b     0x33 // alignment
  ADD_CRE_ITEM ~blun13~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~helmnoan~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~shld29~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trapr~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~dragring~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~clck01~ #0 #0 #0 ~UNSTEALABLE~ ~CLOAK~
  ADD_CRE_ITEM ~misc26~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc30~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~misc21~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~BHAALHP1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "plat01" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~plat04~ #8 // write new item
   END
END

COPY_EXISTING ~deshar.cre~ ~override/deshar.cre~
  WRITE_LONG  0x14   22000 // xp
  WRITE_LONG  0x1c    2500 // gold
  WRITE_SHORT 0x24     122 // current hp
  WRITE_SHORT 0x26     122 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       5 // save vs spell
  WRITE_BYTE  0x59     100 // resist fire
  WRITE_BYTE  0x5b      40 // resist electricity
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e     100 // resist magic fire
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x235     23 // level secondary class
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!deshar~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8       // removes class script
  WRITE_ASCII 0x258 ~~ #8       // removes race script
  ADD_CRE_ITEM ~sw1h75~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~clck30~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~CLOAK~
  ADD_CRE_ITEM ~helmnoan~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~S!deshar~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn10~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~potn55~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  ADD_CRE_ITEM ~misc45~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc43~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!minhp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~

COPY_EXISTING ~gorbat1.cre~ ~override/gorbat1.cre~
  WRITE_BYTE  0x5d      75 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  ADD_CRE_ITEM ~misc43~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~gortan1.cre~ ~override/gortan1.cre~
  WRITE_BYTE  0x5d      75 // resist magic
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  ADD_CRE_ITEM ~misc42~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~ccguard1.cre~ ~override/ccguard1.cre~
  WRITE_LONG  0x14    2000 // xp
  WRITE_LONG  0x1c      40 // gold
  WRITE_SHORT 0x24      66 // current hp
  WRITE_SHORT 0x26      66 // max hp
  WRITE_BYTE  0x52      11 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234     10 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     16 // dexterity
  ADD_CRE_ITEM ~ring09~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~

COPY_EXISTING ~gppri1.cre~ ~override/gppri1.cre~
  WRITE_LONG  0x14   10000 // xp
  WRITE_LONG  0x1c      60 // gold
  WRITE_SHORT 0x24      88 // current hp
  WRITE_SHORT 0x26      88 // max hp
  WRITE_BYTE  0x52      10 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       8 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57      10 // save vs breath
  WRITE_BYTE  0x58       9 // save vs spell
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x23b     18 // wisdom
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23d     16 // constitution
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x248 ~S!chandr~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x27b     0x33 // alignment
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~bdturm01.cre~ ~override/bdturm01.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_LONG  0x1c     500 // gold
  WRITE_SHORT 0x24     153 // current hp
  WRITE_SHORT 0x26     153 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      65 // resist slashing
  WRITE_BYTE  0x61      65 // resist crushing
  WRITE_BYTE  0x62      65 // resist piercing
  WRITE_BYTE  0x63      65 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     51 // strength % bonus
  WRITE_BYTE  0x23c     17 // dexterity
  WRITE_BYTE  0x23d     15 // constitution
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!turm01~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~ring06~ #0 #0 #0 ~UNSTEALABLE~ ~RRING~
  ADD_CRE_ITEM ~S!guard~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~boot01~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~potn55~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~S!misc06~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc21~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~misc26~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~misc43~ #0 #0 #0 ~UNSTEALABLE~ ~INV11~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "sw2h02" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~SW2H11~ #8 // write new item
   END
END

COPY_EXISTING ~bdturm03.cre~ ~override/bdturm03.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_LONG  0x1c      50 // gold
  WRITE_SHORT 0x24      64 // current hp
  WRITE_SHORT 0x26      64 // max hp
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!turm03~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~ring06~ #0 #0 #0 ~UNSTEALABLE~ ~RRING~
  ADD_CRE_ITEM ~scrl9m~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~scrl5i~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~scrl9p~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~scrl8q~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~scrl6u~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM3~

COPY_EXISTING ~bodfgt03.cre~ ~override/bodfgt03.cre~
  WRITE_LONG  0x14    7000 // xp
  WRITE_LONG  0x1c    5000 // gold
  WRITE_SHORT 0x24     130 // current hp
  WRITE_SHORT 0x26     130 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!gracen~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~potn55~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~potn35~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!minhp1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~misc42~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "plat01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "sw2h11" = 0) OR
             ("%item%" STRING_COMPARE_CASE "potn52" = 0) OR
             ("%item%" STRING_COMPARE_CASE "helm01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "misc7c" = 0)) BEGIN
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
  END
END

COPY_EXISTING ~jatermin.cre~ ~override/jatermin.cre~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "clck16" = 0) OR
             ("%item%" STRING_COMPARE_CASE "ring07" = 0) OR
             ("%item%" STRING_COMPARE_CASE "amul14" = 0) OR
             ("%item%" STRING_COMPARE_CASE "ring31" = 0) OR
             ("%item%" STRING_COMPARE_CASE "clck02" = 0)) BEGIN
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flag
  END
END

COPY_EXISTING ~yaga01.cre~ ~override/yaga01.cre~
  WRITE_LONG  0x14   45000 // xp
  WRITE_LONG  0x1c    9000 // gold
  WRITE_SHORT 0x24     340 // current hp
  WRITE_SHORT 0x26     340 // max hp
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x5a      75 // resist cold
  WRITE_BYTE  0x5b      75 // resist electricity
  WRITE_BYTE  0x5c      75 // resist acid
  WRITE_BYTE  0x5d      90 // resist magic
  WRITE_BYTE  0x60      90 // resist slashing
  WRITE_BYTE  0x61      95 // resist crushing
  WRITE_BYTE  0x62      90 // resist piercing
  WRITE_BYTE  0x63     100 // resist missile
  WRITE_BYTE  0x234     30 // level
  WRITE_BYTE  0x23f     20 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!yaga~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~shld32~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~SHIELD~
  ADD_CRE_ITEM ~S!yaga~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn55~ #5 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~potn33~ #3 #0 #0 ~UNSTEALABLE~ ~INV7~
  ADD_CRE_ITEM ~S!misc02~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc38~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~misc43~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~
  ADD_CRE_ITEM ~misc41~ #0 #0 #0 ~UNSTEALABLE~ ~INV11~
  ADD_CRE_ITEM ~misc42~ #0 #0 #0 ~UNSTEALABLE~ ~INV12~
  ADD_CRE_ITEM ~misc45~ #0 #0 #0 ~UNSTEALABLE~ ~INV13~
  ADD_CRE_ITEM ~misc35~ #0 #0 #0 ~UNSTEALABLE~ ~INV14~
  ADD_CRE_ITEM ~misc44~ #0 #0 #0 ~UNSTEALABLE~ ~INV15~

COPY_EXISTING ~yaga03.cre~ ~override/yaga03.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_LONG  0x1c     250 // gold
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5b      50 // resist electricity
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x268 ~S!yaga03~ #8      // default script
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~dragring~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~potn07~ #2 #0 #0 ~NONE~ ~QITEM2~

COPY_EXISTING ~yaga04.cre~ ~override/yaga04.cre~
  WRITE_LONG  0x14   14000 // xp
  WRITE_BYTE  0x60      25 // resist slashing
  WRITE_BYTE  0x61      25 // resist crushing
  WRITE_BYTE  0x62      25 // resist piercing
  WRITE_BYTE  0x63      25 // resist missile
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23b     18 // wisdom
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x242      2 // morale Recovery
  ADD_CRE_ITEM ~shld29~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~misc30~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc33~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~

COPY_EXISTING ~elemimix.cre~ ~override/elemimix.cre~
  WRITE_LONG  0x14   25000 // xp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x5d     100 // resist magic
  WRITE_BYTE  0x60      75 // resist slashing
  WRITE_BYTE  0x61      75 // resist crushing
  WRITE_BYTE  0x62      75 // resist piercing
  WRITE_BYTE  0x63     100 // resist missile
  WRITE_BYTE  0x234     29 // level
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!imix~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~sarevimm~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~misc16~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~ring18~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~

COPY_EXISTING ~amtcap01.cre~ ~override/amtcap01.cre~
  WRITE_LONG  0x14   21900 // xp
  WRITE_LONG  0x1c     500 // gold
  WRITE_SHORT 0x24     114 // current hp
  WRITE_SHORT 0x26     114 // max hp
  WRITE_BYTE  0x52  (0 - 1) // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5b      40 // resist electricity
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x5f      50 // resist magic cold
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     22 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~~ #8 // removes override script
  WRITE_ASCII 0x250 ~S!amtcap~ #8         // class script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!amtcap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~potn21~ #2 #0 #0 ~NONE~ ~QITEM3~
  ADD_CRE_ITEM ~shld30~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~
  ADD_CRE_ITEM ~clck26~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~CLOAK~
  ADD_CRE_ITEM ~misc20~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~
  ADD_CRE_ITEM ~misc21~ #0 #0 #0 ~UNSTEALABLE~ ~INV9~
  ADD_CRE_ITEM ~misc26~ #0 #0 #0 ~UNSTEALABLE~ ~INV10~

COPY_EXISTING ~amtpik01.cre~ ~override/amtpik01.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_LONG  0x1c     100 // gold
  WRITE_SHORT 0x24     108 // current hp
  WRITE_SHORT 0x26     108 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     17 // morale
  ADD_CRE_ITEM ~ring09~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~potn05~ #0 #0 #0 ~NONE~ ~QITEM2~
  ADD_CRE_ITEM ~potn55~ #4 #0 #0 ~NONE~ ~QITEM3~
  ADD_CRE_ITEM ~helm08~ #0 #0 #0 ~UNSTEALABLE~ ~HELMET~
  ADD_CRE_ITEM ~clck26~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~CLOAK~

COPY_EXISTING ~anomen6.cre~ ~override/anomen6.cre~
  WRITE_LONG  0x18  190000 // XP
  WRITE_BYTE  0x23b     17 // wisdom
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
READ_LONG 0x2A8 "smioffset"
READ_LONG 0x2B0 "msoffset"
READ_LONG 0x2B8 "isoffset"
READ_LONG 0x2BC "ioffset"
READ_LONG 0x2C4 "effoffset"
READ_LONG 0x2C8 "effcount"
SET "erasedeffects" = 0
WHILE ("%erasedeffects%" < "%effcount%") BEGIN
 DELETE_BYTES "%effoffset%" 264
 SET "erasedeffects" = "%erasedeffects%" + 1
END
SET "moffset" = "%effoffset%"
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 101
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 36
WRITE_LONG  ("%moffset%"+ 24) 100
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 18
WRITE_LONG  ("%moffset%"+ 24) 107
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 2
WRITE_LONG  ("%moffset%"+ 24) 97
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 115
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
WRITE_LONG 0x2C8 5
PATCH_IF ("%knownsploffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A0 ("%knownsploffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%smioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%msoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%isoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%ioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedeffects%" * 264) + 1320) END
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "blun04" = 0) BEGIN
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~blun02~ #8
  END
END

COPY_EXISTING ~anomen12.cre~ ~override/anomen12.cre~
  WRITE_BYTE  0x23b     17 // wisdom
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
PATCH_IF ("%knownsplcount%" > 0) BEGIN
  READ_LONG 0x2A8 "smioffset"
  READ_LONG 0x2B0 "msoffset"
  READ_LONG 0x2B8 "isoffset"
  READ_LONG 0x2BC "ioffset"
  READ_LONG 0x2C4 "effoffset"
  SET "erasedspells" = 0
  SET "cnt" = "%knownsplcount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%knownsploffset%" + "%cnt%"*12) "splresref"
    PATCH_IF ("%splresref%" STRING_COMPARE_CASE "SPPR606" = 0)
   BEGIN
   DELETE_BYTES ("%knownsploffset%" + ("%cnt%"*12)) 12
   SET "erasedspells" = "%erasedspells%" + 1
   END
  SET "cnt" = "%cnt%" - 1
  END
WRITE_LONG 0x2A4 ("%knownsplcount%" - "%erasedspells%")
PATCH_IF ("%smioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%msoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%isoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%ioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%effoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2C4 ("%effoffset%" - ("%erasedspells%" * 12)) END
END
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
READ_LONG 0x2A8 "smioffset"
READ_LONG 0x2B0 "msoffset"
READ_LONG 0x2B8 "isoffset"
READ_LONG 0x2BC "ioffset"
READ_LONG 0x2C4 "effoffset"
READ_LONG 0x2C8 "effcount"
SET "erasedeffects" = 0
WHILE ("%erasedeffects%" < "%effcount%") BEGIN
 DELETE_BYTES "%effoffset%" 264
 SET "erasedeffects" = "%erasedeffects%" + 1
END
SET "moffset" = "%effoffset%"
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 101
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 36
WRITE_LONG  ("%moffset%"+ 24) 100
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 19
WRITE_LONG  ("%moffset%"+ 24) 107
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 2
WRITE_LONG  ("%moffset%"+ 24) 97
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 115
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
WRITE_LONG 0x2C8 5
PATCH_IF ("%knownsploffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A0 ("%knownsploffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%smioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%msoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%isoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%ioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedeffects%" * 264) + 1320) END
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "blun33" = 0) BEGIN
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~blun32~ #8
  END
END

COPY_EXISTING ~anomen6.cre~ ~override/anomen7.cre~

COPY_EXISTING ~anomen6.cre~ ~override/anomen8.cre~

COPY_EXISTING ~anomen6.cre~ ~override/anomen9.cre~

COPY_EXISTING ~anomen6.cre~ ~override/anomen10.cre~

COPY_EXISTING ~plmetr01.cre~ ~override/plmetr01.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_LONG  0x1c     200 // gold
  WRITE_SHORT 0x24     112 // current hp
  WRITE_SHORT 0x26     112 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!plmetr~ #8 // override script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~ring09~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~sw1h41~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~potn55~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~potn52~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~potn21~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM3~
  ADD_CRE_ITEM ~shld30~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~
  ADD_CRE_ITEM ~clck26~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~CLOAK~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~helm26~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~

COPY_EXISTING ~plmetw01.cre~ ~override/plmetw01.cre~
  WRITE_LONG  0x14   20000 // xp
  WRITE_LONG  0x1c      50 // gold
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x59     100 // resist fire
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e     100 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     22 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x250 ~S!kaol~ #8       // class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~staf18~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ TWOHANDED
  ADD_CRE_ITEM ~S!castt~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~ARMOR~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~scrl7o~ #4 #0 #0 ~UNSTEALABLE~ ~QITEM2~

COPY_EXISTING ~plmetg01.cre~ ~override/plmetg01.cre~
  WRITE_LONG  0x14    6800 // xp
  WRITE_SHORT 0x24     105 // current hp
  WRITE_SHORT 0x26     105 // max hp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     14 // level
  WRITE_BYTE  0x23f     15 // morale
  ADD_CRE_ITEM ~ring09~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~

COPY_EXISTING ~plmetg02.cre~ ~override/plmetg02.cre~
  WRITE_LONG  0x14    6800 // xp
  WRITE_SHORT 0x24     101 // current hp
  WRITE_SHORT 0x26     101 // max hp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     14 // level
  WRITE_BYTE  0x23f     15 // morale
  ADD_CRE_ITEM ~ring09~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~

COPY_EXISTING ~golbon01.cre~ ~override/golbon01.cre~
  WRITE_BYTE  0x5a     100 // resist cold
  WRITE_BYTE  0x5d      90 // resist magic
  WRITE_BYTE  0x5f      50 // resist magic cold
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell

COPY_EXISTING ~gpskel1.cre~ ~override/gpskel1.cre~
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile

COPY_EXISTING ~hgskl01.cre~ ~override/hgskl01.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_BYTE  0x5d      90 // resist magic
  WRITE_BYTE  0x23f     16 // morale

COPY_EXISTING ~hgskl02.cre~ ~override/hgskl02.cre~
  WRITE_LONG  0x14    9000 // xp
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x5d      90 // resist magic
  WRITE_BYTE  0x23f     16 // morale

COPY_EXISTING ~hgskl03.cre~ ~override/hgskl03.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_BYTE  0x52      16 // thac0
  WRITE_BYTE  0x23f     16 // morale
  WRITE_ASCII 0x268 ~cmage20a~ #8      // default script

COPY_EXISTING ~hgskl04.cre~ ~override/hgskl04.cre~
  WRITE_LONG  0x14   20000 // xp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell

COPY_EXISTING ~uddoor07.cre~ ~override/uddoor07.cre~
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile

COPY_EXISTING ~ddguard7.cre~ ~override/ddguard7.cre~
  WRITE_SHORT 0x24     132 // current hp
  WRITE_SHORT 0x26     132 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!tombgu~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!seeinv~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~ddguard1.cre~ ~override/ddguard1.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_SHORT 0x24     111 // current hp
  WRITE_SHORT 0x26     111 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       2 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~INITRG15~ #8 // override script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!tombgu~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!seeinv~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn12~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~

COPY_EXISTING ~ddguard2.cre~ ~override/ddguard2.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_SHORT 0x24     111 // current hp
  WRITE_SHORT 0x26     111 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       2 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~INITRG15~ #8 // override script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!tombgu~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!seeinv~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn11~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~

COPY_EXISTING ~ddguard3.cre~ ~override/ddguard3.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_SHORT 0x24     111 // current hp
  WRITE_SHORT 0x26     111 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       2 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~INITRG15~ #8 // override script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!tombgu~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!seeinv~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn02~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~

COPY_EXISTING ~ddguard4.cre~ ~override/ddguard4.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_SHORT 0x24     111 // current hp
  WRITE_SHORT 0x26     111 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       2 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~INITRG15~ #8 // override script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!tombgu~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!seeinv~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn35~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~

COPY_EXISTING ~ddguard5.cre~ ~override/ddguard5.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_SHORT 0x24     111 // current hp
  WRITE_SHORT 0x26     111 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       2 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~INITRG15~ #8 // override script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!tombgu~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!seeinv~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn21~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~

COPY_EXISTING ~ddguard6.cre~ ~override/ddguard6.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_SHORT 0x24     111 // current hp
  WRITE_SHORT 0x26     111 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       2 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~INITRG15~ #8 // override script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!tombgu~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!seeinv~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~potn43~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~

COPY_EXISTING ~sword01.cre~ ~override/sword01.cre~
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x54      13 // save vs death
  WRITE_BYTE  0x55       9 // save vs wands
  WRITE_BYTE  0x56      11 // save vs polymorph
  WRITE_BYTE  0x57      13 // save vs breath
  WRITE_BYTE  0x58      10 // save vs spell
  WRITE_BYTE  0x60      90 // resist slashing
  WRITE_BYTE  0x61      90 // resist crushing
  WRITE_BYTE  0x62      95 // resist piercing

COPY_EXISTING ~demglasu.cre~ ~override/demglasu.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~koboldsu.cre~ ~override/koboldsu.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "HELM01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BOW05" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H07" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~worgsu.cre~ ~override/worgsu.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~dogwisu.cre~ ~override/dogwisu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x268 ~CBEAR~ #8      // default script

COPY_EXISTING ~gnollsu.cre~ ~override/gnollsu.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~wolfdisu.cre~ ~override/wolfdisu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~~ #8 // removes override script
  WRITE_ASCII 0x268 ~CBEAR~ #8      // default script

COPY_EXISTING ~hobgobsu.cre~ ~override/hobgobsu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BOW05" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW12" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~etter01.cre~ ~override/etter01.cre~
   WRITE_ASCII 0x250 ~S!antic3~ #8         // class script

COPY_EXISTING ~ettercsu.cre~ ~override/ettercsu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script

COPY_EXISTING ~etter01.cre~ ~override/S!etter.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~ogregrsu.cre~ ~override/ogregrsu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x258 ~S!rancm1~ #8      // race script
  WRITE_ASCII 0x268 ~S!alsuc1~ #8      // default script

COPY_EXISTING ~ghastsu.cre~ ~override/ghastsu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x250 ~S!rancm1~ #8      // class script
  WRITE_ASCII 0x258 ~S!alsuc1~ #8      // race script
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~

COPY_EXISTING ~grskel1.cre~ ~override/grskel1.cre~
  WRITE_BYTE  0x60      50 // resist slashing
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~

COPY_EXISTING ~grskel2.cre~ ~override/grskel2.cre~
  WRITE_BYTE  0x60      50 // resist slashing
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~

COPY_EXISTING ~rskel01.cre~ ~override/rskel01.cre~
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~

COPY_EXISTING ~rskel03.cre~ ~override/rskel03.cre~
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~

COPY_EXISTING ~skelet01.cre~ ~override/skelet01.cre~
  WRITE_SHORT 0x24      30 // current hp
  WRITE_SHORT 0x26      30 // max hp
  WRITE_BYTE  0x52      16 // thac0
  WRITE_BYTE  0x54       9 // save vs death
  WRITE_BYTE  0x55      11 // save vs wands
  WRITE_BYTE  0x56      10 // save vs polymorph
  WRITE_BYTE  0x57      12 // save vs breath
  WRITE_BYTE  0x58      12 // save vs spell
  WRITE_BYTE  0x238     18 // strength
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~

COPY_EXISTING ~skelwasu.cre~ ~override/skelwasu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x260 ~S!ransm3~ #8       // general script
  WRITE_ASCII 0x268 ~S!alsus3~ #8      // default script
  WRITE_BYTE  0x272   0x73 // race

COPY_EXISTING ~skelwa01.cre~ ~override/skelwa01.cre~
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x260 ~S!ransm1~ #8       // general script

COPY_EXISTING ~skelwa.cre~ ~override/skelwa.cre~
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x260 ~S!ransm1~ #8       // general script

COPY_EXISTING ~mumgre01.cre~ ~override/mumgre01.cre~
  WRITE_BYTE  0x59      25 // resist fire
  WRITE_BYTE  0x5e      25 // resist magic fire
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!rancm4~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~mummy01.cre~ ~override/mummy01.cre~
  WRITE_SHORT 0x24      72 // current hp
  WRITE_SHORT 0x26      72 // max hp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x59      25 // resist fire
  WRITE_BYTE  0x5e      25 // resist magic fire
  WRITE_BYTE  0x234      9 // level
  WRITE_ASCII 0x248 ~S!anticu~ #8 // override script
  WRITE_ASCII 0x268 ~S!rancm3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~dogwasu.cre~ ~override/dogwasu.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~bearblsu.cre~ ~override/bearblsu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x268 ~CBEAR~ #8      // default script

COPY_EXISTING ~bearbrsu.cre~ ~override/bearbrsu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x268 ~CBEAR~ #8      // default script

COPY_EXISTING ~bearcasu.cre~ ~override/bearcasu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x268 ~CBEAR~ #8      // default script

COPY_EXISTING ~catjagsu.cre~ ~override/catjagsu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x268 ~CBEAR~ #8      // default script

COPY_EXISTING ~catliosu.cre~ ~override/catliosu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x268 ~CBEAR~ #8      // default script

COPY_EXISTING ~wolfwwsu.cre~ ~override/wolfwwsu.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "misc01" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~bearposu.cre~ ~override/bearposu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x250 ~S!rancm3~ #8      // class script
  WRITE_ASCII 0x258 ~CBEAR~ #8      // race script
  WRITE_ASCII 0x260 ~SUMSHT02~ #8       // general script

COPY_EXISTING ~servsu.cre~ ~override/servsu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~S!antic3~ #8      // class script
  WRITE_ASCII 0x258 ~S!rancm4~ #8      // race script
  WRITE_ASCII 0x268 ~S!alsuc4~ #8      // default script

COPY_EXISTING ~spidswsu.cre~ ~override/spidswsu.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x260 ~S!ranpm1~ #8       // general script
  WRITE_ASCII 0x268 ~S!alsup1~ #8      // default script

COPY_EXISTING ~spidphsu.cre~ ~override/spidphsu.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~spidgisu.cre~ ~override/spidgisu.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~stalke.cre~ ~override/stalke.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x5d      30 // resist magic
  WRITE_ASCII 0x250 ~S!antic3~ #8      // class script
  WRITE_ASCII 0x258 ~S!rancm2~ #8      // race script
  WRITE_ASCII 0x268 ~S!alsuc2~ #8      // default script
  WRITE_BYTE  0x273     0xba // class elemental air

COPY_EXISTING ~elemchan.cre~ ~override/elemchan.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x234     17 // level
  WRITE_ASCII 0x250 ~S!antic3~ #8      // class script
  WRITE_ASCII 0x258 ~S!rancm4~ #8      // race script
  WRITE_ASCII 0x268 ~S!elepri~ #8      // default script
  ADD_CRE_ITEM ~immune3~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~

COPY_EXISTING ~tomegol4.cre~ ~override/tomegol4.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x52       3 // thac0

COPY_EXISTING ~tomegol3.cre~ ~override/tomegol3.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~tomegol1.cre~ ~override/tomegol1.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x52      12 // thac0

COPY_EXISTING ~wyvernsu.cre~ ~override/wyvernsu.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "misc52" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~ribald.cre~ ~override/ribald.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ring31" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
  END
 END

COPY_EXISTING ~tolger.cre~ ~override/tolger.cre~
 WRITE_ASCII 0x260 ~mage18d~ #8       // general script
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ring33" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
  END
END

COPY_EXISTING ~sctelwyn.cre~ ~override/sctelwyn.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "helm03" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
  END
END

COPY_EXISTING ~pbhunt05.cre~ ~override/pbhunt05.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "boot01" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
  END
END

COPY_EXISTING ~trthf01.cre~ ~override/trthf01.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "brac18" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
  END
END

COPY_EXISTING ~arnwar07.cre~ ~override/arnwar07.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ring35" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
  END
END

COPY_EXISTING ~arnman09.cre~ ~override/arnman09.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ring35" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
  END
END

COPY_EXISTING ~reti.cre~ ~override/reti.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "boot04" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001000) // set undroppable flag
  END
END

COPY_EXISTING ~gaal01.cre~ ~override/gaal01.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "belt09" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
  END
END

COPY_EXISTING ~trrak01.cre~ ~override/trrak01.cre~
 WRITE_ASCII 0x248 ~~ #8 // removes override script
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "amul22" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
  END
END

COPY_EXISTING ~trrak02.cre~ ~override/trrak02.cre~
 WRITE_ASCII 0x248 ~~ #8 // removes override script
 WRITE_ASCII 0x258 ~raksha02~ #8      // race script
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "staf19" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
  END
END

COPY_EXISTING ~trrak03.cre~ ~override/trrak03.cre~
 WRITE_ASCII 0x248 ~~ #8 // removes override script
 WRITE_ASCII 0x250 ~TRRAK02~ #8       // class script
 WRITE_ASCII 0x258 ~raksha02~ #8      // race script

COPY_EXISTING ~udtrap01.cre~ ~override/udtrap01.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "sw1h38" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
  END
END

COPY_EXISTING ~udsvir03.cre~ ~override/udsvir03.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "misc9r" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
  END
END

COPY_EXISTING ~talmiss.cre~ ~override/talmiss.cre~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "misc4y" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~hlkang.cre~ ~override/hlkang.cre~
 WRITE_BYTE  0x52       5 // thac0
 WRITE_BYTE  0x5c     100 // resist acid
 WRITE_BYTE  0x23f     20 // morale
 WRITE_BYTE  0x240      1 // morale Break
 WRITE_BYTE  0x242      1 // morale Recovery
 WRITE_ASCII 0x248 ~~ #8 // removes override script
 WRITE_ASCII 0x250 ~S!hlkang~ #8       // class script
 WRITE_ASCII 0x268 ~~ #8       // removes default script
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ring39" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
  END
END

COPY_EXISTING ~trgeni02.cre~ ~override/trgeni02.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "misc3c" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~RING10~ #8 // write new item
  END
END

COPY_EXISTING ~senpri01.cre~ ~override/senpri01.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "shld31" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~DWSHLD01~ #8 // write new item
  END
END

COPY_EXISTING ~kalah2.cre~ ~override/kalah2.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ring30" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~RING10~ #8 // write new item
  END
END

COPY_EXISTING ~bhcapt01.cre~ ~override/bhcapt01.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "xbow03" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~XBOW01~ #8 // write new item
  END
END

COPY_EXISTING ~vvshad5.cre~ ~override/vvshad5.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "scrl7d" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~SCRL6Z~ #8 // write new item
  END
END

COPY_EXISTING ~daelf.cre~ ~override/daelf.cre~
  SAY NAME1     @458
  SAY NAME2     @458

COPY_EXISTING ~daelf2.cre~ ~override/daelf2.cre~
  SAY NAME1     @458
  SAY NAME2     @458

COPY_EXISTING ~drofod01.cre~ ~override/S!drofod.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x24     138 // current hp
  WRITE_SHORT 0x26     138 // max hp
  WRITE_BYTE  0x52       0 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5b      50 // resist electricity
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x5f      50 // resist magic cold
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     21 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     76 // strength % bonus
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23d     18 // constitution
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!senfig~ #8      // default script
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~helmnoan~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~dwshld01~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~SHIELD~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "CHAN13" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H55" = 0) OR
             ("%item%" STRING_COMPARE_CASE "POTN52" = 0) OR
             ("%item%" STRING_COMPARE_CASE "POTN20" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~drofod01.cre~ ~override/drofod01.cre~
  WRITE_LONG  0x14   15500 // xp
  WRITE_LONG  0x1c     100 // gold
  WRITE_SHORT 0x24     138 // current hp
  WRITE_SHORT 0x26     138 // max hp
  WRITE_BYTE  0x52       0 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5b      50 // resist electricity
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x5f      50 // resist magic cold
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     21 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     76 // strength % bonus
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23d     18 // constitution
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!senfig~ #8      // default script
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~helmnoan~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~dwshld01~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~
  ADD_CRE_ITEM ~potn55~ #3 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  ADD_CRE_ITEM ~potn52~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM3~

COPY_EXISTING ~daqilue.cre~ ~override/daqilue.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "dagg14" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~DAGG01~ #8 // write new item
  END
END

COPY_EXISTING ~lich01.cre~ ~override/lich01.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~lichel01.cre~ ~override/lichel01.cre~
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x5c     100 // resist acid
  WRITE_BYTE  0x234     25 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~scrl9m~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM1~

COPY_EXISTING ~hllich.cre~ ~override/hllich.cre~
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x5c     100 // resist acid
  WRITE_BYTE  0x234     25 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~scrl9m~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM1~

COPY_EXISTING ~nevaziah.cre~ ~override/nevaziah.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x60      25 // resist slashing
  WRITE_BYTE  0x62      25 // resist piercing
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~jael04.cre~ ~override/jael04.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_LONG  0x1c      20 // gold
  WRITE_SHORT 0x24     117 // current hp
  WRITE_SHORT 0x26     117 // max hp
  WRITE_BYTE  0x52       3 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x60      40 // resist slashing
  WRITE_BYTE  0x61      40 // resist crushing
  WRITE_BYTE  0x62      40 // resist piercing
  WRITE_BYTE  0x63      40 // resist missile
  WRITE_BYTE  0x234     18 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23d     17 // constitution
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~helmnoan~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~dwshld01~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~

COPY_EXISTING ~jarlaxle.cre~ ~override/jarlaxle.cre~
  WRITE_LONG  0x1c      2500 // gold

COPY_EXISTING ~nalia10.cre~ ~Override/nalia10.cre~
WRITE_BYTE  0x69     80 // Find traps
WRITE_BYTE  0x6a      0 // Pick pockets
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
PATCH_IF ("%knownsplcount%" > 0) BEGIN
  READ_LONG 0x2A8 "smioffset"
  READ_LONG 0x2B0 "msoffset"
  READ_LONG 0x2B8 "isoffset"
  READ_LONG 0x2BC "ioffset"
  READ_LONG 0x2C4 "effoffset"
  SET "erasedspells" = 0
  SET "cnt" = "%knownsplcount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%knownsploffset%" + "%cnt%"*12) "splresref"
    PATCH_IF ("%splresref%" STRING_COMPARE_CASE "SPWI703" = 0)
   BEGIN
   DELETE_BYTES ("%knownsploffset%" + ("%cnt%"*12)) 12
   SET "erasedspells" = "%erasedspells%" + 1
   END
  SET "cnt" = "%cnt%" - 1
  END
WRITE_LONG 0x2A4 ("%knownsplcount%" - "%erasedspells%")
PATCH_IF ("%smioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%msoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%isoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%ioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%effoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2C4 ("%effoffset%" - ("%erasedspells%" * 12)) END
END
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
READ_LONG 0x2A8 "smioffset"
READ_LONG 0x2B0 "msoffset"
READ_LONG 0x2B8 "isoffset"
READ_LONG 0x2BC "ioffset"
READ_LONG 0x2C4 "effoffset"
READ_LONG 0x2C8 "effcount"
SET "erasedeffects" = 0
WHILE ("%erasedeffects%" < "%effcount%") BEGIN
 DELETE_BYTES "%effoffset%" 264
 SET "erasedeffects" = "%erasedeffects%" + 1
END
SET "moffset" = "%effoffset%"
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 9
WRITE_LONG  ("%moffset%"+ 24) 105
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 9
WRITE_LONG  ("%moffset%"+ 24) 91
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 9
WRITE_LONG  ("%moffset%"+ 24) 113
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 96
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 102
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
WRITE_LONG 0x2C8 5
PATCH_IF ("%knownsploffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A0 ("%knownsploffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%smioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%msoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%isoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%ioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedeffects%" * 264) + 1320) END

COPY_EXISTING ~nalia18.cre~ ~Override/nalia18.cre~
WRITE_BYTE  0x69     80 // Find traps
WRITE_BYTE  0x6a      0 // Pick pockets
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
PATCH_IF ("%knownsplcount%" > 0) BEGIN
  READ_LONG 0x2A8 "smioffset"
  READ_LONG 0x2B0 "msoffset"
  READ_LONG 0x2B8 "isoffset"
  READ_LONG 0x2BC "ioffset"
  READ_LONG 0x2C4 "effoffset"
  SET "erasedspells" = 0
  SET "cnt" = "%knownsplcount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%knownsploffset%" + "%cnt%"*12) "splresref"
    PATCH_IF (("%splresref%" STRING_COMPARE_CASE "SPWI511" = 0) OR
	      ("%splresref%" STRING_COMPARE_CASE "SPWI703" = 0) OR
              ("%splresref%" STRING_COMPARE_CASE "SPWI712" = 0))
   BEGIN
   DELETE_BYTES ("%knownsploffset%" + ("%cnt%"*12)) 12
   SET "erasedspells" = "%erasedspells%" + 1
   END
  SET "cnt" = "%cnt%" - 1
  END
WRITE_LONG 0x2A4 ("%knownsplcount%" - "%erasedspells%")
PATCH_IF ("%smioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%msoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%isoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%ioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%effoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2C4 ("%effoffset%" - ("%erasedspells%" * 12)) END
END

COPY_EXISTING ~nalia8.cre~ ~Override/nalia8.cre~
WRITE_BYTE  0x69     80 // Find traps
WRITE_BYTE  0x6a      0 // Pick pockets
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
PATCH_IF ("%knownsplcount%" > 0) BEGIN
  READ_LONG 0x2A8 "smioffset"
  READ_LONG 0x2B0 "msoffset"
  READ_LONG 0x2B8 "isoffset"
  READ_LONG 0x2BC "ioffset"
  READ_LONG 0x2C4 "effoffset"
  SET "erasedspells" = 0
  SET "cnt" = "%knownsplcount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%knownsploffset%" + "%cnt%"*12) "splresref"
    PATCH_IF ("%splresref%" STRING_COMPARE_CASE "SPWI703" = 0)
   BEGIN
   DELETE_BYTES ("%knownsploffset%" + ("%cnt%"*12)) 12
   SET "erasedspells" = "%erasedspells%" + 1
   END
  SET "cnt" = "%cnt%" - 1
  END
WRITE_LONG 0x2A4 ("%knownsplcount%" - "%erasedspells%")
PATCH_IF ("%smioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%msoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%isoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%ioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%effoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2C4 ("%effoffset%" - ("%erasedspells%" * 12)) END
END
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
READ_LONG 0x2A8 "smioffset"
READ_LONG 0x2B0 "msoffset"
READ_LONG 0x2B8 "isoffset"
READ_LONG 0x2BC "ioffset"
READ_LONG 0x2C4 "effoffset"
READ_LONG 0x2C8 "effcount"
SET "erasedeffects" = 0
WHILE ("%erasedeffects%" < "%effcount%") BEGIN
 DELETE_BYTES "%effoffset%" 264
 SET "erasedeffects" = "%erasedeffects%" + 1
END
SET "moffset" = "%effoffset%"
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 9
WRITE_LONG  ("%moffset%"+ 24) 105
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 9
WRITE_LONG  ("%moffset%"+ 24) 91
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 9
WRITE_LONG  ("%moffset%"+ 24) 113
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 96
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 102
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
WRITE_LONG 0x2C8 5
PATCH_IF ("%knownsploffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A0 ("%knownsploffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%smioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%msoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%isoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%ioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedeffects%" * 264) + 1320) END

COPY_EXISTING ~nalia10.cre~ ~Override/nalia11.cre~

COPY_EXISTING ~nalia10.cre~ ~Override/nalia13.cre~

COPY_EXISTING ~nalia10.cre~ ~Override/nalia15.cre~

COPY_EXISTING ~jan8.cre~ ~Override/jan8.cre~
  WRITE_BYTE  0x55       8 // save vs wands
  WRITE_BYTE  0x58       9 // save vs spell
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
PATCH_IF ("%knownsplcount%" > 0) BEGIN
  READ_LONG 0x2A8 "smioffset"
  READ_LONG 0x2B0 "msoffset"
  READ_LONG 0x2B8 "isoffset"
  READ_LONG 0x2BC "ioffset"
  READ_LONG 0x2C4 "effoffset"
  SET "erasedspells" = 0
  SET "cnt" = "%knownsplcount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%knownsploffset%" + "%cnt%"*12) "splresref"
    PATCH_IF (("%splresref%" STRING_COMPARE_CASE "SPWI703" = 0) OR
	      ("%splresref%" STRING_COMPARE_CASE "SPWI607" = 0) OR
              ("%splresref%" STRING_COMPARE_CASE "SPWI302" = 0))
   BEGIN
   DELETE_BYTES ("%knownsploffset%" + ("%cnt%"*12)) 12
   SET "erasedspells" = "%erasedspells%" + 1
   END
  SET "cnt" = "%cnt%" - 1
  END
WRITE_LONG 0x2A4 ("%knownsplcount%" - "%erasedspells%")
PATCH_IF ("%smioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%msoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%isoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%ioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%effoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2C4 ("%effoffset%" - ("%erasedspells%" * 12)) END
END

COPY_EXISTING ~jan15.cre~ ~Override/jan15.cre~
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x58       7 // save vs spell
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
PATCH_IF ("%knownsplcount%" > 0) BEGIN
  READ_LONG 0x2A8 "smioffset"
  READ_LONG 0x2B0 "msoffset"
  READ_LONG 0x2B8 "isoffset"
  READ_LONG 0x2BC "ioffset"
  READ_LONG 0x2C4 "effoffset"
  SET "erasedspells" = 0
  SET "cnt" = "%knownsplcount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%knownsploffset%" + "%cnt%"*12) "splresref"
    PATCH_IF (("%splresref%" STRING_COMPARE_CASE "SPWI703" = 0) OR
	      ("%splresref%" STRING_COMPARE_CASE "SPWI607" = 0) OR
	      ("%splresref%" STRING_COMPARE_CASE "SPWI302" = 0) OR
	      ("%splresref%" STRING_COMPARE_CASE "SPWI804" = 0) OR
              ("%splresref%" STRING_COMPARE_CASE "SPWI613" = 0))
   BEGIN
   DELETE_BYTES ("%knownsploffset%" + ("%cnt%"*12)) 12
   SET "erasedspells" = "%erasedspells%" + 1
   END
  SET "cnt" = "%cnt%" - 1
  END
WRITE_LONG 0x2A4 ("%knownsplcount%" - "%erasedspells%")
PATCH_IF ("%smioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%msoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%isoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%ioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%effoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2C4 ("%effoffset%" - ("%erasedspells%" * 12)) END
END

COPY_EXISTING ~jan8.cre~ ~Override/jan10.cre~

COPY_EXISTING ~jan8.cre~ ~Override/jan11.cre~

COPY_EXISTING ~jan8.cre~ ~Override/jan12.cre~

COPY_EXISTING ~cernd10.cre~ ~Override/cernd10.cre~
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
PATCH_IF ("%knownsplcount%" > 0) BEGIN
  READ_LONG 0x2A8 "smioffset"
  READ_LONG 0x2B0 "msoffset"
  READ_LONG 0x2B8 "isoffset"
  READ_LONG 0x2BC "ioffset"
  READ_LONG 0x2C4 "effoffset"
  SET "erasedspells" = 0
  SET "cnt" = "%knownsplcount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%knownsploffset%" + "%cnt%"*12) "splresref"
    PATCH_IF (("%splresref%" STRING_COMPARE_CASE "SPPR405" = 0)
	 OR ("%splresref%" STRING_COMPARE_CASE "SPPR507" = 0))
   BEGIN
   DELETE_BYTES ("%knownsploffset%" + ("%cnt%"*12)) 12
   SET "erasedspells" = "%erasedspells%" + 1
   END
  SET "cnt" = "%cnt%" - 1
  END
WRITE_LONG 0x2A4 ("%knownsplcount%" - "%erasedspells%")
PATCH_IF ("%smioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%msoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%isoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%ioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%effoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2C4 ("%effoffset%" - ("%erasedspells%" * 12)) END
END
ADD_KNOWN_SPELL ~SPPR215~ #1 ~priest~
ADD_KNOWN_SPELL ~SPPR317~ #2 ~priest~
ADD_KNOWN_SPELL ~SPPR403~ #3 ~priest~

COPY_EXISTING ~cernd14.cre~ ~Override/cernd14.cre~
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
PATCH_IF ("%knownsplcount%" > 0) BEGIN
  READ_LONG 0x2A8 "smioffset"
  READ_LONG 0x2B0 "msoffset"
  READ_LONG 0x2B8 "isoffset"
  READ_LONG 0x2BC "ioffset"
  READ_LONG 0x2C4 "effoffset"
  SET "erasedspells" = 0
  SET "cnt" = "%knownsplcount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%knownsploffset%" + "%cnt%"*12) "splresref"
    PATCH_IF (("%splresref%" STRING_COMPARE_CASE "SPPR405" = 0)
	 OR ("%splresref%" STRING_COMPARE_CASE "SPPR507" = 0))
   BEGIN
   DELETE_BYTES ("%knownsploffset%" + ("%cnt%"*12)) 12
   SET "erasedspells" = "%erasedspells%" + 1
   END
  SET "cnt" = "%cnt%" - 1
  END
WRITE_LONG 0x2A4 ("%knownsplcount%" - "%erasedspells%")
PATCH_IF ("%smioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%msoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%isoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%ioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%effoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2C4 ("%effoffset%" - ("%erasedspells%" * 12)) END
END
ADD_KNOWN_SPELL ~SPPR215~ #1 ~priest~
ADD_KNOWN_SPELL ~SPPR317~ #2 ~priest~
ADD_KNOWN_SPELL ~SPPR403~ #3 ~priest~

COPY_EXISTING ~jaheir7.cre~ ~Override/jaheir7.cre~
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
PATCH_IF ("%knownsplcount%" > 0) BEGIN
  READ_LONG 0x2A8 "smioffset"
  READ_LONG 0x2B0 "msoffset"
  READ_LONG 0x2B8 "isoffset"
  READ_LONG 0x2BC "ioffset"
  READ_LONG 0x2C4 "effoffset"
  SET "erasedspells" = 0
  SET "cnt" = "%knownsplcount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%knownsploffset%" + "%cnt%"*12) "splresref"
    PATCH_IF ("%splresref%" STRING_COMPARE_CASE "SPPR405" = 0)
   BEGIN
   DELETE_BYTES ("%knownsploffset%" + ("%cnt%"*12)) 12
   SET "erasedspells" = "%erasedspells%" + 1
   END
  SET "cnt" = "%cnt%" - 1
  END
WRITE_LONG 0x2A4 ("%knownsplcount%" - "%erasedspells%")
PATCH_IF ("%smioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%msoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%isoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%ioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%effoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2C4 ("%effoffset%" - ("%erasedspells%" * 12)) END
END
ADD_KNOWN_SPELL ~SPPR215~ #1 ~priest~
ADD_KNOWN_SPELL ~SPPR403~ #3 ~priest~

COPY_EXISTING ~jaheir8.cre~ ~Override/jaheir8.cre~
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
PATCH_IF ("%knownsplcount%" > 0) BEGIN
  READ_LONG 0x2A8 "smioffset"
  READ_LONG 0x2B0 "msoffset"
  READ_LONG 0x2B8 "isoffset"
  READ_LONG 0x2BC "ioffset"
  READ_LONG 0x2C4 "effoffset"
  SET "erasedspells" = 0
  SET "cnt" = "%knownsplcount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%knownsploffset%" + "%cnt%"*12) "splresref"
    PATCH_IF ("%splresref%" STRING_COMPARE_CASE "SPPR405" = 0)
   BEGIN
   DELETE_BYTES ("%knownsploffset%" + ("%cnt%"*12)) 12
   SET "erasedspells" = "%erasedspells%" + 1
   END
  SET "cnt" = "%cnt%" - 1
  END
WRITE_LONG 0x2A4 ("%knownsplcount%" - "%erasedspells%")
PATCH_IF ("%smioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%msoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%isoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%ioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%effoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2C4 ("%effoffset%" - ("%erasedspells%" * 12)) END
END
ADD_KNOWN_SPELL ~SPPR215~ #1 ~priest~
ADD_KNOWN_SPELL ~SPPR403~ #3 ~priest~

COPY_EXISTING ~jaheir8.cre~ ~Override/jaheir11.cre~

COPY_EXISTING ~jaheir8.cre~ ~Override/jaheir12.cre~

COPY_EXISTING ~jahei14.cre~ ~Override/jahei14.cre~
  ADD_KNOWN_SPELL ~SPPR215~ #1 ~priest~
  ADD_KNOWN_SPELL ~SPPR403~ #3 ~priest~

COPY_EXISTING ~viconi16.cre~ ~Override/viconi16.cre~
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
PATCH_IF ("%knownsplcount%" > 0) BEGIN
  READ_LONG 0x2A8 "smioffset"
  READ_LONG 0x2B0 "msoffset"
  READ_LONG 0x2B8 "isoffset"
  READ_LONG 0x2BC "ioffset"
  READ_LONG 0x2C4 "effoffset"
  SET "erasedspells" = 0
  SET "cnt" = "%knownsplcount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%knownsploffset%" + "%cnt%"*12) "splresref"
    PATCH_IF ("%splresref%" STRING_COMPARE_CASE "SPPR606" = 0)
   BEGIN
   DELETE_BYTES ("%knownsploffset%" + ("%cnt%"*12)) 12
   SET "erasedspells" = "%erasedspells%" + 1
   END
  SET "cnt" = "%cnt%" - 1
  END
WRITE_LONG 0x2A4 ("%knownsplcount%" - "%erasedspells%")
PATCH_IF ("%smioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%msoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%isoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%ioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%effoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2C4 ("%effoffset%" - ("%erasedspells%" * 12)) END
END

COPY_EXISTING ~pthral05.cre~ ~override/pthral05.cre~
 WRITE_BYTE  0x53       1 // number of attacks
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "sw1h25" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~SW1H09~ #8 // write new item
  END
END

COPY_EXISTING ~elfirpr2.cre~ ~override/elfirpr2.cre~
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23f     17 // morale

COPY_EXISTING ~elfirsu3.cre~ ~override/elfirsu3.cre~
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23f     17 // morale

COPY_EXISTING ~elearpr2.cre~ ~override/elearpr2.cre~
  WRITE_BYTE  0x238     20 // strength
  WRITE_BYTE  0x23f     17 // morale

COPY_EXISTING ~elairsu1.cre~ ~override/elairsu1.cre~
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23f     16 // morale

COPY_EXISTING ~elairsuw.cre~ ~override/elairsuw.cre~
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23f     16 // morale

COPY_EXISTING ~elairsu2.cre~ ~override/elairsu2.cre~
  WRITE_BYTE  0x238     20 // strength
  WRITE_BYTE  0x23f     17 // morale

COPY_EXISTING ~elearsuw.cre~ ~override/elearsuw.cre~
  WRITE_BYTE  0x238     18 // strength

COPY_EXISTING ~elearsu1.cre~ ~override/elearsu1.cre~
  WRITE_BYTE  0x238     18 // strength

COPY_EXISTING ~elearsu3.cre~ ~override/elearsu3.cre~
  WRITE_BYTE  0x238     20 // strength
  WRITE_BYTE  0x23f     17 // morale

COPY_EXISTING ~sumelair.cre~ ~override/sumelair.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x28     0x7321 // animation
  WRITE_BYTE  0x238     18 // strength
  WRITE_ASCII 0x248 ~~ #8 // removes override script
  WRITE_ASCII 0x250 ~S!antic3~ #8      // class script
  WRITE_ASCII 0x258 ~S!rancm3~ #8      // race script
  WRITE_ASCII 0x260 ~S!alsuc3~ #8       // general script

COPY_EXISTING ~sumelear.cre~ ~override/sumelear.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x238     18 // strength
  WRITE_ASCII 0x248 ~~ #8 // removes override script
  WRITE_ASCII 0x250 ~S!antic3~ #8      // class script
  WRITE_ASCII 0x258 ~S!rancm3~ #8      // race script
  WRITE_ASCII 0x260 ~S!alsuc3~ #8       // general script

COPY_EXISTING ~sumelfir.cre~ ~override/sumelfir.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x28     0x7311 // animation
  WRITE_BYTE  0x238     18 // strength
  WRITE_ASCII 0x250 ~S!antic3~ #8      // class script
  WRITE_ASCII 0x258 ~S!rancm3~ #8      // race script
  WRITE_ASCII 0x268 ~S!alsuc3~ #8      // default script

COPY_EXISTING ~cowenf3.cre~ ~override/cowenf3.cre~
  WRITE_LONG  0x14   12000 // xp
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~staf02~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~scrl7p~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM1~
  ADD_CRE_ITEM ~potn52~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM2~

COPY_EXISTING ~cowenf4.cre~ ~override/cowenf4.cre~
  WRITE_LONG  0x14   9000 // xp
  WRITE_SHORT 0x24      41 // current hp
  WRITE_SHORT 0x26      41 // max hp
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~staf02~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~scrl5h~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM2~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE05" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~hgwra02.cre~ ~override/hgwra03.cre~
  WRITE_ASCII 0x260 ~~ #8       // removes general script

COPY_EXISTING ~sdshadfi.cre~ ~override/sdshadfi.cre~
  WRITE_BYTE  0x5b       0 // resist electricity

COPY_EXISTING ~sewsha01.cre~ ~override/sewsha01.cre~
  WRITE_BYTE  0x5b       0 // resist electricity

COPY_EXISTING ~sewsha02.cre~ ~override/sewsha02.cre~
  WRITE_BYTE  0x5b       0 // resist electricity

COPY_EXISTING ~shadfi01.cre~ ~override/shadfi01.cre~
  WRITE_BYTE  0x5b       0 // resist electricity
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x260 ~S!melee0~ #8       // general script

COPY_EXISTING ~telslav.cre~ ~override/telslav.cre~
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x234     15 // level
  WRITE_ASCII 0x268 ~S!vamp3~ #8       // default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "telslav" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~vamp1~ #8 // write new item
   END
END

COPY_EXISTING ~golada01.cre~ ~override/golada01.cre~
  WRITE_LONG  0x14  20000 // xp
  ADD_CRE_ITEM ~S!adaman~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "goliro" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!goliro~ #8 // write new item
   END
END

COPY_EXISTING ~golkill2.cre~ ~override/golkill2.cre~
  WRITE_LONG  0x14  20000 // xp
  ADD_CRE_ITEM ~S!adaman~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "goliro" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!goliro~ #8 // write new item
   END
END

COPY_EXISTING ~goljug01.cre~ ~override/goljug01.cre~
  WRITE_LONG  0x14   6400 // xp

COPY_EXISTING ~imoen213.cre~ ~override/imoen211.cre~

COPY_EXISTING ~imoen.cre~ ~Override/imoen.cre~
  WRITE_SHORT  0x28  0x6210 // animation
  WRITE_BYTE   0x2d     59 // Minor Colour
  WRITE_BYTE   0x2e     60 // Major Colour

COPY_EXISTING ~imoen6.cre~ ~Override/imoen6.cre~
  WRITE_SHORT  0x28  0x6210 // animation
  WRITE_BYTE   0x2d     59 // Minor Colour
  WRITE_BYTE   0x2e     60 // Major Colour

COPY_EXISTING ~imoendrm.cre~ ~Override/imoendrm.cre~
  WRITE_SHORT  0x28  0x6210 // animation
  WRITE_BYTE   0x2d     59 // Minor Colour
  WRITE_BYTE   0x2e     60 // Major Colour

COPY_EXISTING ~csimoen.cre~ ~Override/csimoen.cre~
  WRITE_SHORT  0x28  0x6210 // animation
  WRITE_BYTE   0x2d     59 // Minor Colour
  WRITE_BYTE   0x2e     60 // Major Colour

COPY_EXISTING ~ppimoen.cre~ ~Override/ppimoen.cre~
  WRITE_SHORT  0x28  0x6210 // animation
  WRITE_BYTE   0x2d     59 // Minor Colour
  WRITE_BYTE   0x2e     60 // Major Colour

COPY_EXISTING ~ppdrimo.cre~ ~Override/ppdrimo.cre~
  WRITE_SHORT  0x28  0x6210 // animation
  WRITE_BYTE   0x2d     59 // Minor Colour
  WRITE_BYTE   0x2e     60 // Major Colour

COPY_EXISTING ~ppdrimov.cre~ ~Override/ppdrimov.cre~
  WRITE_SHORT  0x28  0x6210 // animation
  WRITE_BYTE   0x2d     59 // Minor Colour
  WRITE_BYTE   0x2e     60 // Major Colour

COPY_EXISTING ~cuimoen.cre~ ~Override/cuimoen.cre~
  WRITE_SHORT  0x28  0x6210 // animation
  WRITE_BYTE   0x2d     59 // Minor Colour
  WRITE_BYTE   0x2e     60 // Major Colour

COPY_EXISTING ~cuimoen2.cre~ ~Override/cuimoen2.cre~
  WRITE_SHORT  0x28  0x6210 // animation
  WRITE_BYTE   0x2d     59 // Minor Colour
  WRITE_BYTE   0x2e     60 // Major Colour

COPY_EXISTING ~cuimoen3.cre~ ~Override/cuimoen3.cre~
  WRITE_SHORT  0x28  0x6210 // animation
  WRITE_BYTE   0x2d     59 // Minor Colour
  WRITE_BYTE   0x2e     60 // Major Colour

COPY_EXISTING ~dpimo01.cre~ ~Override/dpimo01.cre~
  WRITE_SHORT  0x28  0x6210 // animation
  WRITE_BYTE   0x2d     59 // Minor Colour
  WRITE_BYTE   0x2e     60 // Major Colour

COPY_EXISTING ~dream1.cre~ ~Override/dream1.cre~
  WRITE_SHORT  0x28  0x6210 // animation
  WRITE_BYTE   0x2d     59 // Minor Colour
  WRITE_BYTE   0x2e     60 // Major Colour

COPY_EXISTING ~drim01.cre~ ~Override/drim01.cre~
  WRITE_SHORT  0x28  0x6210 // animation
  WRITE_BYTE   0x2d     59 // Minor Colour
  WRITE_BYTE   0x2e     60 // Major Colour

COPY_EXISTING ~drim02.cre~ ~Override/drim02.cre~
  WRITE_SHORT  0x28  0x6210 // animation
  WRITE_BYTE   0x2d     59 // Minor Colour
  WRITE_BYTE   0x2e     60 // Major Colour

COPY_EXISTING ~udtrap02.cre~ ~override/udtrap02.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_SHORT 0x24      63 // current hp
  WRITE_SHORT 0x26      63 // max hp
  WRITE_BYTE  0x52      14 // thac0
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~~ #8 // removes override script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~udair.cre~ ~override/udair.cre~
  WRITE_LONG  0x14    3000 // xp

COPY_EXISTING ~udearth.cre~ ~override/udearth.cre~
  WRITE_LONG  0x14    3000 // xp

COPY_EXISTING ~udfire.cre~ ~override/udfire.cre~
  WRITE_LONG  0x14    3000 // xp

COPY_EXISTING ~dstone1.cre~ ~override/dstone1.cre~
 WRITE_LONG  0x14    5000 // xp
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "B3-24" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~GOLSTO~ #8 // write new item
  END
END

COPY_EXISTING ~igolem02.cre~ ~override/igolem02.cre~
 WRITE_LONG  0x14        0 // xp
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "B3-30" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~GOLCLA~ #8 // write new item
  END
END

COPY_EXISTING ~igolfle1.cre~ ~override/igolfle1.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "B2-16" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~GOLFLE~ #8 // write new item
  END
END

COPY_EXISTING ~igolfle2.cre~ ~override/igolfle2.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "B2-16" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~GOLFLE~ #8 // write new item
  END
END

COPY_EXISTING ~igolfle3.cre~ ~override/igolfle3.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "B2-16" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~GOLFLE~ #8 // write new item
  END
END

COPY_EXISTING ~igolfle4.cre~ ~override/igolfle4.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "B2-16" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~GOLFLE~ #8 // write new item
  END
END

COPY_EXISTING ~demglab2.cre~ ~override/demglab2.cre~
 WRITE_LONG  0x14        0 // xp
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ringdemn" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~RING95~ #8 // write new item
  END
END

COPY_EXISTING ~m05demon.cre~ ~override/m05demon.cre~
 WRITE_LONG  0x14        0 // xp
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ringdemn" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~RING92~ #8 // write new item
  END
END

COPY_EXISTING ~golcla01.cre~ ~override/golcla01.cre~
  WRITE_LONG  0x14    6400 // xp

COPY_EXISTING ~goliro01.cre~ ~override/goliro01.cre~
  WRITE_LONG  0x14   10000 // xp
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "goliro" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!goliro~ #8 // write new item
   END
END

COPY_EXISTING ~gordeckb.cre~ ~override/gordeckb.cre~
  ADD_CRE_ITEM ~S!adaman~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "goliro" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!goliro~ #8 // write new item
   END
END

COPY_EXISTING ~gorgoli.cre~ ~override/gorgoli.cre~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "goliro" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!goliro~ #8 // write new item
   END
END

COPY_EXISTING ~golsan01.cre~ ~override/golsan01.cre~
  WRITE_LONG  0x14    5700 // xp

COPY_EXISTING ~golsto01.cre~ ~override/golsto01.cre~
  WRITE_LONG  0x14    5000 // xp

COPY_EXISTING ~gorgrd01.cre~ ~override/gorgrd01.cre~
  WRITE_LONG  0x14   10000 // xp
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "goliro" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!goliro~ #8 // write new item
   END
END

COPY_EXISTING ~gorgrd02.cre~ ~override/gorgrd02.cre~
  WRITE_LONG  0x14   10000 // xp
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "goliro" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!goliro~ #8 // write new item
   END
END

COPY_EXISTING ~gorsta08.cre~ ~override/gorsta08.cre~
  WRITE_LONG  0x14   10000 // xp
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "goliro" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!goliro~ #8 // write new item
   END
END

COPY_EXISTING ~jugjug01.cre~ ~override/jugjug01.cre~
  WRITE_LONG  0x14    5000 // xp
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "B3-24" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~GOLSTO~ #8 // write new item
   END
END

COPY_EXISTING ~kpgol02.cre~ ~override/kpgol02.cre~
  WRITE_LONG  0x14    6400 // xp

COPY_EXISTING ~kpgol03.cre~ ~override/kpgol03.cre~
  WRITE_LONG  0x14    5000 // xp

COPY_EXISTING ~kpgol04.cre~ ~override/kpgol04.cre~
  WRITE_LONG  0x14   10000 // xp
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "goliro" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!goliro~ #8 // write new item
   END
END

COPY_EXISTING ~kpgol05.cre~ ~override/kpgol05.cre~
  WRITE_LONG  0x14    5000 // xp

COPY_EXISTING ~sarfakie.cre~ ~override/sarfakie.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~sarfaki2.cre~ ~override/sarfaki2.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~keldor8.CRE~ ~override/keldor8.CRE~
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     57 // strength % bonus
  WRITE_BYTE  0x23b     14 // wisdom
  WRITE_BYTE  0x23d     18 // constitution
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
READ_LONG 0x2A8 "smioffset"
READ_LONG 0x2B0 "msoffset"
READ_LONG 0x2B8 "isoffset"
READ_LONG 0x2BC "ioffset"
READ_LONG 0x2C4 "effoffset"
READ_LONG 0x2C8 "effcount"
SET "erasedeffects" = 0
WHILE ("%erasedeffects%" < "%effcount%") BEGIN
 DELETE_BYTES "%effoffset%" 264
 SET "erasedeffects" = "%erasedeffects%" + 1
END
SET "moffset" = "%effoffset%"
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 103
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 2
WRITE_LONG  ("%moffset%"+ 24) 93
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 111
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 99
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 102
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
WRITE_LONG 0x2C8 5
PATCH_IF ("%knownsploffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A0 ("%knownsploffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%smioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%msoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%isoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%ioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedeffects%" * 264) + 1320) END

COPY_EXISTING ~keldor14.CRE~ ~override/keldor14.CRE~
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     57 // strength % bonus
  WRITE_BYTE  0x23b     14 // wisdom
  WRITE_BYTE  0x23d     18 // constitution
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
READ_LONG 0x2A8 "smioffset"
READ_LONG 0x2B0 "msoffset"
READ_LONG 0x2B8 "isoffset"
READ_LONG 0x2BC "ioffset"
READ_LONG 0x2C4 "effoffset"
READ_LONG 0x2C8 "effcount"
SET "erasedeffects" = 0
WHILE ("%erasedeffects%" < "%effcount%") BEGIN
 DELETE_BYTES "%effoffset%" 264
 SET "erasedeffects" = "%erasedeffects%" + 1
END
SET "moffset" = "%effoffset%"
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 103
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 2
WRITE_LONG  ("%moffset%"+ 24) 93
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 2
WRITE_LONG  ("%moffset%"+ 24) 111
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 99
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 2
WRITE_LONG  ("%moffset%"+ 24) 102
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
WRITE_LONG 0x2C8 5
PATCH_IF ("%knownsploffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A0 ("%knownsploffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%smioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%msoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%isoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%ioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedeffects%" * 264) + 1320) END

COPY_EXISTING ~keldor8.cre~ ~Override/keldor9.cre~

COPY_EXISTING ~keldor8.cre~ ~Override/keldor10.cre~

COPY_EXISTING ~keldor8.cre~ ~Override/keldor12.cre~

COPY_EXISTING ~VALYG8.CRE~ ~override/VALYG8.CRE~
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     61 // strength % bonus
  WRITE_BYTE  0x23d     17 // constitution
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
READ_LONG 0x2A8 "smioffset"
READ_LONG 0x2B0 "msoffset"
READ_LONG 0x2B8 "isoffset"
READ_LONG 0x2BC "ioffset"
READ_LONG 0x2C4 "effoffset"
READ_LONG 0x2C8 "effcount"
SET "erasedeffects" = 0
WHILE ("%erasedeffects%" < "%effcount%") BEGIN
 DELETE_BYTES "%effoffset%" 264
 SET "erasedeffects" = "%erasedeffects%" + 1
END
SET "moffset" = "%effoffset%"
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 2
WRITE_LONG  ("%moffset%"+ 24) 94
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 104
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 3
WRITE_LONG  ("%moffset%"+ 24) 114
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 100
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 115
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
WRITE_LONG 0x2C8 5
PATCH_IF ("%knownsploffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A0 ("%knownsploffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%smioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%msoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%isoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%ioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedeffects%" * 264) + 1320) END
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "sper01" = 0) BEGIN
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~blun06~ #8
  END
END
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "dagg01" = 0) BEGIN
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~blun01~ #8
  END
END

COPY_EXISTING ~VALYG14.CRE~ ~override/VALYG14.CRE~
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     61 // strength % bonus
  WRITE_BYTE  0x23d     17 // constitution
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
READ_LONG 0x2A8 "smioffset"
READ_LONG 0x2B0 "msoffset"
READ_LONG 0x2B8 "isoffset"
READ_LONG 0x2BC "ioffset"
READ_LONG 0x2C4 "effoffset"
READ_LONG 0x2C8 "effcount"
SET "erasedeffects" = 0
WHILE ("%erasedeffects%" < "%effcount%") BEGIN
 DELETE_BYTES "%effoffset%" 264
 SET "erasedeffects" = "%erasedeffects%" + 1
END
SET "moffset" = "%effoffset%"
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 2
WRITE_LONG  ("%moffset%"+ 24) 94
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 104
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 3
WRITE_LONG  ("%moffset%"+ 24) 114
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 2
WRITE_LONG  ("%moffset%"+ 24) 100
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 2
WRITE_LONG  ("%moffset%"+ 24) 115
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
WRITE_LONG 0x2C8 5
PATCH_IF ("%knownsploffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A0 ("%knownsploffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%smioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%msoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%isoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%ioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedeffects%" * 264) + 1320) END
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "sper06" = 0) BEGIN
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~blun31~ #8
  END
END
ADD_KNOWN_SPELL ~SPPR215~ #1 ~priest~

COPY_EXISTING ~aerie12.cre~ ~Override/aerie12.cre~
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
PATCH_IF ("%knownsplcount%" > 0) BEGIN
  READ_LONG 0x2A8 "smioffset"
  READ_LONG 0x2B0 "msoffset"
  READ_LONG 0x2B8 "isoffset"
  READ_LONG 0x2BC "ioffset"
  READ_LONG 0x2C4 "effoffset"
  SET "erasedspells" = 0
  SET "cnt" = "%knownsplcount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%knownsploffset%" + "%cnt%"*12) "splresref"
    PATCH_IF (("%splresref%" STRING_COMPARE_CASE "SPWI413" = 0) OR
              ("%splresref%" STRING_COMPARE_CASE "SPWI613" = 0))
   BEGIN
   DELETE_BYTES ("%knownsploffset%" + ("%cnt%"*12)) 12
   SET "erasedspells" = "%erasedspells%" + 1
   END
  SET "cnt" = "%cnt%" - 1
  END
WRITE_LONG 0x2A4 ("%knownsplcount%" - "%erasedspells%")
PATCH_IF ("%smioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%msoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%isoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%ioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%effoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2C4 ("%effoffset%" - ("%erasedspells%" * 12)) END
END

COPY_EXISTING ~aerie7.cre~ ~Override/aerie7.cre~
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
PATCH_IF ("%knownsplcount%" > 0) BEGIN
  READ_LONG 0x2A8 "smioffset"
  READ_LONG 0x2B0 "msoffset"
  READ_LONG 0x2B8 "isoffset"
  READ_LONG 0x2BC "ioffset"
  READ_LONG 0x2C4 "effoffset"
  SET "erasedspells" = 0
  SET "cnt" = "%knownsplcount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%knownsploffset%" + "%cnt%"*12) "splresref"
    PATCH_IF (("%splresref%" STRING_COMPARE_CASE "SPWI617" = 0) OR
              ("%splresref%" STRING_COMPARE_CASE "SPWI613" = 0) OR
              ("%splresref%" STRING_COMPARE_CASE "SPWI522" = 0) OR
              ("%splresref%" STRING_COMPARE_CASE "SPWI510" = 0) OR
              ("%splresref%" STRING_COMPARE_CASE "SPWI302" = 0) OR
	      ("%splresref%" STRING_COMPARE_CASE "SPWI318" = 0))
   BEGIN
   DELETE_BYTES ("%knownsploffset%" + ("%cnt%"*12)) 12
   SET "erasedspells" = "%erasedspells%" + 1
   END
  SET "cnt" = "%cnt%" - 1
  END
WRITE_LONG 0x2A4 ("%knownsplcount%" - "%erasedspells%")
PATCH_IF ("%smioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%msoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%isoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%ioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%effoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2C4 ("%effoffset%" - ("%erasedspells%" * 12)) END
END

COPY_EXISTING ~edwin9.cre~ ~Override/edwin9.cre~
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
PATCH_IF ("%knownsplcount%" > 0) BEGIN
  READ_LONG 0x2A8 "smioffset"
  READ_LONG 0x2B0 "msoffset"
  READ_LONG 0x2B8 "isoffset"
  READ_LONG 0x2BC "ioffset"
  READ_LONG 0x2C4 "effoffset"
  SET "erasedspells" = 0
  SET "cnt" = "%knownsplcount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%knownsploffset%" + "%cnt%"*12) "splresref"
    PATCH_IF (("%splresref%" STRING_COMPARE_CASE "SPWI617" = 0) OR
	      ("%splresref%" STRING_COMPARE_CASE "SPWI522" = 0) OR
	      ("%splresref%" STRING_COMPARE_CASE "SPWI302" = 0) OR
	      ("%splresref%" STRING_COMPARE_CASE "SPWI815" = 0) OR
              ("%splresref%" STRING_COMPARE_CASE "SPWI607" = 0))
   BEGIN
   DELETE_BYTES ("%knownsploffset%" + ("%cnt%"*12)) 12
   SET "erasedspells" = "%erasedspells%" + 1
   END
  SET "cnt" = "%cnt%" - 1
  END
WRITE_LONG 0x2A4 ("%knownsplcount%" - "%erasedspells%")
PATCH_IF ("%smioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%msoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%isoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%ioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%effoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2C4 ("%effoffset%" - ("%erasedspells%" * 12)) END
END
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A8 "smioffset"
READ_LONG 0x2AC "smicount"
READ_LONG 0x2B0 "msoffset"
READ_LONG 0x2B4 "mscount"
READ_LONG 0x2B8 "isoffset"
READ_LONG 0x2BC "ioffset"
READ_LONG 0x2C4 "effoffset"
SET "Level5Erased" = 0
SET "cnt" = "%mscount%" - 1
WHILE ("%cnt%" >= 0) BEGIN
 READ_ASCII ("%msoffset%" + "%cnt%"*12) "splresref"
 PATCH_IF ("%splresref%" STRING_COMPARE_CASE "SPWI522" = 0)
 BEGIN
  DELETE_BYTES ("%msoffset%" + ("%cnt%"*12)) 12
  SET "Level5Erased" = "%Level5Erased%" + 1
 END
 SET "cnt" = "%cnt%" - 1
END
SET "erasedMemorizations" = "%Level5Erased%"
WRITE_LONG 0x2B4 "%mscount%" - "%erasedMemorizations%"
PATCH_IF ("%knownsploffset%" > "%msoffset%") BEGIN WRITE_LONG 0x2A0 ("%knownsploffset%" - ("%erasedMemorizations%" * 12)) END
PATCH_IF ("%smioffset%" > "%msoffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedMemorizations%" * 12)) END
PATCH_IF ("%isoffset%" > "%msoffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedMemorizations%" * 12)) END
PATCH_IF ("%ioffset%" > "%msoffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedMemorizations%" * 12)) END
PATCH_IF ("%effoffset%" > "%msoffset%") BEGIN WRITE_LONG 0x2C4 ("%effoffset%" - ("%erasedMemorizations%" * 12)) END
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A8 "smioffset"
READ_LONG 0x2B8 "isoffset"
READ_LONG 0x2BC "ioffset"
READ_LONG 0x2C4 "effoffset"
FOR (i = 0; i < "%smicount%"; i = i + 1)
BEGIN
 READ_SHORT ("%smioffset%" + 16 * i)  "spllevel"
 READ_SHORT ("%smioffset%" + 16 * i + 6)  "spltype"
 PATCH_IF (("%spllevel%" = 4) AND ("%spltype%" = 1))
 BEGIN
  READ_LONG ("%smioffset%" + 16 * i + 8)  "mseindex"
  READ_LONG ("%smioffset%" + 16 * i + 12)  "msecount"
  SET "newCount" = "%msecount%" - "%Level5Erased%"
  PATCH_IF ("%newCount%" < 0) BEGIN SET "%newCount%" = 0 END
  WRITE_LONG ("%smioffset%" + 16 * i + 12) "%newCount%"
  FOR (j = 0; j < "%smicount%"; j = j + 1)
  BEGIN
   READ_LONG ("%smioffset%" + 16 * j + 8)  "mseidx"
   PATCH_IF ("%mseidx%" > "%mseindex%")
   BEGIN
    WRITE_LONG ("%smioffset%" + 16 * j + 8)  ("%mseidx%" - "%Level5Erased%")
   END
  END
 END
END

COPY_EXISTING ~edwin15.cre~ ~Override/edwin15.cre~
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
PATCH_IF ("%knownsplcount%" > 0) BEGIN
  READ_LONG 0x2A8 "smioffset"
  READ_LONG 0x2B0 "msoffset"
  READ_LONG 0x2B8 "isoffset"
  READ_LONG 0x2BC "ioffset"
  READ_LONG 0x2C4 "effoffset"
  SET "erasedspells" = 0
  SET "cnt" = "%knownsplcount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%knownsploffset%" + "%cnt%"*12) "splresref"
    PATCH_IF (("%splresref%" STRING_COMPARE_CASE "SPWI617" = 0) OR
	      ("%splresref%" STRING_COMPARE_CASE "SPWI815" = 0) OR
	      ("%splresref%" STRING_COMPARE_CASE "SPWI607" = 0) OR
	      ("%splresref%" STRING_COMPARE_CASE "SPWI613" = 0) OR
	      ("%splresref%" STRING_COMPARE_CASE "SPWI707" = 0) OR
	      ("%splresref%" STRING_COMPARE_CASE "SPWI712" = 0) OR
              ("%splresref%" STRING_COMPARE_CASE "SPWI710" = 0))
   BEGIN
   DELETE_BYTES ("%knownsploffset%" + ("%cnt%"*12)) 12
   SET "erasedspells" = "%erasedspells%" + 1
   END
  SET "cnt" = "%cnt%" - 1
  END
WRITE_LONG 0x2A4 ("%knownsplcount%" - "%erasedspells%")
PATCH_IF ("%smioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%msoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%isoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%ioffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedspells%" * 12)) END
PATCH_IF ("%effoffset%" > "%knownsploffset%") BEGIN WRITE_LONG 0x2C4 ("%effoffset%" - ("%erasedspells%" * 12)) END
END

COPY_EXISTING ~MAZZY9.CRE~ ~override/MAZZY9.CRE~
  WRITE_BYTE  0x54       7 // save vs death
  WRITE_BYTE  0x55       9 // save vs wands
  WRITE_BYTE  0x58      10 // save vs spell
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
READ_LONG 0x2A8 "smioffset"
READ_LONG 0x2B0 "msoffset"
READ_LONG 0x2B8 "isoffset"
READ_LONG 0x2BC "ioffset"
READ_LONG 0x2C4 "effoffset"
READ_LONG 0x2C8 "effcount"
SET "erasedeffects" = 0
WHILE ("%erasedeffects%" < "%effcount%") BEGIN
 DELETE_BYTES "%effoffset%" 264
 SET "erasedeffects" = "%erasedeffects%" + 1
END
SET "moffset" = "%effoffset%"
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 105
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 3
WRITE_LONG  ("%moffset%"+ 24) 91
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 114
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 92
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 97
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
WRITE_LONG 0x2C8 5
PATCH_IF ("%knownsploffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A0 ("%knownsploffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%smioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%msoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%isoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%ioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedeffects%" * 264) + 1320) END

COPY_EXISTING ~MAZZY15.CRE~ ~override/MAZZY15.CRE~
  WRITE_BYTE  0x54       6 // save vs death
  WRITE_BYTE  0x55       8 // save vs wands
  WRITE_BYTE  0x58       9 // save vs spell
READ_LONG 0x2A0 "knownsploffset"
READ_LONG 0x2A4 "knownsplcount"
READ_LONG 0x2A8 "smioffset"
READ_LONG 0x2B0 "msoffset"
READ_LONG 0x2B8 "isoffset"
READ_LONG 0x2BC "ioffset"
READ_LONG 0x2C4 "effoffset"
READ_LONG 0x2C8 "effcount"
SET "erasedeffects" = 0
WHILE ("%erasedeffects%" < "%effcount%") BEGIN
 DELETE_BYTES "%effoffset%" 264
 SET "erasedeffects" = "%erasedeffects%" + 1
END
SET "moffset" = "%effoffset%"
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 105
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 4
WRITE_LONG  ("%moffset%"+ 24) 91
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 2
WRITE_LONG  ("%moffset%"+ 24) 114
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 92
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
INSERT_BYTES  "%moffset%" 264
WRITE_LONG  ("%moffset%"+ 8) 233
WRITE_LONG  ("%moffset%"+ 20) 1
WRITE_LONG  ("%moffset%"+ 24) 97
WRITE_LONG  ("%moffset%"+ 28) 9
WRITE_SHORT ("%moffset%"+ 36) 100
SET "moffset" = "%moffset%" + 264
WRITE_LONG 0x2C8 5
PATCH_IF ("%knownsploffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A0 ("%knownsploffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%smioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2A8 ("%smioffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%msoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B0 ("%msoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%isoffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2B8 ("%isoffset%" - ("%erasedeffects%" * 264) + 1320) END
PATCH_IF ("%ioffset%" > "%effoffset%") BEGIN WRITE_LONG 0x2BC ("%ioffset%" - ("%erasedeffects%" * 264) + 1320) END

COPY_EXISTING ~korgan8.CRE~ ~override/korgan8.CRE~
  WRITE_BYTE  0x54       9 // save vs death
  WRITE_BYTE  0x55      11 // save vs wands
  WRITE_BYTE  0x58      12 // save vs spell

COPY_EXISTING ~korgan15.CRE~ ~override/korgan15.CRE~
  WRITE_BYTE  0x54       6 // save vs death
  WRITE_BYTE  0x55       8 // save vs wands
  WRITE_BYTE  0x58       9 // save vs spell

COPY_EXISTING ~minsc8.cre~ ~Override/minsc9.cre~

COPY_EXISTING ~minsc8.cre~ ~Override/minsc10.cre~

COPY_EXISTING ~minsc8.cre~ ~Override/minsc12.cre~

COPY_EXISTING ~minsc14.cre~ ~Override/minsc14.cre~
  ADD_KNOWN_SPELL ~SPPR215~ #1 ~priest~

COPY_EXISTING ~edwin9.cre~ ~Override/edwin11.cre~

COPY_EXISTING ~edwin9.cre~ ~Override/edwin12.cre~

COPY_EXISTING ~edwin9.cre~ ~Override/edwin13.cre~

COPY_EXISTING ~edwin9.cre~ ~Override/edwin7.cre~

COPY_EXISTING ~viconi8.cre~ ~Override/viconi9.cre~

COPY_EXISTING ~viconi8.cre~ ~Override/viconi11.cre~

COPY_EXISTING ~viconi8.cre~ ~Override/viconi13.cre~

COPY_EXISTING ~viconi8.cre~ ~Override/viconi13.cre~

COPY_EXISTING ~mazzy9.cre~ ~Override/mazzy8.cre~

COPY_EXISTING ~mazzy9.cre~ ~Override/mazzy11.cre~

COPY_EXISTING ~mazzy9.cre~ ~Override/mazzy12.cre~

COPY_EXISTING ~korgan8.cre~ ~Override/korgan9.cre~

COPY_EXISTING ~korgan8.cre~ ~Override/korgan11.cre~

COPY_EXISTING ~korgan8.cre~ ~Override/korgan12.cre~

COPY_EXISTING ~aerie7.cre~ ~Override/aerie6.cre~

COPY_EXISTING ~aerie7.cre~ ~Override/aerie9.cre~

COPY_EXISTING ~aerie7.cre~ ~Override/aerie10.cre~

COPY_EXISTING ~aerie7.cre~ ~Override/aerie11.cre~

COPY_EXISTING ~haer11.cre~ ~Override/haer13.cre~
  WRITE_LONG  0x18  960000 // XP

COPY_EXISTING ~haer13.cre~ ~Override/haer15.cre~

COPY_EXISTING ~otyugh.cre~ ~override/otyugh.cre~
  WRITE_LONG  0x14    1400 // xp
  WRITE_BYTE  0x23f     14 // morale

COPY_EXISTING ~otyugh01.cre~ ~override/otyugh01.cre~
  WRITE_LONG  0x14    1400 // xp
  WRITE_BYTE  0x23f     14 // morale

COPY_EXISTING ~eleoty01.cre~ ~override/eleoty01.cre~
  WRITE_LONG  0x14    3000 // xp
  WRITE_BYTE  0x234     10 // level
  WRITE_BYTE  0x23f     14 // morale

COPY_EXISTING ~deck615.cre~ ~override/deck615.cre~
  WRITE_SHORT 0x24     132 // current hp
  WRITE_SHORT 0x26     132 // max hp
  WRITE_BYTE  0x52      1 // thac0
  WRITE_BYTE  0x54      3 // save vs death
  WRITE_BYTE  0x55      5 // save vs wands
  WRITE_BYTE  0x56      4 // save vs polymorph
  WRITE_BYTE  0x57      4 // save vs breath
  WRITE_BYTE  0x58      6 // save vs spell
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x235     18 // level secondary class
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~ringdemn~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~bodtan.cre~ ~override/bodtan.cre~
  WRITE_LONG  0x14   13500 // xp
  WRITE_SHORT 0x24      75 // current hp
  WRITE_SHORT 0x26      75 // max hp
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!bodtan~ #8 // override script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~potn11~ #0 #0 #0 ~UNSTEALABLE~ ~INV8~

COPY_EXISTING ~gith01.cre~ ~override/gith01.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_SHORT 0x24     100 // current hp
  WRITE_SHORT 0x26     100 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!gith~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "potn10" = 0) BEGIN
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~potn52~ #8
   END
END

COPY_EXISTING ~gith02.cre~ ~override/gith02.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     110 // current hp
  WRITE_SHORT 0x26     110 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!gith~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "potn10" = 0) BEGIN
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~potn52~ #8
   END
END

COPY_EXISTING ~gith03.cre~ ~override/gith03.cre~
  WRITE_LONG  0x14    8500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       4 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!gith~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "potn10" = 0) BEGIN
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~potn52~ #8
   END
END

COPY_EXISTING ~gith04.cre~ ~override/gith04.cre~
  WRITE_SHORT 0x24      56 // current hp
  WRITE_SHORT 0x26      56 // max hp
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x57      12 // save vs breath
  WRITE_BYTE  0x234      8 // level
  WRITE_BYTE  0x235      8 // level secondary class
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_BYTE  0x273     0x7 // class fighter mage
  ADD_CRE_ITEM ~S!gith~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~

COPY_EXISTING ~mekrat.cre~ ~override/mekrat.cre~
 WRITE_LONG  0x14    8500 // xp
 WRITE_BYTE  0x52      15 // thac0
 WRITE_BYTE  0x54      10 // save vs death
 WRITE_BYTE  0x55       5 // save vs wands
 WRITE_BYTE  0x56       7 // save vs polymorph
 WRITE_BYTE  0x57       9 // save vs breath
 WRITE_BYTE  0x58       6 // save vs spell
 WRITE_BYTE  0x59      75 // resist fire
 WRITE_BYTE  0x5a      75 // resist cold
 WRITE_BYTE  0x5b      40 // resist electricity
 WRITE_BYTE  0x5c      75 // resist acid
 WRITE_BYTE  0x234     17 // level
 WRITE_BYTE  0x23f     19 // morale
 WRITE_BYTE  0x240      1 // morale Break
 WRITE_BYTE  0x242      1 // morale Recovery
 WRITE_ASCII 0x258 ~~ #8      // removes race script
 WRITE_ASCII 0x268 ~~ #8      // removes default script
 ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
 ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
 ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "clck10" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~scrl3g~ #8 // write new item
  END
END

COPY_EXISTING ~flyfgt04.cre~ ~override/flyfgt04.cre~
  WRITE_LONG  0x14   13000 // xp
  WRITE_SHORT 0x24      88 // current hp
  WRITE_SHORT 0x26      88 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x235     13 // level secondary class
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23a     18 // intelligence
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_BYTE  0x273     0x7 // class fighter mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "clck10" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~clck01~ #8 // write new item
   END
END

COPY_EXISTING ~jaga1.cre~ ~override/jaga1.cre~
  WRITE_LONG  0x14   13000 // xp
  WRITE_SHORT 0x24      88 // current hp
  WRITE_SHORT 0x26      88 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x235     13 // level secondary class
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     91 // strength % bonus
  WRITE_BYTE  0x23a     18 // intelligence
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_BYTE  0x273     0x7 // class fighter mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~jangit02.cre~ ~override/jangit02.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "clck10" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~clck01~ #8 // write new item
  END
END

COPY_EXISTING ~jaga3.cre~ ~override/jaga3.cre~
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ring08" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~ring06~ #8 // write new item
  END
END

COPY_EXISTING ~ppmind01.cre~ ~override/ppmind01.cre~
 WRITE_LONG  0x14    4000 // xp
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "sw2h12" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~miscal~ #8 // write new item
  END
END

COPY_EXISTING ~ppdjinn2.cre~ ~override/ppdjinn2.cre~
 WRITE_LONG  0x14    5000 // xp

COPY_EXISTING ~pptroll1.cre~ ~override/pptroll1.cre~
 WRITE_LONG  0x14    3000 // xp
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "sw1h45" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~miscal~ #8 // write new item
  END
END

COPY_EXISTING ~ppumb02.cre~ ~override/ppumb02.cre~
  WRITE_LONG  0x14    3000 // xp
  WRITE_SHORT 0x24      74 // current hp
  WRITE_SHORT 0x26      74 // max hp
  WRITE_BYTE  0x52      11 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234     10 // level
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~kpumb01.cre~ ~override/kpumb01.cre~
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234     10 // level
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~udill02.cre~ ~override/udill02.cre~
  WRITE_SHORT 0x24      74 // current hp
  WRITE_SHORT 0x26      74 // max hp
  WRITE_BYTE  0x52      11 // thac0
  WRITE_BYTE  0x53       3 // number of attacks
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234     10 // level
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~udumber.cre~ ~override/udumber.cre~
  WRITE_LONG  0x14    3000 // xp
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234     10 // level
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~ppworker.cre~ ~override/ppworker.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_SHORT 0x24      63 // current hp
  WRITE_SHORT 0x26      63 // max hp
  WRITE_BYTE  0x52      14 // thac0
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~dragring~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~dagg03~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~

COPY_EXISTING ~mage18a.cre~ ~override/mage18a.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_SHORT 0x24      63 // current hp
  WRITE_SHORT 0x26      63 // max hp
  WRITE_BYTE  0x52      14 // thac0
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~staf18~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ TWOHANDED

COPY_EXISTING ~uddoor05.cre~ ~override/uddoor05.cre~
  WRITE_LONG  0x14   15000 // xp
  WRITE_SHORT 0x24      63 // current hp
  WRITE_SHORT 0x26      63 // max hp
  WRITE_BYTE  0x52      14 // thac0
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~

COPY_EXISTING ~jarlich.cre~ ~override/jarlich.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_SHORT 0x24      63 // current hp
  WRITE_SHORT 0x26      63 // max hp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x58       3 // save vs spell
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~udtrap04.cre~ ~override/udtrap04.cre~
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55       3 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       7 // save vs breath
  WRITE_BYTE  0x58       4 // save vs spell
  WRITE_BYTE  0x5c     100 // resist acid
  WRITE_BYTE  0x234     25 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~mage20b~ #8       // class script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~hgmag01.cre~ ~override/hgmag01.cre~
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~hgmag02.cre~ ~override/hgmag02.cre~
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~sendai7.cre~ ~override/sendai7.cre~
  WRITE_BYTE  0x234     25 // level
  WRITE_ASCII 0x250 ~mage20a~ #8       // class script

COPY_EXISTING ~sewyag04.cre~ ~override/sewyag04.cre~
  WRITE_SHORT 0x24      68 // current hp
  WRITE_SHORT 0x26      68 // max hp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     25 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_ASCII 0x250 ~mage20a~ #8       // class script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~celich.cre~ ~override/celich.cre~
  WRITE_LONG  0x14   18000 // xp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x235      1 // level secondary class
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~mage18d~ #8       // class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~lich~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "staf01" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~lich02~ #8 // write new item
   END
END

COPY_EXISTING ~cederil.cre~ ~override/cederil.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x235      1 // level secondary class
  WRITE_BYTE  0x238     17 // strength
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~jclone01.cre~ ~override/jclone01.cre~
  WRITE_LONG  0x14    3500 // xp
  WRITE_SHORT 0x24     105 // current hp
  WRITE_SHORT 0x26     105 // max hp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     14 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     91 // strength % bonus
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~icyuan02.cre~ ~override/icyuan02.cre~
  WRITE_LONG  0x14   14000 // xp
  WRITE_SHORT 0x24     152 // current hp
  WRITE_SHORT 0x26     152 // max hp
  WRITE_BYTE  0x52       2 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      30 // resist slashing
  WRITE_BYTE  0x61      30 // resist crushing
  WRITE_BYTE  0x62      30 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     19 // level
  WRITE_BYTE  0x238     21 // strength
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~S!antic2~ #8       // class script
  WRITE_ASCII 0x268 ~S!rancm4~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW1H04" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!yuansu~ #8 // write new item
   END
END

COPY_EXISTING ~gorsta01.cre~ ~override/gorsta01.cre~
 WRITE_LONG  0x14   15000 // xp
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "sw1h62" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~sw1h02~ #8 // write new item
  END
END

COPY_EXISTING ~gorsta07.cre~ ~override/gorsta07.cre~
 WRITE_LONG  0x14   15000 // xp
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "sw1h67" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~sw1h02~ #8 // write new item
  END
END

COPY_EXISTING ~senill02.cre~ ~override/senill02.cre~
  WRITE_SHORT 0x24     160 // current hp
  WRITE_SHORT 0x26     160 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x235      1 // level secondary class
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~~ #8 // removes override script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~uddoor06.cre~ ~override/uddoor06.cre~
  WRITE_SHORT 0x24     117 // current hp
  WRITE_SHORT 0x26     117 // max hp
  WRITE_BYTE  0x52       3 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5d      76 // resist magic
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x235     18 // level secondary class
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x273     0x8 // class fighter cleric
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~dwplat01~ #0 #0 #0 ~UNSTEALABLE~ ~ARMOR~
  ADD_CRE_ITEM ~dwshld01~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~
  ADD_CRE_ITEM ~dwblun01~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~ring06~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~potn10~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM1~

COPY_EXISTING ~drow07.cre~ ~override/drow07.cre~
  WRITE_LONG  0x14    9000 // xp
  WRITE_SHORT 0x24     117 // current hp
  WRITE_SHORT 0x26     117 // max hp
  WRITE_BYTE  0x52       3 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x235     18 // level secondary class
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~~ #8 // removes override script
  WRITE_ASCII 0x260 ~pries18a~ #8       // general script
  WRITE_ASCII 0x268 ~S!antic3~ #8      // default script
  WRITE_BYTE  0x273     0x8 // class fighter cleric
  WRITE_BYTE  0x27b     0x13 // alignment
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~dwplat01~ #0 #0 #0 ~UNSTEALABLE~ ~ARMOR~
  ADD_CRE_ITEM ~dwshld01~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~dwblun01~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE~ ~LRING~
  ADD_CRE_ITEM ~potn10~ #0 #0 #0 ~UNSTEALABLE~ ~QITEM1~

COPY_EXISTING ~drow06.cre~ ~override/drow06.cre~
  WRITE_LONG  0x14    8500 // xp
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~~ #8  // removes override script
  WRITE_ASCII 0x250 ~mage16a~ #8       // class script
  WRITE_ASCII 0x260 ~S!antic3~ #8       // general script
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE02" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~uddrow27.cre~ ~override/uddrow27.cre~
  WRITE_LONG  0x14    9500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       2 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     19 // level
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~~ #8       // removes class script
  WRITE_ASCII 0x268 ~S!weapb3~ #8      // default script
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~helmnoan~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~dwshld01~ #0 #0 #0 ~UNSTEALABLE~ ~SHIELD~

COPY_EXISTING ~dgfig01.cre~ ~override/dgfig01.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~

COPY_EXISTING ~dgmag01.cre~ ~override/dgmag01.cre~
  WRITE_LONG  0x14    2000 // xp
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~staf01~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ TWOHANDED

COPY_EXISTING ~cefgt01.cre~ ~override/cefgt01.cre~
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~

COPY_EXISTING ~cefgt02.cre~ ~override/cefgt02.cre~
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~

COPY_EXISTING ~udumb02.cre~ ~override/udumb02.cre~
  WRITE_LONG  0x14    3000 // xp
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234     10 // level
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~umbhul01.cre~ ~override/umbhul01.cre~
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234     10 // level
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~umbhul02.cre~ ~override/umbhul02.cre~
  WRITE_LONG  0x14    6000 // xp
  WRITE_BYTE  0x234     12 // level
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!dracon~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~
  ADD_CRE_ITEM ~antiweb~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~mindfl01.cre~ ~override/mindfl01.cre~
  WRITE_LONG  0x14    4000 // xp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~ppguard4.cre~ ~override/ppguard4.cre~
  WRITE_LONG  0x14    8500 // xp
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x52      14 // thac0
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x238     17 // strength
  WRITE_BYTE  0x23a     17 // intelligence
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x258 ~mage16m~ #8      // race script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~
  ADD_CRE_ITEM ~ring06~ #0 #0 #0 ~UNSTEALABLE~ ~LRING~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "sw1h08" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~staf06~ #8 // write new item
   END
END

COPY_EXISTING ~drow06.cre~ ~override/drofod02.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold

COPY_EXISTING ~polyrat.cre~ ~override/polyrat.cre~
  WRITE_BYTE  0x60      0 // resist slashing
  WRITE_BYTE  0x61      0 // resist crushing
  WRITE_BYTE  0x62      0 // resist piercing
  WRITE_BYTE  0x63      0 // resist missile

COPY_EXISTING ~plytroll.cre~ ~override/plytroll.cre~
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x53       1 // number of attacks

COPY_EXISTING ~polyochr.cre~ ~override/polyochr.cre~
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x63      50 // resist missile

COPY_EXISTING ~uddrow18.cre~ ~override/uddrow18.cre~
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x52      16 // thac0
  WRITE_BYTE  0x54      11 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57      11 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x250 ~uddrow18~ #8         // class script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~

COPY_EXISTING ~uddrow19.cre~ ~override/uddrow19.cre~
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~uddrow19~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!miss6~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BOOTS~

COPY_EXISTING ~behgau01.cre~ ~override/behgau01.cre~
  WRITE_LONG  0x14    4500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  WRITE_ASCII 0x268 ~S!rancm3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~behold01.cre~ ~override/behold01.cre~
  WRITE_LONG  0x14    8000 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  WRITE_ASCII 0x268 ~S!rancm3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~beheld01.cre~ ~override/beheld01.cre~
  WRITE_LONG  0x14    9000 // xp
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  WRITE_ASCII 0x268 ~S!rancm3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~beholder~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~

COPY_EXISTING ~cultbh1.cre~ ~override/cultbh1.cre~
  WRITE_LONG  0x14    4500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  WRITE_ASCII 0x268 ~S!rancm3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "P2-16" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~behold~ #8 // write new item
   END
END

COPY_EXISTING ~cultbh2.cre~ ~override/cultbh2.cre~
  WRITE_LONG  0x14    4500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  WRITE_ASCII 0x268 ~S!rancm3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "P2-16" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~behold~ #8 // write new item
   END
END

COPY_EXISTING ~cultbh3.cre~ ~override/cultbh3.cre~
  WRITE_LONG  0x14    8000 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  WRITE_ASCII 0x268 ~S!rancm3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~beholder~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "P2-16" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~behold~ #8 // write new item
   END
END

COPY_EXISTING ~cultbh4.cre~ ~override/cultbh4.cre~
  WRITE_LONG  0x14    8000 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234      9 // level
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x248 ~S!antich~ #8 // override script
  WRITE_ASCII 0x250 ~gensht01~ #8         // class script
  WRITE_ASCII 0x268 ~S!rancm3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~beholder~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "P2-8" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~behold~ #8 // write new item
   END
END

COPY_EXISTING ~cow.cre~ ~override/cow.cre~
  WRITE_ASCII 0x260 ~S!anima1~ #8       // general script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~ncow.cre~ ~override/ncow.cre~
  WRITE_ASCII 0x260 ~S!anima1~ #8       // general script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~ncat.cre~ ~override/ncat.cre~
  WRITE_ASCII 0x260 ~S!anima1~ #8       // general script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~nchick.cre~ ~override/nchick.cre~
  WRITE_ASCII 0x260 ~S!anima1~ #8       // general script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~nhorse.cre~ ~override/nhorse.cre~
  WRITE_ASCII 0x260 ~S!anima1~ #8       // general script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~chicke.cre~ ~override/chicke.cre~
  WRITE_ASCII 0x260 ~S!anima1~ #8       // general script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~rat.cre~ ~override/rat.cre~
  WRITE_ASCII 0x258 ~S!anima1~ #8      // race script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~cat.cre~ ~override/cat.cre~
  WRITE_ASCII 0x258 ~S!anima1~ #8      // race script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~ndog.cre~ ~override/ndog.cre~
  WRITE_ASCII 0x248 ~S!anima3~ #8 // override script
  WRITE_ASCII 0x250 ~WILDDOG~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~moose01.cre~ ~override/moose01.cre~
  WRITE_ASCII 0x250 ~S!anima1~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~squirl.cre~ ~override/squirl.cre~
  WRITE_ASCII 0x250 ~S!anima1~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~squirr.cre~ ~override/squirr.cre~
  WRITE_ASCII 0x250 ~S!anima1~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~rabbit01.cre~ ~override/rabbit01.cre~
  WRITE_ASCII 0x250 ~S!anima1~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~gemch01.cre~ ~override/gemch01.cre~
  WRITE_ASCII 0x248 ~S!anima2~ #8 // override script
  WRITE_ASCII 0x250 ~gemchick~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~gemch02.cre~ ~override/gemch02.cre~
  WRITE_ASCII 0x248 ~S!anima2~ #8 // override script
  WRITE_ASCII 0x250 ~gemchick~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~deer01.cre~ ~override/deer01.cre~
  WRITE_ASCII 0x248 ~S!anima1~ #8 // override script
  WRITE_ASCII 0x250 ~genshy~ #8         // class script
  WRITE_ASCII 0x258 ~prey~ #8      // race script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~grhog01.cre~ ~override/grhog01.cre~
  WRITE_ASCII 0x250 ~S!anima1~ #8         // class script
  WRITE_ASCII 0x258 ~prey~ #8      // race script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~bearbr.cre~ ~override/bearbr.cre~
  WRITE_ASCII 0x248 ~S!anima3~ #8 // override script
  WRITE_ASCII 0x250 ~SUMSHT02~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~beargr.cre~ ~override/beargr.cre~
  WRITE_LONG  0x14      0 // xp
  WRITE_ASCII 0x248 ~S!anima3~ #8 // override script
  WRITE_ASCII 0x250 ~SUMSHT02~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~pheas01.cre~ ~override/pheas01.cre~
  WRITE_ASCII 0x250 ~S!anima1~ #8         // class script
  WRITE_ASCII 0x258 ~genshy~ #8      // race script
  WRITE_ASCII 0x260 ~prey~ #8       // general script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~catliowp.cre~ ~override/catliowp.cre~
 WRITE_LONG  0x14      0 // xp
 WRITE_SHORT 0x24     80 // current hp
 WRITE_SHORT 0x26     80 // max hp
 WRITE_BYTE  0x52     11 // thac0
 WRITE_BYTE  0x54      8 // save vs death
 WRITE_BYTE  0x55     10 // save vs wands
 WRITE_BYTE  0x56      9 // save vs polymorph
 WRITE_BYTE  0x57      9 // save vs breath
 WRITE_BYTE  0x58     11 // save vs spell
 WRITE_BYTE  0x234    10 // level
 WRITE_BYTE  0x23f    17 // morale
 WRITE_BYTE  0x240     3 // morale Break
 WRITE_BYTE  0x242     3 // morale Recovery
 WRITE_ASCII 0x258 ~S!ranpm3~ #8      // race script
 WRITE_ASCII 0x268 ~S!alsup3~ #8      // default script
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "catlio" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!catlio~ #8 // write new item
  END
END
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "S!catlio" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00000010) // set Unstealable flag
  END
END

COPY_EXISTING ~ar18mage.cre~ ~override/ar18mage.cre~
  WRITE_LONG  0x14    8500 // xp
  WRITE_LONG  0x1c     500 // gold
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5c      50 // resist acid
  WRITE_BYTE  0x5e      50 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      50 // resist missile
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~mage14c~ #8  // override script
  WRITE_ASCII 0x250 ~GPSHOUT~ #8       // class script
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~c6drizz3.cre~ ~override/c6drizz3.cre~
  WRITE_SHORT 0x24      98 // current hp
  WRITE_SHORT 0x26      98 // max hp
  WRITE_BYTE  0x52       3 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x234     18 // level

COPY_EXISTING ~c6drizz2.cre~ ~override/c6drizz2.cre~
  WRITE_SHORT 0x24      98 // current hp
  WRITE_SHORT 0x26      98 // max hp
  WRITE_BYTE  0x52       3 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x234     18 // level

COPY_EXISTING ~c6drizz.cre~ ~override/c6drizz.cre~
  WRITE_SHORT 0x24      98 // current hp
  WRITE_SHORT 0x26      98 // max hp
  WRITE_BYTE  0x52       3 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x234     18 // level

COPY_EXISTING ~gorbat5.cre~ ~override/gorbat5.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~demosum1.cre~ ~override/demosum1.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~demosum2.cre~ ~override/demosum2.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~demosum3.cre~ ~override/demosum3.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~dglab01.cre~ ~override/dglab01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~demcor01.cre~ ~override/demcor01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~telalu1.cre~ ~override/telalu1.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "CHAN08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H52" = 0) OR
             ("%item%" STRING_COMPARE_CASE "DART04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "POTN52" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~demsuc01.cre~ ~override/demsuc01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~gortan3.cre~ ~override/gortan3.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~dimp01.cre~ ~override/dimp01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~deriny01.cre~ ~override/deriny01.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "SW1H05" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~gorgith2.cre~ ~override/gorgith2.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~spellh01.cre~ ~override/spellh01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~wauksqu.cre~ ~override/wauksqu.cre~
  WRITE_ASCII 0x250 ~S!squi01~ #8         // class script
  WRITE_ASCII 0x2cc ~iasqui01~ #8       // dialogue

COPY_EXISTING ~hactong.cre~ ~override/hactong.cre~
  WRITE_ASCII 0x248 ~~ #8  // removes override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!invis~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~GLOVES~

COPY_EXISTING ~dcowl1.cre~ ~override/dcowl1.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24      63 // current hp
  WRITE_SHORT 0x26      63 // max hp
  WRITE_BYTE  0x52      14 // thac0
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~mvguard1.cre~ ~override/mvguard1.cre~
  WRITE_LONG  0x14    4500 // xp
  WRITE_SHORT 0x24      70 // current hp
  WRITE_SHORT 0x26      70 // max hp
  WRITE_BYTE  0x52      11 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x235     11 // level secondary class
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!mvguar~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~potn10~ #2 #0 #0 ~UNSTEALABLE~ ~QITEM1~

COPY_EXISTING ~weregrdr.cre~ ~override/weregrdr.cre~
  ADD_CRE_ITEM ~immune1~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "ringloup" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~RINGWOLF~ #8 // write new item
   END
END

COPY_EXISTING ~pptiax2.cre~ ~override/pptiax2.cre~
  WRITE_ASCII 0x248 ~ASYLUM~ #8 // override script
  WRITE_ASCII 0x250 ~S!pptiax~ #8         // class script
  WRITE_ASCII 0x258 ~GPSHOUT~ #8      // race script
  WRITE_ASCII 0x260 ~THICLR10~ #8       // general script

COPY_EXISTING ~ppnalj2.cre~ ~override/ppnalj2.cre~
  WRITE_ASCII 0x258 ~S!ppnalj~ #8      // race script
  WRITE_ASCII 0x260 ~GPSHOUT~ #8       // general script

COPY_EXISTING ~ppdra2.cre~ ~override/ppdra2.cre~
  WRITE_ASCII 0x248 ~ASYLUM~ #8 // override script
  WRITE_ASCII 0x250 ~S!ppdra2~ #8         // class script
  WRITE_ASCII 0x258 ~GPSHOUT~ #8      // race script
  WRITE_ASCII 0x260 ~MAGE16M~ #8       // general script

COPY_EXISTING ~ppwanev2.cre~ ~override/ppwanev2.cre~
  WRITE_ASCII 0x248 ~ASYLUM~ #8 // override script
  WRITE_ASCII 0x250 ~S!ppdra2~ #8         // class script
  WRITE_ASCII 0x258 ~GPSHOUT~ #8      // race script
  WRITE_ASCII 0x260 ~MAGE18d~ #8       // general script
  WRITE_ASCII 0x268 ~WTASIGHT~ #8      // default script

COPY_EXISTING ~ppaph2.cre~ ~override/ppaph2.cre~
  WRITE_ASCII 0x248 ~ASYLUM~ #8 // override script
  WRITE_ASCII 0x250 ~S!ppaph2~ #8         // class script
  WRITE_ASCII 0x258 ~GPSHOUT~ #8      // race script

COPY_EXISTING ~udmind10.cre~ ~override/udmind10.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~UDMPSWN~ #8 // override script
  WRITE_ASCII 0x250 ~GENSHT01~ #8         // class script

COPY_EXISTING ~vvdel.cre~ ~override/vvdel.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x260 ~~ #8       // general script
  WRITE_ASCII 0x268 ~S!vamp1~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vvmale1.cre~ ~override/vvmale1.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_SHORT 0x24     110 // current hp
  WRITE_SHORT 0x26     110 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x250 ~S!vvdel~ #8         // class script
  WRITE_ASCII 0x260 ~~ #8       // general script
  WRITE_ASCII 0x268 ~S!vamp1~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vvmale2.cre~ ~override/vvmale2.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_SHORT 0x24     110 // current hp
  WRITE_SHORT 0x26     110 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x250 ~S!vvdel~ #8         // class script
  WRITE_ASCII 0x260 ~~ #8       // general script
  WRITE_ASCII 0x268 ~S!vamp1~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vvtanov.cre~ ~override/vvtanov.cre~
  WRITE_LONG  0x14    8500 // xp
  WRITE_SHORT 0x24     130 // current hp
  WRITE_SHORT 0x26     130 // max hp
  WRITE_BYTE  0x52       4 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vvmale3.cre~ ~override/vvmale3.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_SHORT 0x24     110 // current hp
  WRITE_SHORT 0x26     110 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x268 ~S!vamp1~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vvmale4.cre~ ~override/vvmale4.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_SHORT 0x24     110 // current hp
  WRITE_SHORT 0x26     110 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x268 ~S!vamp1~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~c6valen.cre~ ~override/c6valen.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~c6harei.cre~ ~override/c6harei.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~c6salia.cre~ ~override/c6salia.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~c6mere.cre~ ~override/c6mere.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~c6tanov.cre~ ~override/c6tanov.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vamflf01.cre~ ~override/vamflf01.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_SHORT 0x24     110 // current hp
  WRITE_SHORT 0x26     110 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!vamp1~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vamflm01.cre~ ~override/vamflm01.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_SHORT 0x24     110 // current hp
  WRITE_SHORT 0x26     110 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!vamp1~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~c6vflm01.cre~ ~override/c6vflm01.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_SHORT 0x24     110 // current hp
  WRITE_SHORT 0x26     110 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~c6weak~ #8 // override script
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x268 ~S!vamp1~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vamemi01.cre~ ~override/vamemi01.cre~
  SAY NAME1     @11030
  SAY NAME2     @11030
  WRITE_LONG  0x14    8500 // xp
  WRITE_SHORT 0x24     130 // current hp
  WRITE_SHORT 0x26     130 // max hp
  WRITE_BYTE  0x52       4 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vamanc01.cre~ ~override/vamanc01.cre~
  WRITE_LONG  0x14    8000 // xp
  WRITE_SHORT 0x24     125 // current hp
  WRITE_SHORT 0x26     125 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "immune3" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~IMMUNE2~ #8 // write new item
   END
END

COPY_EXISTING ~vamver01.cre~ ~override/vamver01.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     125 // current hp
  WRITE_SHORT 0x26     125 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x260 ~VAMEMI01~ #8       // general script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "vamp" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~VAMP1~ #8 // write new item
   END
END

COPY_EXISTING ~vamold01.cre~ ~override/vamold01.cre~
  WRITE_LONG  0x14    7000 // xp
  WRITE_SHORT 0x24     115 // current hp
  WRITE_SHORT 0x26     115 // max hp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     14 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!vamp2~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vampim01.cre~ ~override/vampim01.cre~
  WRITE_LONG  0x14    6000 // xp
  WRITE_SHORT 0x24     105 // current hp
  WRITE_SHORT 0x26     105 // max hp
  WRITE_BYTE  0x52       9 // thac0
  WRITE_BYTE  0x58      10 // save vs spell
  WRITE_BYTE  0x234     12 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!vamp2~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vampat01.cre~ ~override/vampat01.cre~
  SAY NAME1     @11030
  SAY NAME2     @11030
  WRITE_LONG  0x14    8500 // xp
  WRITE_SHORT 0x24     130 // current hp
  WRITE_SHORT 0x26     130 // max hp
  WRITE_BYTE  0x52       4 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x258 ~PPVAMPIR~ #8      // race script
  WRITE_ASCII 0x260 ~VAMEMI01~ #8       // general script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~vamemi01.cre~ ~override/S!vamemr.cre~
  WRITE_ASCII 0x248 ~S!anticu~ #8 // override script

COPY_EXISTING ~chevil08.cre~ ~override/chevil08.cre~
  WRITE_LONG  0x14    9500 // xp
  WRITE_SHORT 0x24     140 // current hp
  WRITE_SHORT 0x26     140 // max hp
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x234     19 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x258 ~VAMPIR01~ #8      // race script
  WRITE_ASCII 0x268 ~S!vamp3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "vamp" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~VAMP1~ #8 // write new item
   END
END
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "amul25" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!nevm4~ #8 // write new item
   END
END

COPY_EXISTING ~lassal.cre~ ~override/lassal.cre~
  WRITE_SHORT 0x24     115 // current hp
  WRITE_SHORT 0x26     115 // max hp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     14 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x268 ~S!vamp1~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~bodvam01.cre~ ~override/bodvam01.cre~
  WRITE_LONG  0x14    6000 // xp
  WRITE_SHORT 0x24     105 // current hp
  WRITE_SHORT 0x26     105 // max hp
  WRITE_BYTE  0x52       9 // thac0
  WRITE_BYTE  0x54       7 // save vs death
  WRITE_BYTE  0x55       9 // save vs wands
  WRITE_BYTE  0x56       8 // save vs polymorph
  WRITE_BYTE  0x57       8 // save vs breath
  WRITE_BYTE  0x58      10 // save vs spell
  WRITE_BYTE  0x234     12 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~BODVAM01~ #8 // override script
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x268 ~S!vamp2~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~bodvam02.cre~ ~override/bodvam02.cre~
  WRITE_LONG  0x14    6000 // xp
  WRITE_SHORT 0x24     105 // current hp
  WRITE_SHORT 0x26     105 // max hp
  WRITE_BYTE  0x52       9 // thac0
  WRITE_BYTE  0x54       7 // save vs death
  WRITE_BYTE  0x55       9 // save vs wands
  WRITE_BYTE  0x56       8 // save vs polymorph
  WRITE_BYTE  0x57       8 // save vs breath
  WRITE_BYTE  0x58      10 // save vs spell
  WRITE_BYTE  0x234     12 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~BODVAM02~ #8 // override script
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x268 ~S!vamp2~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~sarvam02.cre~ ~override/sarvam02.cre~
  WRITE_LONG  0x14    7000 // xp
  WRITE_SHORT 0x24     115 // current hp
  WRITE_SHORT 0x26     115 // max hp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x234     14 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~SARVAM02~ #8 // override script
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x260 ~C6VAMPIR~ #8       // general script
  WRITE_ASCII 0x268 ~S!vamp2~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter

COPY_EXISTING ~sarvam03.cre~ ~override/sarvam03.cre~
  WRITE_LONG  0x14    7000 // xp
  WRITE_SHORT 0x24     115 // current hp
  WRITE_SHORT 0x26     115 // max hp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x234     14 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~SARVAM02~ #8 // override script
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x260 ~C6VAMPIR~ #8       // general script
  WRITE_ASCII 0x268 ~S!vamp2~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter

COPY_EXISTING ~vampif01.cre~ ~override/vampif01.cre~
  SAY NAME1     @11030
  SAY NAME2     @11030
  WRITE_LONG  0x14    8500 // xp
  WRITE_SHORT 0x24     130 // current hp
  WRITE_SHORT 0x26     130 // max hp
  WRITE_BYTE  0x52       4 // thac0
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!vamp4~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~immune3~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "vamp" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~VAMP1~ #8 // write new item
   END
END

COPY_EXISTING ~vampim01.cre~ ~override/vampim01.cre~
  SAY NAME1     @11030
  SAY NAME2     @11030
  WRITE_LONG  0x14    8500 // xp
  WRITE_SHORT 0x24     130 // current hp
  WRITE_SHORT 0x26     130 // max hp
  WRITE_BYTE  0x52       4 // thac0
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!vamp4~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!nevm4~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~immune3~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "vamp" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~VAMP1~ #8 // write new item
   END
END

COPY_EXISTING ~c6vamp01.cre~ ~override/c6vamp01.cre~
  WRITE_LONG  0x14    6000 // xp
  WRITE_SHORT 0x24     105 // current hp
  WRITE_SHORT 0x26     105 // max hp
  WRITE_BYTE  0x52       9 // thac0
  WRITE_BYTE  0x58      10 // save vs spell
  WRITE_BYTE  0x234     12 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!vamp2~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~amncen1.cre~ ~override/amncen1.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "sper01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~amnleg1.cre~ ~override/amnleg1.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "sper01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~cowenf1.cre~ ~override/cowenf1.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~staf01~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~WEAPON1~ TWOHANDED
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE05" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~jolus.cre~ ~override/jolus.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat14" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SHLD30" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "sw1h07" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~william.cre~ ~override/william.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SHLD01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AX1H01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~alex.cre~ ~override/alex.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SHLD13" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H20" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~ryan.cre~ ~override/ryan.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SHLD13" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H20" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~alhel.cre~ ~override/alhel.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~staf01~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~WEAPON1~ TWOHANDED
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~hendak.cre~ ~override/hendak.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BLUN04" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~slcent.cre~ ~override/slcent.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BOW03" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H04" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~repthf1.cre~ ~override/repthf1.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "SW1H43" = 0) OR
             ("%item%" STRING_COMPARE_CASE "XBOW01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~sarmil01.cre~ ~override/sarmil01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x234      9 // level
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "sper01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~sarmil02.cre~ ~override/sarmil02.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "sw2h11" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~amnlegs.cre~ ~override/amnlegs.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "sper01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~bersersu.cre~ ~override/bersersu.cre~
  WRITE_ASCII 0x260 ~S!antic3~ #8      // general script
  WRITE_ASCII 0x268 ~S!berseh~ #8      // default script

COPY_EXISTING ~berser02.cre~ ~override/berser02.cre~
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_ASCII 0x260 ~S!antic3~ #8      // general script
  WRITE_ASCII 0x268 ~S!berseh~ #8      // default script

COPY_EXISTING ~berser03.cre~ ~override/berser03.cre~
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_ASCII 0x260 ~S!antic3~ #8      // general script
  WRITE_ASCII 0x268 ~S!berseh~ #8      // default script

COPY_EXISTING ~trolgi01.cre~ ~override/trolgi01.cre~
  WRITE_ASCII 0x250 ~S!antic3~ #8      // class script
  WRITE_ASCII 0x268 ~S!ranpm2~ #8      // default script

COPY_EXISTING ~troll01.cre~ ~override/troll01.cre~
  WRITE_SHORT 0x24      64 // current hp
  WRITE_SHORT 0x26      64 // max hp
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55      12 // save vs wands
  WRITE_BYTE  0x56      11 // save vs polymorph
  WRITE_BYTE  0x57      12 // save vs breath
  WRITE_BYTE  0x58      13 // save vs spell
  WRITE_BYTE  0x238     18 // strength
  WRITE_ASCII 0x260 ~S!antic3~ #8      // general script
  WRITE_ASCII 0x268 ~S!ranpm2~ #8      // default script

COPY_EXISTING ~troluo01.cre~ ~override/troluo01.cre~
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55      12 // save vs wands
  WRITE_BYTE  0x56      11 // save vs polymorph
  WRITE_BYTE  0x57      12 // save vs breath
  WRITE_BYTE  0x58      13 // save vs spell
  WRITE_ASCII 0x250 ~S!antic3~ #8      // class script
  WRITE_ASCII 0x268 ~S!ranpm2~ #8      // default script

COPY_EXISTING ~trolsi01.cre~ ~override/trolsi01.cre~
  WRITE_LONG  0x14    3000 // xp
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!ranpm3~ #8      // default script

COPY_EXISTING ~trolsp01.cre~ ~override/trolsp01.cre~
  WRITE_LONG  0x14    2500 // xp
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!ranpm3~ #8      // default script

COPY_EXISTING ~trolsi02.cre~ ~override/trolsi02.cre~
  WRITE_LONG  0x14    3000 // xp
  WRITE_ASCII 0x248 ~~ #8 // removes override script

COPY_EXISTING ~trolsp02.cre~ ~override/trolsp02.cre~
  WRITE_LONG  0x14    2500 // xp
  WRITE_ASCII 0x248 ~~ #8 // removes override script

COPY_EXISTING ~trolic01.cre~ ~override/trolic01.cre~
  WRITE_SHORT 0x24      48 // current hp
  WRITE_SHORT 0x26      48 // max hp
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x54      11 // save vs death
  WRITE_BYTE  0x55      13 // save vs wands
  WRITE_BYTE  0x56      12 // save vs polymorph
  WRITE_BYTE  0x57      13 // save vs breath
  WRITE_BYTE  0x58      14 // save vs spell
  WRITE_BYTE  0x59       0 // resist fire
  WRITE_BYTE  0x5e       0 // resist magic fire
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x268 ~S!ranpm2~ #8      // default script

COPY_EXISTING ~shiron.cre~ ~override/shiron.cre~
 WRITE_BYTE  0x54      10 // save vs death
 WRITE_BYTE  0x59      75 // resist fire
 WRITE_BYTE  0x5a      75 // resist cold
 WRITE_BYTE  0x5b      75 // resist electricity
 WRITE_BYTE  0x5c      75 // resist acid
 WRITE_BYTE  0x5d      75 // resist magic
 WRITE_BYTE  0x5e      75 // resist magic fire
 WRITE_BYTE  0x60       0 // resist slashing
 WRITE_BYTE  0x61       0 // resist crushing
 WRITE_BYTE  0x62       0 // resist piercing
 WRITE_BYTE  0x63       0 // resist missile
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "immune3" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~IMMUNE1~ #8 // write new item
  END
END
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "irongol" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!nobut1~ #8 // write new item
  END
END

COPY_EXISTING ~shmind.cre~ ~override/shmind.cre~
  WRITE_BYTE  0x52      13 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  ADD_CRE_ITEM ~S!nobut1~ #0 #0 #0 ~UNSTEALABLE~ ~LRING~

COPY_EXISTING ~susuneer.cre~ ~override/susuneer.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~MAGE20A~ #8      // class script

COPY_EXISTING ~udtrap03.cre~ ~override/udtrap03.cre~
  WRITE_LONG  0x14    5500 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "sper03" = 0) OR
             ("%item%" STRING_COMPARE_CASE "scrl7q" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~obsgol01.cre~ ~override/obsgol01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x60      75 // resist slashing
  WRITE_BYTE  0x62      75 // resist piercing

COPY_EXISTING ~mummy01.cre~ ~override/S!mummr.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~gibmut01.cre~ ~override/gibmut01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~behgau01.cre~ ~override/S!behgau.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~bhghoul5.cre~ ~override/bhghoul5.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE01" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "BOW03" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~B3-12~ #8 // write new item
   END
END

COPY_EXISTING ~carrio.cre~ ~override/carrio.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x258 ~S!melee0~ #8      // race script

COPY_EXISTING ~hobarc01.cre~ ~override/hobarc01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "BOW05" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~hobarc02.cre~ ~override/S!hobarc.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "HELM01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BOW03" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW02" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~hobwar01.cre~ ~override/hobwar01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "HELM01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~hobsha01.cre~ ~override/S!hobsha.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "HELM01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BLUN04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "LEAT04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~hobeli01.cre~ ~override/S!hobeli.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "AROW12" = 0) OR
             ("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BOW05" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~hobcap01.cre~ ~override/S!hobcap.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "HELM01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SHLD03" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SCRL56" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "POTN08" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~kobwar01.cre~ ~override/kobwar01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x260 ~S!antic3~ #8      // general script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW1H07" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~kobwar01.cre~ ~override/kobarc01.cre~

COPY_EXISTING ~kobsha01.cre~ ~override/kobsha01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x52      18 // thac0
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_BYTE  0x273     0x3 // class cleric
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "BLUN04" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~kobcom01.cre~ ~override/S!kobcom.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x260 ~S!antic3~ #8      // general script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "BOW05" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H07" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW08" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~kobcap01.cre~ ~override/kobcap01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x52      16 // thac0
  WRITE_ASCII 0x260 ~S!antic3~ #8      // general script
  WRITE_BYTE  0x273     0x2 // class fighter
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "BOW01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H07" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~gibber01.cre~ ~override/gibber01.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE02" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~ogrill01.cre~ ~override/ogrill01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_BYTE  0x273     0x3 // class cleric
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~sahsss01.cre~ ~override/sahsss01.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x59       0 // resist fire
  WRITE_BYTE  0x5e       0 // resist magic fire
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~sahsss02.cre~ ~override/sahsss02.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x59       0 // resist fire
  WRITE_BYTE  0x5e       0 // resist magic fire
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~sahsss03.cre~ ~override/sahsss03.cre~
  WRITE_LONG  0x14    8500 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59       0 // resist fire
  WRITE_BYTE  0x5e       0 // resist magic fire
  WRITE_BYTE  0x234     17 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_ASCII 0x248 ~SAHDIE~ #8 // override script
  WRITE_ASCII 0x250 ~mage16a~ #8         // class script
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~ghast01.cre~ ~override/S!ghast.cre~
  WRITE_ASCII 0x248 ~S!anticu~ #8 // override script
  WRITE_ASCII 0x250 ~S!ranpm1~ #8         // class script

COPY_EXISTING ~ghast01.cre~ ~override/ghast01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x250 ~S!ranpm1~ #8         // class script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~wraith01.cre~ ~override/S!wraith.cre~
  WRITE_ASCII 0x248 ~S!anticu~ #8 // override script
  WRITE_ASCII 0x268 ~S!ransm4~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~shadow01.cre~ ~override/shadow01.cre~
  WRITE_ASCII 0x248 ~S!anticu~ #8 // override script

COPY_EXISTING ~shadow01.cre~ ~override/S!shador.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~wraith01.cre~ ~override/wraith01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~S!anticu~ #8 // override script
  WRITE_ASCII 0x268 ~S!ransm4~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~mepair01.cre~ ~override/mepair01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~mepice01.cre~ ~override/mepice01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~mepice02.cre~ ~override/mepice02.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~mepsmo01.cre~ ~override/mepsmo01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~mepsmo02.cre~ ~override/mepsmo02.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~mepmag02.cre~ ~override/mepmag02.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~meprad02.cre~ ~override/meprad02.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~mepfir01.cre~ ~override/mepfir01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~jelgra01.cre~ ~override/jelgra01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~spidsw01.cre~ ~override/spidsw01.cre~
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x260 ~S!ranpm1~ #8      // general script

COPY_EXISTING ~spidsw01.cre~ ~override/spspider.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~S!spide3.cre~ ~override/spidgi01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~S!spide2.cre~ ~override/spidph01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~S!spider.cre~ ~override/S!spidr1.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~spidsm02.cre~ ~override/S!spidr2.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~wolfwe01.cre~ ~override/wolfwe01.cre~
  WRITE_SHORT 0x24      96 // current hp
  WRITE_SHORT 0x26      96 // max hp
  WRITE_BYTE  0x54       7 // save vs death
  WRITE_BYTE  0x55       9 // save vs wands
  WRITE_BYTE  0x56       8 // save vs polymorph
  WRITE_BYTE  0x57       8 // save vs breath
  WRITE_BYTE  0x58      10 // save vs spell
  WRITE_BYTE  0x234     12 // level
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x258 ~S!ransm1~ #8      // race script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~wolfwe01.cre~ ~override/S!wolfwe.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~kuocap01.cre~ ~override/kuolie01.cre~

COPY_EXISTING ~kuowar01.cre~ ~override/kuotoa01.cre~

COPY_EXISTING ~kuocap01.cre~ ~override/S!kuocap.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "XBOW04" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~kuomag01.cre~ ~override/S!kuomag.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~kuomon01.cre~ ~override/S!kuomon.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~kuopri01.cre~ ~override/S!kuopri.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~kuowar01.cre~ ~override/S!kuowar.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~kuowhi01.cre~ ~override/S!kuowhi.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~spmugg.cre~ ~override/spmugg.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x24      76 // current hp
  WRITE_SHORT 0x26      76 // max hp
  WRITE_BYTE  0x52      11 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234      9 // level
  WRITE_BYTE  0x235     11 // level secondary class
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antic4~ #8 // override script
  WRITE_ASCII 0x268 ~S!mism01~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H07" = 0) OR
             ("%item%" STRING_COMPARE_CASE "XBOW04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BOLT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE02" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~spmugg2.cre~ ~override/spmugg2.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x24      96 // current hp
  WRITE_SHORT 0x26      96 // max hp
  WRITE_BYTE  0x52       8 // thac0
  WRITE_BYTE  0x54       7 // save vs death
  WRITE_BYTE  0x55       9 // save vs wands
  WRITE_BYTE  0x56       8 // save vs polymorph
  WRITE_BYTE  0x57       8 // save vs breath
  WRITE_BYTE  0x58      10 // save vs spell
  WRITE_BYTE  0x234     11 // level
  WRITE_BYTE  0x235      1 // level secondary class
  WRITE_BYTE  0x239     91 // strength % bonus
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x248 ~S!antic4~ #8 // override script
  WRITE_ASCII 0x268 ~S!mism01~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H07" = 0) OR
             ("%item%" STRING_COMPARE_CASE "XBOW04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BOLT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE02" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~spmugg3.cre~ ~override/spmugg3.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x24      93 // current hp
  WRITE_SHORT 0x26      93 // max hp
  WRITE_BYTE  0x52       9 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234     10 // level
  WRITE_BYTE  0x235      1 // level secondary class
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     77 // strength % bonus
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x248 ~S!antic4~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~S!mism01~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H07" = 0) OR
             ("%item%" STRING_COMPARE_CASE "XBOW04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BOLT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE02" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~jelgre01.cre~ ~override/jelgre01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~jeloch01.cre~ ~override/jeloch01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~mepooz01.cre~ ~override/mepooz01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~orc01.cre~ ~override/orc01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  WRITE_ASCII 0x248 ~S!antic4~ #8 // override script
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  WRITE_ASCII 0x268 ~S!melee0~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~orc02.cre~ ~override/orc02.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~S!antic4~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script
  WRITE_ASCII 0x268 ~S!mism02~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~sw1h02~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~WEAPON2~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "HELM01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BOW03" = 0) OR
             ("%item%" STRING_COMPARE_CASE "AROW02" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~icyuan01.cre~ ~override/icyuan01.cre~
  WRITE_LONG  0x14    7500 // xp
  WRITE_SHORT 0x24     108 // current hp
  WRITE_SHORT 0x26     108 // max hp
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     15 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     57 // strength % bonus
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x250 ~S!antic2~ #8         // class script
  WRITE_ASCII 0x268 ~S!ransm3~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW1H04" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~S!yuanti~ #8 // write new item
   END
END

COPY_EXISTING ~icyuan03.cre~ ~override/S!icyuam.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold

COPY_EXISTING ~icyuan01.cre~ ~override/S!icyuan.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~icgob01.cre~ ~override/S!icgo1.cre~

COPY_EXISTING ~icgob01.cre~ ~override/icgob01.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "BOW01" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~icgob03.cre~ ~override/S!icgob.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x238     16 // strength
  WRITE_ASCII 0x258 ~S!antic3~ #8      // race script
  WRITE_ASCII 0x268 ~S!melee0~ #8      // default script
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "AX1H01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE02" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~icliz01.cre~ ~override/icliz01.cre~
  WRITE_LONG  0x14    6500 // xp
  WRITE_SHORT 0x24     102 // current hp
  WRITE_SHORT 0x26     102 // max hp
  WRITE_BYTE  0x52       7 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x59      60 // resist fire
  WRITE_BYTE  0x5a      80 // resist cold
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     57 // strength % bonus
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x240      2 // morale Break
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x258 ~S!ranpm1~ #8      // race script
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "HALB01" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~HALB02~ #8 // write new item
   END
END

COPY_EXISTING ~icliz01.cre~ ~override/S!icliz.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "HALB02" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE02" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~mistva01.cre~ ~override/S!mistva.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~mistpo01.cre~ ~override/mistpo01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x24      72 // current hp
  WRITE_SHORT 0x26      72 // max hp
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_BYTE  0x234     10 // level
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x268 ~S!ransm3~ #8      // default script
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~mistcd01.cre~ ~override/mistcd01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x54       7 // save vs death
  WRITE_BYTE  0x55       9 // save vs wands
  WRITE_BYTE  0x56       8 // save vs polymorph
  WRITE_BYTE  0x57       8 // save vs breath
  WRITE_BYTE  0x58      10 // save vs spell
  WRITE_BYTE  0x59      50 // resist fire
  WRITE_ASCII 0x250 ~S!antic3~ #8         // class script
  WRITE_ASCII 0x268 ~S!ransm3~ #8      // default script
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~RRING~
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~

COPY_EXISTING ~orc05.cre~ ~override/orc06.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x52      11 // thac0
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234      9 // level
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antic4~ #8 // override script
  WRITE_ASCII 0x258 ~~ #8      // removes race script
  WRITE_ASCII 0x268 ~S!melee0~ #8      // default script
  WRITE_ASCII 0x280 ~orc06~ #32         // death variable
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW2H01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~jelmus01.cre~ ~override/jelmus01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~S!ntroll.cre~ ~override/S!ntrolr.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x268 ~~ #8      // removes default script
  WRITE_ASCII 0x280 ~S!ntrolr~ #32         // death variable

COPY_EXISTING ~mepdus01.cre~ ~override/mepdus01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~S!antic2~ #8 // override script

COPY_EXISTING ~S!ntrolr.cre~ ~override/trolde01.cre~

COPY_EXISTING ~rakruh01.cre~ ~override/S!rakruh.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~S!antic2~ #8 // override script
  WRITE_ASCII 0x250 ~RAKRUH01~ #8   // class script

COPY_EXISTING ~wolfgr01.cre~ ~override/S!wolfgr.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~shadfi01.cre~ ~override/S!shadfi.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~umbhul02.cre~ ~override/S!umbhul.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script

COPY_EXISTING ~umbhul02.cre~ ~override/S!umbhu2.cre~
  WRITE_ASCII 0x248 ~S!antic3~ #8 // override script
  WRITE_ASCII 0x250 ~~ #8         // removes class script

COPY_EXISTING ~eyesek01.cre~ ~override/eyesek01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~obsdem04.cre~ ~override/S!maurez.cre~
  WRITE_LONG  0x14        0 // xp

COPY_EXISTING ~S!phound.cre~ ~override/S!phounr.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x280 ~S!phounr~ #32         // death variable
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "MISC41" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~mistho01.cre~ ~override/S!misth1.cre~
  WRITE_LONG  0x14        0 // xp

COPY_EXISTING ~S!maurez.cre~ ~override/demmau01.cre~

COPY_EXISTING ~saralegs.cre~ ~override/saralegs.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "helm08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "plat01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "sper01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~vamemi01.cre~ ~override/S!vamemi.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~vamanc01.cre~ ~override/S!vamanc.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~ammlegs.cre~ ~override/ammlegs.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x23f     15 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE02" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~reband01.cre~ ~override/reband01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  WRITE_SHORT 0x24      93 // current hp
  WRITE_SHORT 0x26      93 // max hp
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x234     10 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x260 ~S!antic4~ #8       // general script
  WRITE_ASCII 0x268 ~S!melee0~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H07" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~reband02.cre~ ~override/reband02.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  WRITE_SHORT 0x24      93 // current hp
  WRITE_SHORT 0x26      93 // max hp
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x234     10 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x260 ~S!antic4~ #8       // general script
  WRITE_ASCII 0x268 ~S!melee0~ #8      // default script
  WRITE_BYTE  0x273     0x2 // class fighter
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "DAGG01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~reband03.cre~ ~override/reband03.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x24      93 // current hp
  WRITE_SHORT 0x26      93 // max hp
  WRITE_BYTE  0x52      11 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  WRITE_BYTE  0x54       8 // save vs death
  WRITE_BYTE  0x55      10 // save vs wands
  WRITE_BYTE  0x56       9 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58      11 // save vs spell
  WRITE_BYTE  0x234     10 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x260 ~S!antic4~ #8       // general script
  WRITE_ASCII 0x268 ~S!melee0~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "LEAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW1H04" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~reband05.cre~ ~override/reband05.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x24      80 // current hp
  WRITE_SHORT 0x26      80 // max hp
  WRITE_BYTE  0x52      12 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       9 // save vs wands
  WRITE_BYTE  0x56       8 // save vs polymorph
  WRITE_BYTE  0x57      11 // save vs breath
  WRITE_BYTE  0x58      10 // save vs spell
  WRITE_BYTE  0x234     13 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x248 ~S!antic4~ #8 // override script
  WRITE_ASCII 0x268 ~priest12~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "CHAN01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "BLUN01" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~shawol01.cre~ ~override/shawol01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~shawol02.cre~ ~override/shawol02.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~catlim01.cre~ ~override/catlim01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~catlyn01.cre~ ~override/catlyn01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~catlis01.cre~ ~override/catlis01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~cattig01.cre~ ~override/cattig01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~dogwil01.cre~ ~override/dogwil01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~bearbl.cre~ ~override/bearbl.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_ASCII 0x248 ~S!anima3~ #8 // override script
  WRITE_ASCII 0x250 ~SUMSHT02~ #8         // class script
  WRITE_ASCII 0x2cc ~iaanima1~ #8       // dialogue

COPY_EXISTING ~ankheg01.cre~ ~override/ankheg01.cre~
  WRITE_LONG  0x14       0 // xp
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~catpan01.cre~ ~override/catpan01.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~gromg06.cre~ ~override/gromg06.cre~
  WRITE_SHORT 0x24     130 // current hp
  WRITE_SHORT 0x26     130 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     17 // strength % bonus
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x258 ~S!gromg6~ #8      // race script

COPY_EXISTING ~gromg07.cre~ ~override/gromg07.cre~
  WRITE_SHORT 0x24     130 // current hp
  WRITE_SHORT 0x26     130 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x238     19 // strength
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x258 ~S!gromg6~ #8      // race script

COPY_EXISTING ~yssold14.cre~ ~override/yssold14.cre~
  WRITE_LONG  0x14    3000 // xp
  WRITE_SHORT 0x24      61 // current hp
  WRITE_SHORT 0x26      61 // max hp
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x54      10 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57       9 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     18 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x260 ~~ #8       // removes general script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~yssold16.cre~ ~override/yssold16.cre~
  WRITE_LONG  0x14    3000 // xp
  WRITE_SHORT 0x24      91 // current hp
  WRITE_SHORT 0x26      91 // max hp
  WRITE_BYTE  0x52      10 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       8 // save vs wands
  WRITE_BYTE  0x56       7 // save vs polymorph
  WRITE_BYTE  0x57      10 // save vs breath
  WRITE_BYTE  0x58       9 // save vs spell
  WRITE_BYTE  0x59      75 // resist fire
  WRITE_BYTE  0x5a      50 // resist cold
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e      75 // resist magic fire
  WRITE_BYTE  0x60      50 // resist slashing
  WRITE_BYTE  0x61      50 // resist crushing
  WRITE_BYTE  0x62      50 // resist piercing
  WRITE_BYTE  0x63      75 // resist missile
  WRITE_BYTE  0x234     18 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     18 // morale
  WRITE_BYTE  0x242      2 // morale Recovery
  WRITE_ASCII 0x260 ~ccler20b~ #8       // general script
  WRITE_ASCII 0x268 ~S!antic3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~S!immune~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~AMULET~

COPY_EXISTING ~HGWAR02.cre~ ~override/S!HGWAR.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "POTN55" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "MISC16" = 0) OR
             ("%item%" STRING_COMPARE_CASE "MISC38" = 0) OR
             ("%item%" STRING_COMPARE_CASE "MISC35" = 0) OR
             ("%item%" STRING_COMPARE_CASE "MISC42" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~yssold01.cre~ ~override/yssold01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x24      99 // current hp
  WRITE_SHORT 0x26      99 // max hp
  WRITE_BYTE  0x52       6 // thac0
  WRITE_BYTE  0x54       5 // save vs death
  WRITE_BYTE  0x55       7 // save vs wands
  WRITE_BYTE  0x56       6 // save vs polymorph
  WRITE_BYTE  0x57       5 // save vs breath
  WRITE_BYTE  0x58       8 // save vs spell
  WRITE_BYTE  0x234     14 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     55 // strength % bonus
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x260 ~S!antic3~ #8       // general script
  WRITE_ASCII 0x268 ~S!ransm2~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~helmnoan~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~plat14~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~ARMOR~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW1H04" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~SW2H11~ #8 // write new item
   END
END
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW2H11" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~yssold03.cre~ ~override/yssold03.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_SHORT 0x24     120 // current hp
  WRITE_SHORT 0x26     120 // max hp
  WRITE_BYTE  0x52       4 // thac0
  WRITE_BYTE  0x54       4 // save vs death
  WRITE_BYTE  0x55       6 // save vs wands
  WRITE_BYTE  0x56       5 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       7 // save vs spell
  WRITE_BYTE  0x234     16 // level
  WRITE_BYTE  0x238     18 // strength
  WRITE_BYTE  0x239     95 // strength % bonus
  WRITE_BYTE  0x23c     18 // dexterity
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x260 ~S!antic3~ #8       // general script
  WRITE_ASCII 0x268 ~S!ransm3~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  ADD_CRE_ITEM ~helmnoan~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~
  ADD_CRE_ITEM ~shld29~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~SHIELD~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW1H01" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~SW1H72~ #8 // write new item
   END
END
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "CHAN01" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~plat14~ #8 // write new item
   END
END
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW1H72" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "plat14" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~yssold04.cre~ ~override/yssold04.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  WRITE_BYTE  0x239     92 // strength % bonus
  WRITE_BYTE  0x23f     17 // morale
  WRITE_BYTE  0x240      3 // morale Break
  WRITE_BYTE  0x242      3 // morale Recovery
  WRITE_ASCII 0x260 ~S!antic3~ #8       // general script
  WRITE_ASCII 0x268 ~S!ranpm2~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "HELM01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "PLAT01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "HALB07" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE04" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE05" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~yssold01.cre~ ~override/yssold02.cre~

COPY_EXISTING ~c6bruen2.cre~ ~override/c6bruen2.cre~
  WRITE_BYTE  0x53       1 // number of attacks
  ADD_CRE_ITEM ~helm06~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~

COPY_EXISTING ~C6CATTI2.cre~ ~override/C6CATTI2.cre~
  WRITE_BYTE  0x52       5 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  ADD_CRE_ITEM ~helm06~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~

COPY_EXISTING ~c6regis2.cre~ ~override/c6regis2.cre~
  WRITE_BYTE  0x53       1 // number of attacks
  ADD_CRE_ITEM ~helm06~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~

COPY_EXISTING ~c6wulf2.cre~ ~override/c6wulf2.cre~
  WRITE_BYTE  0x52      10 // thac0
  WRITE_BYTE  0x53       1 // number of attacks
  ADD_CRE_ITEM ~helm06~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~HELMET~

COPY_EXISTING ~c6guen2.cre~ ~override/c6guen2.cre~
  ADD_CRE_ITEM ~ring95~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~LRING~

COPY_EXISTING ~shtroll.cre~ ~override/shtroll.cre~
  WRITE_BYTE  0x52      15 // thac0
  WRITE_BYTE  0x53       1 // number of attacks

COPY_EXISTING ~shwolf.cre~ ~override/shwolf.cre~
 WRITE_BYTE  0x52      10 // thac0
 WRITE_BYTE  0x53       1 // number of attacks
 READ_LONG  0x2bc "itm_off"
 READ_LONG  0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "ringwolf" = 0) BEGIN // find old item
    WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~RING10~ #8 // write new item
  END
END
 READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "RING10" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~golcla01.cre~ ~override/S!golcla.cre~
  WRITE_ASCII 0x248 ~S!anticg~ #8 // override script

COPY_EXISTING ~sahsss03.cre~ ~override/S!vilmag.cre~
  WRITE_ASCII 0x248 ~~ #8 // removes override script
  WRITE_ASCII 0x250 ~mage16a~ #8         // class script
  WRITE_ASCII 0x258 ~S!chase~ #8      // race script

COPY_EXISTING ~genefr01.cre~ ~override/genefr01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x234      9 // level
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW1H20" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~renal.cre~ ~override/renal.cre~
 READ_LONG 0x2bc "itm_off"
 READ_LONG 0x2c0 "itm_num"
 FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
  READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
  PATCH_IF ("%item%" STRING_COMPARE_CASE "boot01" = 0) BEGIN // find the item
   READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
   WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001000) // set undroppable flag
  END
END

COPY_EXISTING ~c6elhan.cre~ ~override/c6elhan.cre~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW1H50" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~suelhan.cre~ ~override/suelhan.cre~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "SW1H50" = 0) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~sensmsp2.cre~ ~override/sensmsp2.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_LONG  0x1c       0 // gold
  WRITE_BYTE  0x52      13 // thac0
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "HELM01" = 0) OR
             ("%item%" STRING_COMPARE_CASE "PLAT10" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW2H11" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE03" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

COPY_EXISTING ~elemogre.cre~ ~override/elemogre.cre~
  WRITE_LONG  0x1c    5000 // gold
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x5a     100 // resist cold
  WRITE_BYTE  0x5b      80 // resist electricity
  WRITE_BYTE  0x5c     100 // resist acid
  WRITE_BYTE  0x60     100 // resist slashing
  WRITE_BYTE  0x61      95 // resist crushing
  WRITE_BYTE  0x62      95 // resist piercing
  WRITE_BYTE  0x63     100 // resist missile
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_BYTE  0x273     0x1 // class mage
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "elemprin" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~DRAGRING~ #8 // write new item
   END
END

COPY_EXISTING ~demabi01.cre~ ~override/demabi01.cre~
  WRITE_SHORT 0x24     150 // current hp
  WRITE_SHORT 0x26     150 // max hp
  WRITE_BYTE  0x52       1 // thac0
  WRITE_BYTE  0x54       3 // save vs death
  WRITE_BYTE  0x55       5 // save vs wands
  WRITE_BYTE  0x56       4 // save vs polymorph
  WRITE_BYTE  0x57       4 // save vs breath
  WRITE_BYTE  0x58       6 // save vs spell
  WRITE_BYTE  0x59     100 // resist fire
  WRITE_BYTE  0x5a     100 // resist cold
  WRITE_BYTE  0x5b      80 // resist electricity
  WRITE_BYTE  0x5c     100 // resist acid
  WRITE_BYTE  0x5d      50 // resist magic
  WRITE_BYTE  0x5e     100 // resist magic fire
  WRITE_BYTE  0x60      80 // resist slashing
  WRITE_BYTE  0x61      80 // resist crushing
  WRITE_BYTE  0x62      80 // resist piercing
  WRITE_BYTE  0x63      90 // resist missile
  WRITE_BYTE  0x234     20 // level
  WRITE_BYTE  0x23f     19 // morale
  WRITE_BYTE  0x240      1 // morale Break
  WRITE_BYTE  0x242      1 // morale Recovery
  WRITE_ASCII 0x268 ~S!ransm4~ #8      // default script
  ADD_CRE_ITEM ~S!trap~ #0 #0 #0 ~UNSTEALABLE&UNDROPPABLE~ ~BELT~
  READ_LONG  0x2bc "itm_off"
  READ_LONG  0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF ("%item%" STRING_COMPARE_CASE "ringdemn" = 0) BEGIN // find old item
     WRITE_ASCII ("%itm_off%" + (0x14 * "%index%")) ~DRAGRING~ #8 // write new item
   END
END

COPY_EXISTING ~elearg01.cre~ ~override/elearg01.cre~
  WRITE_LONG  0x14       0 // xp
  WRITE_BYTE  0x234     20 // level

COPY_EXISTING ~GORJELGR.cre~ ~override/GORJELGR.cre~
  WRITE_LONG  0x14       0 // xp

COPY_EXISTING ~RIFTCR02.cre~ ~override/RIFTCR02.cre~
  READ_LONG 0x2bc "itm_off"
  READ_LONG 0x2c0 "itm_num"
  FOR (index = 0; index < itm_num; index = index + 1) BEGIN // searches through items
   READ_ASCII ("%itm_off%" + (0x14 * "%index%")) "item"
   PATCH_IF (("%item%" STRING_COMPARE_CASE "HELM08" = 0) OR
             ("%item%" STRING_COMPARE_CASE "RNDTRE05" = 0) OR
             ("%item%" STRING_COMPARE_CASE "SW2H02" = 0)) BEGIN // find the item
    READ_BYTE("%itm_off%" + 0x10 + (0x14 * "%index%")) "itemflags"
    WRITE_BYTE ("%itm_off%" + 0x10 + (0x14 * "%index%")) ("%itemflags%" BOR 0b00001010) // set Unstealable and undroppable flags
   END
END

ACTION_IF GAME_IS ~bg2ee~ THEN BEGIN
    COPY_EXISTING ~neera8.cre~ ~Override/neera8.cre~
      WRITE_SHORT 0x24 44 // current HP
      WRITE_SHORT 0x26 44 // max HP
      WRITE_BYTE  0x238 11 // strength
      WRITE_BYTE  0x239 0 // strength % bonus
      WRITE_BYTE  0x23a 10 // intelligence
      WRITE_BYTE  0x23b 18 // wisdom
      WRITE_BYTE  0x23c 14 // dexterity
      WRITE_BYTE  0x23d 16 // constitution
      WRITE_BYTE  0x23e 11 // charisma
      WRITE_LONG 0x244 0x00 // no kit
      WRITE_BYTE  0x273 0x13 // class sorcerer

      REMOVE_KNOWN_SPELLS
      REMOVE_MEMORIZED_SPELLS

      ADD_KNOWN_SPELL ~SPWI110~ #0 ~wizard~
      ADD_KNOWN_SPELL ~SPWI112~ #0 ~wizard~
      ADD_KNOWN_SPELL ~SPWI118~ #0 ~wizard~
      ADD_KNOWN_SPELL ~SPWI119~ #0 ~wizard~
      ADD_KNOWN_SPELL ~SPWI124~ #0 ~wizard~
      ADD_KNOWN_SPELL ~SPWI201~ #1 ~wizard~
      ADD_KNOWN_SPELL ~SPWI207~ #1 ~wizard~
      ADD_KNOWN_SPELL ~SPWI211~ #1 ~wizard~
      ADD_KNOWN_SPELL ~SPWI212~ #1 ~wizard~
      ADD_KNOWN_SPELL ~SPWI302~ #2 ~wizard~
      ADD_KNOWN_SPELL ~SPWI303~ #2 ~wizard~
      ADD_KNOWN_SPELL ~SPWI314~ #2 ~wizard~
      ADD_KNOWN_SPELL ~SPWI408~ #3 ~wizard~
      ADD_KNOWN_SPELL ~SPWI412~ #3 ~wizard~

      ADD_MEMORIZED_SPELL ~SPWI110~ #0 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI112~ #0 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI118~ #0 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI119~ #0 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI124~ #0 ~wizard~ ( 6 )

      ADD_MEMORIZED_SPELL ~SPWI201~ #1 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI207~ #1 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI211~ #1 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI212~ #1 ~wizard~ ( 6 )

      ADD_MEMORIZED_SPELL ~SPWI302~ #2 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI303~ #2 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI314~ #2 ~wizard~ ( 6 )

      ADD_MEMORIZED_SPELL ~SPWI408~ #3 ~wizard~ ( 4 )
      ADD_MEMORIZED_SPELL ~SPWI412~ #3 ~wizard~ ( 4 )

    COPY_EXISTING ~neera8.cre~ ~Override/neera10.cre~
    COPY_EXISTING ~neera8.cre~ ~Override/neera11.cre~
    COPY_EXISTING ~neera8.cre~ ~Override/neera12.cre~
    COPY_EXISTING ~neera8.cre~ ~Override/neera13.cre~

    COPY_EXISTING ~neera15.cre~ ~Override/neera15.cre~
      WRITE_SHORT 0x24 51 // current HP
      WRITE_SHORT 0x26 51 // max HP
      WRITE_BYTE  0x238 11 // strength
      WRITE_BYTE  0x239 0 // strength % bonus
      WRITE_BYTE  0x23a 10 // intelligence
      WRITE_BYTE  0x23b 18 // wisdom
      WRITE_BYTE  0x23c 14 // dexterity
      WRITE_BYTE  0x23d 16 // constitution
      WRITE_BYTE  0x23e 11 // charisma
      WRITE_LONG 0x244 0x00 // no kit
      WRITE_BYTE  0x273 0x13 // class sorcerer

      REMOVE_KNOWN_SPELLS
      REMOVE_MEMORIZED_SPELLS

      ADD_KNOWN_SPELL ~SPWI110~ #0 ~wizard~
      ADD_KNOWN_SPELL ~SPWI112~ #0 ~wizard~
      ADD_KNOWN_SPELL ~SPWI118~ #0 ~wizard~
      ADD_KNOWN_SPELL ~SPWI119~ #0 ~wizard~
      ADD_KNOWN_SPELL ~SPWI124~ #0 ~wizard~

      ADD_KNOWN_SPELL ~SPWI201~ #1 ~wizard~
      ADD_KNOWN_SPELL ~SPWI207~ #1 ~wizard~
      ADD_KNOWN_SPELL ~SPWI210~ #1 ~wizard~
      ADD_KNOWN_SPELL ~SPWI211~ #1 ~wizard~
      ADD_KNOWN_SPELL ~SPWI212~ #1 ~wizard~

      ADD_KNOWN_SPELL ~SPWI302~ #2 ~wizard~
      ADD_KNOWN_SPELL ~SPWI303~ #2 ~wizard~
      ADD_KNOWN_SPELL ~SPWI314~ #2 ~wizard~
      ADD_KNOWN_SPELL ~SPWI319~ #2 ~wizard~

      ADD_KNOWN_SPELL ~SPWI408~ #3 ~wizard~
      ADD_KNOWN_SPELL ~SPWI412~ #3 ~wizard~
      ADD_KNOWN_SPELL ~SPWI413~ #3 ~wizard~
      ADD_KNOWN_SPELL ~SPWI420~ #3 ~wizard~

      ADD_KNOWN_SPELL ~SPWI513~ #4 ~wizard~
      ADD_KNOWN_SPELL ~SPWI510~ #4 ~wizard~
      ADD_KNOWN_SPELL ~SPWI514~ #4 ~wizard~

      ADD_KNOWN_SPELL ~SPWI613~ #5 ~wizard~
      ADD_KNOWN_SPELL ~SPWI602~ #5 ~wizard~

      ADD_MEMORIZED_SPELL ~SPWI110~ #0 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI112~ #0 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI118~ #0 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI119~ #0 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI124~ #0 ~wizard~ ( 6 )

      ADD_MEMORIZED_SPELL ~SPWI201~ #1 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI207~ #1 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI210~ #1 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI211~ #1 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI212~ #1 ~wizard~ ( 6 )

      ADD_MEMORIZED_SPELL ~SPWI302~ #2 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI303~ #2 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI314~ #2 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI319~ #2 ~wizard~ ( 6 )

      ADD_MEMORIZED_SPELL ~SPWI408~ #3 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI412~ #3 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI413~ #3 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI420~ #3 ~wizard~ ( 6 )

      ADD_MEMORIZED_SPELL ~SPWI513~ #4 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI510~ #4 ~wizard~ ( 6 )
      ADD_MEMORIZED_SPELL ~SPWI514~ #4 ~wizard~ ( 6 )

      ADD_MEMORIZED_SPELL ~SPWI613~ #5 ~wizard~ ( 4 )
      ADD_MEMORIZED_SPELL ~SPWI602~ #5 ~wizard~ ( 4 )

    COPY_EXISTING ~rasaad8.cre~ ~Override/rasaad8.cre~
      WRITE_SHORT 0x24 80 // current HP
      WRITE_SHORT 0x26 80 // max HP
      WRITE_BYTE  0x238 18 // strength
      WRITE_BYTE  0x239 0 // strength % bonus
      WRITE_BYTE  0x23a 11 // intelligence
      WRITE_BYTE  0x23b 12 // wisdom
      WRITE_BYTE  0x23c 18 // dexterity
      WRITE_BYTE  0x23d 17 // constitution
      WRITE_BYTE  0x23e 12 // charisma

    COPY_EXISTING ~rasaad8.cre~ ~Override/rasaad9.cre~
    COPY_EXISTING ~rasaad8.cre~ ~Override/rasaad10.cre~
    COPY_EXISTING ~rasaad8.cre~ ~Override/rasaad11.cre~
    COPY_EXISTING ~rasaad8.cre~ ~Override/rasaad13.cre~

    COPY_EXISTING ~rasaad12.cre~ ~Override/rasaad12.cre~
      WRITE_SHORT 0x24 98 // current HP
      WRITE_SHORT 0x26 98 // max HP
      WRITE_BYTE  0x238 18 // strength
      WRITE_BYTE  0x239 0 // strength % bonus
      WRITE_BYTE  0x23a 11 // intelligence
      WRITE_BYTE  0x23b 12 // wisdom
      WRITE_BYTE  0x23c 18 // dexterity
      WRITE_BYTE  0x23d 17 // constitution
      WRITE_BYTE  0x23e 12 // charisma
END

// Compiling scripts //

COMPILE ~ImprovedAnvil/scripts/ABAZDRAG.baf~
COMPILE ~ImprovedAnvil/scripts/AERIEX.baf~
COMPILE ~ImprovedAnvil/scripts/AKAE.baf~
COMPILE ~ImprovedAnvil/scripts/AR0041.baf~
COMPILE ~ImprovedAnvil/scripts/AR0042.baf~
COMPILE ~ImprovedAnvil/scripts/AR0043.baf~
COMPILE ~ImprovedAnvil/scripts/AR0044.baf~
COMPILE ~ImprovedAnvil/scripts/AR0045.baf~
COMPILE ~ImprovedAnvil/scripts/AR0046.baf~
COMPILE ~ImprovedAnvil/scripts/AR2810.baf~
COMPILE ~ImprovedAnvil/scripts/AR6108.baf~
COMPILE ~ImprovedAnvil/scripts/ARia04.baf~
COMPILE ~ImprovedAnvil/scripts/ARia05.baf~
COMPILE ~ImprovedAnvil/scripts/ARia06.baf~
COMPILE ~ImprovedAnvil/scripts/ARia08.baf~
COMPILE ~ImprovedAnvil/scripts/ARia10.baf~
COMPILE ~ImprovedAnvil/scripts/ARia11.baf~
COMPILE ~ImprovedAnvil/scripts/ARia12.baf~
COMPILE ~ImprovedAnvil/scripts/ARia14.baf~
COMPILE ~ImprovedAnvil/scripts/ARia16.baf~
COMPILE ~ImprovedAnvil/scripts/ARia17.baf~
COMPILE ~ImprovedAnvil/scripts/ARia18.baf~
COMPILE ~ImprovedAnvil/scripts/ARia19.baf~
COMPILE ~ImprovedAnvil/scripts/ARia20.baf~
COMPILE ~ImprovedAnvil/scripts/ARia21.baf~
COMPILE ~ImprovedAnvil/scripts/ARia23.baf~
COMPILE ~ImprovedAnvil/scripts/ARia24.baf~
COMPILE ~ImprovedAnvil/scripts/ARia25.baf~
COMPILE ~ImprovedAnvil/scripts/ARia26.baf~
COMPILE ~ImprovedAnvil/scripts/ARia27.baf~
COMPILE ~ImprovedAnvil/scripts/abaz2.baf~
COMPILE ~ImprovedAnvil/scripts/abazigal.baf~
COMPILE ~ImprovedAnvil/scripts/BEHOLD01.baf~
COMPILE ~ImprovedAnvil/scripts/BEHELD01.baf~
COMPILE ~ImprovedAnvil/scripts/BHEYE.baf~
COMPILE ~ImprovedAnvil/scripts/bodfgt03.baf~
COMPILE ~ImprovedAnvil/scripts/brazier.baf~
COMPILE ~ImprovedAnvil/scripts/C6TANOV.baf~
COMPILE ~ImprovedAnvil/scripts/C6VAMPIR.baf~
COMPILE ~ImprovedAnvil/scripts/C6WEAK.baf~
COMPILE ~ImprovedAnvil/scripts/cbarb20b.baf~
COMPILE ~ImprovedAnvil/scripts/CBEAR.baf~
COMPILE ~ImprovedAnvil/scripts/ccler20b.baf~
COMPILE ~ImprovedAnvil/scripts/CEBEAR01.baf~
COMPILE ~ImprovedAnvil/scripts/cefald01.baf~
COMPILE ~ImprovedAnvil/scripts/cmage20a.baf~
COMPILE ~ImprovedAnvil/scripts/COPANIM.baf~
COMPILE ~ImprovedAnvil/scripts/COWENF02.baf~
COMPILE ~ImprovedAnvil/scripts/COWENF03.baf~
COMPILE ~ImprovedAnvil/scripts/COWENF04.baf~
COMPILE ~ImprovedAnvil/scripts/CTALTAR.baf~
COMPILE ~ImprovedAnvil/scripts/cut204f2.baf~
COMPILE ~ImprovedAnvil/scripts/cut204f3.baf~
COMPILE ~ImprovedAnvil/scripts/cut204f.baf~
COMPILE ~ImprovedAnvil/scripts/cut35a.baf~
COMPILE ~ImprovedAnvil/scripts/cut35b.baf~
COMPILE ~ImprovedAnvil/scripts/cut35c.baf~
COMPILE ~ImprovedAnvil/scripts/cut35d.baf~
COMPILE ~ImprovedAnvil/scripts/cut35e.baf~
COMPILE ~ImprovedAnvil/scripts/cut35f.baf~
COMPILE ~ImprovedAnvil/scripts/cut35g.baf~
COMPILE ~ImprovedAnvil/scripts/cut35h.baf~
COMPILE ~ImprovedAnvil/scripts/cut35i.baf~
COMPILE ~ImprovedAnvil/scripts/cut41u.baf~
COMPILE ~ImprovedAnvil/scripts/cut44a.baf~
COMPILE ~ImprovedAnvil/scripts/cut63a.baf~
COMPILE ~ImprovedAnvil/scripts/cut85c.baf~
COMPILE ~ImprovedAnvil/scripts/ddguard7.baf~
COMPILE ~ImprovedAnvil/scripts/ddguard.baf~
COMPILE ~ImprovedAnvil/scripts/DDWELL.baf~
COMPILE ~ImprovedAnvil/scripts/DECKINIT.baf~
COMPILE ~ImprovedAnvil/scripts/demilich.baf~
COMPILE ~ImprovedAnvil/scripts/DEMMAG.baf~
COMPILE ~ImprovedAnvil/scripts/dempri.baf~
COMPILE ~ImprovedAnvil/scripts/DEVAGOOD.baf~
COMPILE ~ImprovedAnvil/scripts/DJINNI01.baf~
COMPILE ~ImprovedAnvil/scripts/dlich01.baf~
COMPILE ~ImprovedAnvil/scripts/dplayer3.baf~
COMPILE ~ImprovedAnvil/scripts/draconis.baf~
COMPILE ~ImprovedAnvil/scripts/dragblac.baf~
COMPILE ~ImprovedAnvil/scripts/dragbrow.baf~
COMPILE ~ImprovedAnvil/scripts/dragred.baf~
COMPILE ~ImprovedAnvil/scripts/DRSHCH01.baf~
COMPILE ~ImprovedAnvil/scripts/DRUID12A.baf~
COMPILE ~ImprovedAnvil/scripts/DRUIDX.baf~
COMPILE ~ImprovedAnvil/scripts/ds57521.baf~
COMPILE ~ImprovedAnvil/scripts/DWVITH.baf~
COMPILE ~ImprovedAnvil/scripts/EFREET01.baf~
COMPILE ~ImprovedAnvil/scripts/efreet04.baf~
COMPILE ~ImprovedAnvil/scripts/elemimix.baf~
COMPILE ~ImprovedAnvil/scripts/ELEMOGRE.baf~
COMPILE ~ImprovedAnvil/scripts/ETTERCAP.baf~
COMPILE ~ImprovedAnvil/scripts/FATESP.baf~
COMPILE ~ImprovedAnvil/scripts/FLAYER02.baf~
COMPILE ~ImprovedAnvil/scripts/GAUTH01.baf~
COMPILE ~ImprovedAnvil/scripts/GENSHT01.baf~
COMPILE ~ImprovedAnvil/scripts/GITH01.baf~
COMPILE ~ImprovedAnvil/scripts/GITH03.baf~
COMPILE ~ImprovedAnvil/scripts/GITH04.baf~
COMPILE ~ImprovedAnvil/scripts/golbra01.baf~
COMPILE ~ImprovedAnvil/scripts/golcly01.baf~
COMPILE ~ImprovedAnvil/scripts/golsto01.baf~
COMPILE ~ImprovedAnvil/scripts/gorchr.baf~
COMPILE ~ImprovedAnvil/scripts/gorlic01.baf~
COMPILE ~ImprovedAnvil/scripts/gorsal.baf~
COMPILE ~ImprovedAnvil/scripts/gpmerc.baf~
COMPILE ~ImprovedAnvil/scripts/gpshout.baf~
COMPILE ~ImprovedAnvil/scripts/grpsht01.baf~
COMPILE ~ImprovedAnvil/scripts/gt002.baf~
COMPILE ~ImprovedAnvil/scripts/gt019.baf~
COMPILE ~ImprovedAnvil/scripts/GTSPID.baf~
COMPILE ~ImprovedAnvil/scripts/HAEGAN.baf~
COMPILE ~ImprovedAnvil/scripts/HASHOUT.baf~
COMPILE ~ImprovedAnvil/scripts/hellslay.baf~
COMPILE ~ImprovedAnvil/scripts/hlsion.baf~
COMPILE ~ImprovedAnvil/scripts/hlketta.baf~
COMPILE ~ImprovedAnvil/scripts/hgnya01.baf~
COMPILE ~ImprovedAnvil/scripts/illasera.baf~
COMPILE ~ImprovedAnvil/scripts/INITRG15.baf~
COMPILE ~ImprovedAnvil/scripts/KARASH.baf~
COMPILE ~ImprovedAnvil/scripts/KETTAATK.baf~
COMPILE ~ImprovedAnvil/scripts/KOBKAM.baf~
COMPILE ~ImprovedAnvil/scripts/kproen02.baf~
COMPILE ~ImprovedAnvil/scripts/kproen.baf~
COMPILE ~ImprovedAnvil/scripts/kpyuan01.baf~
COMPILE ~ImprovedAnvil/scripts/lavok01.baf~
COMPILE ~ImprovedAnvil/scripts/lassal.baf~
COMPILE ~ImprovedAnvil/scripts/maevar.baf~
COMPILE ~ImprovedAnvil/scripts/mage1.baf~
COMPILE ~ImprovedAnvil/scripts/mage3.baf~
COMPILE ~ImprovedAnvil/scripts/mage4.baf~
COMPILE ~ImprovedAnvil/scripts/mage4a.baf~
COMPILE ~ImprovedAnvil/scripts/mage4b.baf~
COMPILE ~ImprovedAnvil/scripts/mage5.baf~
COMPILE ~ImprovedAnvil/scripts/mage6.baf~
COMPILE ~ImprovedAnvil/scripts/mage6a.baf~
COMPILE ~ImprovedAnvil/scripts/mage6b.baf~
COMPILE ~ImprovedAnvil/scripts/mage6c.baf~
COMPILE ~ImprovedAnvil/scripts/mage7.baf~
COMPILE ~ImprovedAnvil/scripts/mage8.baf~
COMPILE ~ImprovedAnvil/scripts/mage8a.baf~
COMPILE ~ImprovedAnvil/scripts/mage8b.baf~
COMPILE ~ImprovedAnvil/scripts/mage8c.baf~
COMPILE ~ImprovedAnvil/scripts/mage8d.baf~
COMPILE ~ImprovedAnvil/scripts/mage8e.baf~
COMPILE ~ImprovedAnvil/scripts/mage10a.baf~
COMPILE ~ImprovedAnvil/scripts/mage10b.baf~
COMPILE ~ImprovedAnvil/scripts/mage10d.baf~
COMPILE ~ImprovedAnvil/scripts/mage12a.baf~
COMPILE ~ImprovedAnvil/scripts/mage12b.baf~
COMPILE ~ImprovedAnvil/scripts/mage12d.baf~
COMPILE ~ImprovedAnvil/scripts/mage14a.baf~
COMPILE ~ImprovedAnvil/scripts/mage14b.baf~
COMPILE ~ImprovedAnvil/scripts/mage14c.baf~
COMPILE ~ImprovedAnvil/scripts/mage14d.baf~
COMPILE ~ImprovedAnvil/scripts/mage14m.baf~
COMPILE ~ImprovedAnvil/scripts/mage14t.baf~
COMPILE ~ImprovedAnvil/scripts/mage16a.baf~
COMPILE ~ImprovedAnvil/scripts/mage16b.baf~
COMPILE ~ImprovedAnvil/scripts/mage16c.baf~
COMPILE ~ImprovedAnvil/scripts/mage16m.baf~
COMPILE ~ImprovedAnvil/scripts/mage18a.baf~
COMPILE ~ImprovedAnvil/scripts/mage18b.baf~
COMPILE ~ImprovedAnvil/scripts/mage18c.baf~
COMPILE ~ImprovedAnvil/scripts/mage18d.baf~
COMPILE ~ImprovedAnvil/scripts/mage18e.baf~
COMPILE ~ImprovedAnvil/scripts/mage20a.baf~
COMPILE ~ImprovedAnvil/scripts/mage20b.baf~
COMPILE ~ImprovedAnvil/scripts/mage20c.baf~
COMPILE ~ImprovedAnvil/scripts/magthf14.baf~
COMPILE ~ImprovedAnvil/scripts/MEKRAT.baf~
COMPILE ~ImprovedAnvil/scripts/mindal01.baf~
COMPILE ~ImprovedAnvil/scripts/MISTVA.baf~
COMPILE ~ImprovedAnvil/scripts/MORSWORD.baf~
COMPILE ~ImprovedAnvil/scripts/MOUTHTRP.baf~
COMPILE ~ImprovedAnvil/scripts/MISTHO.baf~
COMPILE ~ImprovedAnvil/scripts/NEVA.baf~
COMPILE ~ImprovedAnvil/scripts/NISHRU01.baf~
COMPILE ~ImprovedAnvil/scripts/NYMPH.baf~
COMPILE ~ImprovedAnvil/scripts/obsdem01.baf~
COMPILE ~ImprovedAnvil/scripts/obsdem04.baf~
COMPILE ~ImprovedAnvil/scripts/obshal02.baf~
COMPILE ~ImprovedAnvil/scripts/ORBTHRAL.baf~
COMPILE ~ImprovedAnvil/scripts/ogre.baf~
COMPILE ~ImprovedAnvil/scripts/PIPE01.baf~
COMPILE ~ImprovedAnvil/scripts/PIPE02.baf~
COMPILE ~ImprovedAnvil/scripts/PIPE03.baf~
COMPILE ~ImprovedAnvil/scripts/PIPE04.baf~
COMPILE ~ImprovedAnvil/scripts/pirmur01.baf~
COMPILE ~ImprovedAnvil/scripts/PLANGOOD.baf~
COMPILE ~ImprovedAnvil/scripts/pooky.baf~
COMPILE ~ImprovedAnvil/scripts/ppbook.baf~
COMPILE ~ImprovedAnvil/scripts/PPJON.baf~
COMPILE ~ImprovedAnvil/scripts/PPJON2.baf~
COMPILE ~ImprovedAnvil/scripts/PPMAGNET.baf~
COMPILE ~ImprovedAnvil/scripts/pries6a.baf~
COMPILE ~ImprovedAnvil/scripts/pries6b.baf~
COMPILE ~ImprovedAnvil/scripts/pries6c.baf~
COMPILE ~ImprovedAnvil/scripts/pries8a.baf~
COMPILE ~ImprovedAnvil/scripts/pries8b.baf~
COMPILE ~ImprovedAnvil/scripts/pries8c.baf~
COMPILE ~ImprovedAnvil/scripts/pries10a.baf~
COMPILE ~ImprovedAnvil/scripts/pries10b.baf~
COMPILE ~ImprovedAnvil/scripts/pries10c.baf~
COMPILE ~ImprovedAnvil/scripts/pries12a.baf~
COMPILE ~ImprovedAnvil/scripts/pries12c.baf~
COMPILE ~ImprovedAnvil/scripts/pries14a.baf~
COMPILE ~ImprovedAnvil/scripts/pries14t.baf~
COMPILE ~ImprovedAnvil/scripts/pries18a.baf~
COMPILE ~ImprovedAnvil/scripts/pries18b.baf~
COMPILE ~ImprovedAnvil/scripts/pries18c.baf~
COMPILE ~ImprovedAnvil/scripts/pries18d.baf~
COMPILE ~ImprovedAnvil/scripts/priest1.baf~
COMPILE ~ImprovedAnvil/scripts/priest2.baf~
COMPILE ~ImprovedAnvil/scripts/priest3.baf~
COMPILE ~ImprovedAnvil/scripts/priest4.baf~
COMPILE ~ImprovedAnvil/scripts/priest5.baf~
COMPILE ~ImprovedAnvil/scripts/priest6.baf~
COMPILE ~ImprovedAnvil/scripts/priest12.baf~
COMPILE ~ImprovedAnvil/scripts/priet12b.baf~
COMPILE ~ImprovedAnvil/scripts/prrune02.baf~
COMPILE ~ImprovedAnvil/scripts/rakmah01.baf~
COMPILE ~ImprovedAnvil/scripts/rakruh01.baf~
COMPILE ~ImprovedAnvil/scripts/raksha01.baf~
COMPILE ~ImprovedAnvil/scripts/raksha02.baf~
COMPILE ~ImprovedAnvil/scripts/S!acton.baf~
COMPILE ~ImprovedAnvil/scripts/S!acton2.baf~
COMPILE ~ImprovedAnvil/scripts/S!allyc4.baf~
COMPILE ~ImprovedAnvil/scripts/S!alsuc1.baf~
COMPILE ~ImprovedAnvil/scripts/S!alsuc2.baf~
COMPILE ~ImprovedAnvil/scripts/S!alsuc3.baf~
COMPILE ~ImprovedAnvil/scripts/S!alsuc4.baf~
COMPILE ~ImprovedAnvil/scripts/S!alsup1.baf~
COMPILE ~ImprovedAnvil/scripts/S!alsup3.baf~
COMPILE ~ImprovedAnvil/scripts/S!alsup4.baf~
COMPILE ~ImprovedAnvil/scripts/S!alsus3.baf~
COMPILE ~ImprovedAnvil/scripts/S!amber.baf~
COMPILE ~ImprovedAnvil/scripts/S!amber2.baf~
COMPILE ~ImprovedAnvil/scripts/S!amber3.baf~
COMPILE ~ImprovedAnvil/scripts/S!amber4.baf~
COMPILE ~ImprovedAnvil/scripts/S!amberd.baf~
COMPILE ~ImprovedAnvil/scripts/S!amberg.baf~
COMPILE ~ImprovedAnvil/scripts/S!ambers.baf~
COMPILE ~ImprovedAnvil/scripts/S!ammar.baf~
COMPILE ~ImprovedAnvil/scripts/S!amtcap.baf~
COMPILE ~ImprovedAnvil/scripts/S!amtcle.baf~
COMPILE ~ImprovedAnvil/scripts/S!amtmag.baf~
COMPILE ~ImprovedAnvil/scripts/S!ancest.baf~
COMPILE ~ImprovedAnvil/scripts/S!anima1.baf~
COMPILE ~ImprovedAnvil/scripts/S!anima2.baf~
COMPILE ~ImprovedAnvil/scripts/S!anima3.baf~
COMPILE ~ImprovedAnvil/scripts/S!antic2.baf~
COMPILE ~ImprovedAnvil/scripts/S!antic3.baf~
COMPILE ~ImprovedAnvil/scripts/S!antic4.baf~
COMPILE ~ImprovedAnvil/scripts/S!anticg.baf~
COMPILE ~ImprovedAnvil/scripts/S!antich.baf~
COMPILE ~ImprovedAnvil/scripts/S!anticu.baf~
COMPILE ~ImprovedAnvil/scripts/S!ar206.baf~
COMPILE ~ImprovedAnvil/scripts/S!aurie2.baf~
COMPILE ~ImprovedAnvil/scripts/S!aurie3.baf~
COMPILE ~ImprovedAnvil/scripts/S!avatar.baf~
COMPILE ~ImprovedAnvil/scripts/S!balor.baf~
COMPILE ~ImprovedAnvil/scripts/S!balor2.baf~
COMPILE ~ImprovedAnvil/scripts/S!bdevil.baf~
COMPILE ~ImprovedAnvil/scripts/S!bdevit.baf~
COMPILE ~ImprovedAnvil/scripts/S!beast.baf~
COMPILE ~ImprovedAnvil/scripts/S!belgua.baf~
COMPILE ~ImprovedAnvil/scripts/S!berenn.baf~
COMPILE ~ImprovedAnvil/scripts/S!berseh.baf~
COMPILE ~ImprovedAnvil/scripts/S!berser.baf~
COMPILE ~ImprovedAnvil/scripts/S!bguard.baf~
COMPILE ~ImprovedAnvil/scripts/S!block2.baf~
COMPILE ~ImprovedAnvil/scripts/S!block3.baf~
COMPILE ~ImprovedAnvil/scripts/S!block.baf~
COMPILE ~ImprovedAnvil/scripts/S!blockd.baf~
COMPILE ~ImprovedAnvil/scripts/S!blockm.baf~
COMPILE ~ImprovedAnvil/scripts/S!blocko.baf~
COMPILE ~ImprovedAnvil/scripts/S!BODHI.baf~
COMPILE ~ImprovedAnvil/scripts/S!bodtan.baf~
COMPILE ~ImprovedAnvil/scripts/S!bolich.baf~
COMPILE ~ImprovedAnvil/scripts/S!bomin1.baf~
COMPILE ~ImprovedAnvil/scripts/S!bomin2.baf~
COMPILE ~ImprovedAnvil/scripts/S!bongof.baf~
COMPILE ~ImprovedAnvil/scripts/S!bongol.baf~
COMPILE ~ImprovedAnvil/scripts/S!borina.baf~
COMPILE ~ImprovedAnvil/scripts/S!bounty.baf~
COMPILE ~ImprovedAnvil/scripts/S!boz.baf~
COMPILE ~ImprovedAnvil/scripts/S!cangua.baf~
COMPILE ~ImprovedAnvil/scripts/S!cat1.baf~
COMPILE ~ImprovedAnvil/scripts/S!cat2.baf~
COMPILE ~ImprovedAnvil/scripts/S!cat3.baf~
COMPILE ~ImprovedAnvil/scripts/S!cat4.baf~
COMPILE ~ImprovedAnvil/scripts/S!cat5.baf~
COMPILE ~ImprovedAnvil/scripts/S!cat6.baf~
COMPILE ~ImprovedAnvil/scripts/S!cat7.baf~
COMPILE ~ImprovedAnvil/scripts/S!cat8.baf~
COMPILE ~ImprovedAnvil/scripts/S!cat9.baf~
COMPILE ~ImprovedAnvil/scripts/S!cerebu.baf~
COMPILE ~ImprovedAnvil/scripts/S!cghost.baf~
COMPILE ~ImprovedAnvil/scripts/S!chak.baf~
COMPILE ~ImprovedAnvil/scripts/S!chandr.baf~
COMPILE ~ImprovedAnvil/scripts/S!chase.baf~
COMPILE ~ImprovedAnvil/scripts/S!chick1.baf~
COMPILE ~ImprovedAnvil/scripts/S!chick2.baf~
COMPILE ~ImprovedAnvil/scripts/S!chick3.baf~
COMPILE ~ImprovedAnvil/scripts/S!coinb.baf~
COMPILE ~ImprovedAnvil/scripts/S!crawl.baf~
COMPILE ~ImprovedAnvil/scripts/S!crypt.baf~
COMPILE ~ImprovedAnvil/scripts/S!cut01.baf~
COMPILE ~ImprovedAnvil/scripts/S!cut02.baf~
COMPILE ~ImprovedAnvil/scripts/S!cut03.baf~
COMPILE ~ImprovedAnvil/scripts/S!cut04.baf~
COMPILE ~ImprovedAnvil/scripts/S!cut05.baf~
COMPILE ~ImprovedAnvil/scripts/S!cut06.baf~
COMPILE ~ImprovedAnvil/scripts/S!cut07.baf~
COMPILE ~ImprovedAnvil/scripts/S!cut08.baf~
COMPILE ~ImprovedAnvil/scripts/S!cutam.baf~
COMPILE ~ImprovedAnvil/scripts/S!cutia4.baf~
COMPILE ~ImprovedAnvil/scripts/S!cutia5.baf~
COMPILE ~ImprovedAnvil/scripts/S!cutia8.baf~
COMPILE ~ImprovedAnvil/scripts/S!cutor.baf~
COMPILE ~ImprovedAnvil/scripts/S!cutrng.baf~
COMPILE ~ImprovedAnvil/scripts/S!cutsk.baf~
COMPILE ~ImprovedAnvil/scripts/S!cutsl.baf~
COMPILE ~ImprovedAnvil/scripts/S!demarc.baf~
COMPILE ~ImprovedAnvil/scripts/S!demfig.baf~
COMPILE ~ImprovedAnvil/scripts/S!demfi2.baf~
COMPILE ~ImprovedAnvil/scripts/S!demgod.baf~
COMPILE ~ImprovedAnvil/scripts/S!deshar.baf~
COMPILE ~ImprovedAnvil/scripts/S!deva.baf~
COMPILE ~ImprovedAnvil/scripts/S!djinn.baf~
COMPILE ~ImprovedAnvil/scripts/S!dlord.baf~
COMPILE ~ImprovedAnvil/scripts/S!dompal.baf~
COMPILE ~ImprovedAnvil/scripts/S!domran.baf~
COMPILE ~ImprovedAnvil/scripts/S!dopple.baf~
COMPILE ~ImprovedAnvil/scripts/S!dracol.baf~
COMPILE ~ImprovedAnvil/scripts/S!dragol.baf~
COMPILE ~ImprovedAnvil/scripts/S!draggr.baf~
COMPILE ~ImprovedAnvil/scripts/S!dryad.baf~
COMPILE ~ImprovedAnvil/scripts/S!dwarf.baf~
COMPILE ~ImprovedAnvil/scripts/S!edeswa.baf~
COMPILE ~ImprovedAnvil/scripts/S!efree2.baf~
COMPILE ~ImprovedAnvil/scripts/S!efreet.baf~
COMPILE ~ImprovedAnvil/scripts/S!egiant.baf~
COMPILE ~ImprovedAnvil/scripts/S!elder.baf~
COMPILE ~ImprovedAnvil/scripts/S!elego1.baf~
COMPILE ~ImprovedAnvil/scripts/S!elego2.baf~
COMPILE ~ImprovedAnvil/scripts/S!elego3.baf~
COMPILE ~ImprovedAnvil/scripts/S!elegoa.baf~
COMPILE ~ImprovedAnvil/scripts/S!elegob.baf~
COMPILE ~ImprovedAnvil/scripts/S!elegoe.baf~
COMPILE ~ImprovedAnvil/scripts/S!elegog.baf~
COMPILE ~ImprovedAnvil/scripts/S!elegoh.baf~
COMPILE ~ImprovedAnvil/scripts/S!elegol.baf~
COMPILE ~ImprovedAnvil/scripts/S!elegos.baf~
COMPILE ~ImprovedAnvil/scripts/S!elegow.baf~
COMPILE ~ImprovedAnvil/scripts/S!elegra.baf~
COMPILE ~ImprovedAnvil/scripts/S!elegwi.baf~
COMPILE ~ImprovedAnvil/scripts/S!elemmu.baf~
COMPILE ~ImprovedAnvil/scripts/S!elernd.baf~
COMPILE ~ImprovedAnvil/scripts/S!enchan.baf~
COMPILE ~ImprovedAnvil/scripts/S!entu.baf~
COMPILE ~ImprovedAnvil/scripts/S!equip.baf~
COMPILE ~ImprovedAnvil/scripts/S!figmag.baf~
COMPILE ~ImprovedAnvil/scripts/S!firmag.baf~
COMPILE ~ImprovedAnvil/scripts/S!firmon.baf~
COMPILE ~ImprovedAnvil/scripts/S!firrak.baf~
COMPILE ~ImprovedAnvil/scripts/S!force1.baf~
COMPILE ~ImprovedAnvil/scripts/S!force2.baf~
COMPILE ~ImprovedAnvil/scripts/S!found.baf~
COMPILE ~ImprovedAnvil/scripts/S!fsdrag.baf~
COMPILE ~ImprovedAnvil/scripts/S!gaius.baf~
COMPILE ~ImprovedAnvil/scripts/S!gall.baf~
COMPILE ~ImprovedAnvil/scripts/S!GDRUID.baf~
COMPILE ~ImprovedAnvil/scripts/S!gelego.baf~
COMPILE ~ImprovedAnvil/scripts/S!gelegs.baf~
COMPILE ~ImprovedAnvil/scripts/S!gelemi.baf~
COMPILE ~ImprovedAnvil/scripts/S!gem3.baf~
COMPILE ~ImprovedAnvil/scripts/S!gem.baf~
COMPILE ~ImprovedAnvil/scripts/S!gemg.baf~
COMPILE ~ImprovedAnvil/scripts/S!gemgy.baf~
COMPILE ~ImprovedAnvil/scripts/S!gemhel.baf~
COMPILE ~ImprovedAnvil/scripts/S!geml.baf~
COMPILE ~ImprovedAnvil/scripts/S!gempp.baf~
COMPILE ~ImprovedAnvil/scripts/S!gemran.baf~
COMPILE ~ImprovedAnvil/scripts/S!gems.baf~
COMPILE ~ImprovedAnvil/scripts/S!gemt.baf~
COMPILE ~ImprovedAnvil/scripts/S!gemw.baf~
COMPILE ~ImprovedAnvil/scripts/S!gemwi.baf~
COMPILE ~ImprovedAnvil/scripts/S!gghost.baf~
COMPILE ~ImprovedAnvil/scripts/S!ggem.baf~
COMPILE ~ImprovedAnvil/scripts/S!glaica.baf~
COMPILE ~ImprovedAnvil/scripts/S!gorgit.baf~
COMPILE ~ImprovedAnvil/scripts/S!gpmage.baf~
COMPILE ~ImprovedAnvil/scripts/S!gpthie.baf~
COMPILE ~ImprovedAnvil/scripts/S!groasa.baf~
COMPILE ~ImprovedAnvil/scripts/S!grober.baf~
COMPILE ~ImprovedAnvil/scripts/S!gromag.baf~
COMPILE ~ImprovedAnvil/scripts/S!gromg3.baf~
COMPILE ~ImprovedAnvil/scripts/S!gromg6.baf~
COMPILE ~ImprovedAnvil/scripts/S!gromni.baf~
COMPILE ~ImprovedAnvil/scripts/S!gstone.baf~
COMPILE ~ImprovedAnvil/scripts/S!grlch1.baf~
COMPILE ~ImprovedAnvil/scripts/S!grlch2.baf~
COMPILE ~ImprovedAnvil/scripts/S!grlch3.baf~
COMPILE ~ImprovedAnvil/scripts/S!grlch4.baf~
COMPILE ~ImprovedAnvil/scripts/S!grlch5.baf~
COMPILE ~ImprovedAnvil/scripts/S!grlch6.baf~
COMPILE ~ImprovedAnvil/scripts/S!grlch7.baf~
COMPILE ~ImprovedAnvil/scripts/S!grvlch.baf~
COMPILE ~ImprovedAnvil/scripts/S!gtwist.baf~
COMPILE ~ImprovedAnvil/scripts/S!hlady3.baf~
COMPILE ~ImprovedAnvil/scripts/S!hlarch.baf~
COMPILE ~ImprovedAnvil/scripts/S!hlassa.baf~
COMPILE ~ImprovedAnvil/scripts/S!hlcler.baf~
COMPILE ~ImprovedAnvil/scripts/S!hlfigh.baf~
COMPILE ~ImprovedAnvil/scripts/S!hlkang.baf~
COMPILE ~ImprovedAnvil/scripts/S!hlmage.baf~
COMPILE ~ImprovedAnvil/scripts/S!hlshyr.baf~
COMPILE ~ImprovedAnvil/scripts/S!hlstal.baf~
COMPILE ~ImprovedAnvil/scripts/S!horarc.baf~
COMPILE ~ImprovedAnvil/scripts/S!hormag.baf~
COMPILE ~ImprovedAnvil/scripts/S!hrack.baf~
COMPILE ~ImprovedAnvil/scripts/S!icbone.baf~
COMPILE ~ImprovedAnvil/scripts/S!icbonr.baf~
COMPILE ~ImprovedAnvil/scripts/S!icego2.baf~
COMPILE ~ImprovedAnvil/scripts/S!icegoa.baf~
COMPILE ~ImprovedAnvil/scripts/S!icegol.baf~
COMPILE ~ImprovedAnvil/scripts/S!illgol.baf~
COMPILE ~ImprovedAnvil/scripts/S!illusi.baf~
COMPILE ~ImprovedAnvil/scripts/S!illvam.baf~
COMPILE ~ImprovedAnvil/scripts/S!jael01.baf~
COMPILE ~ImprovedAnvil/scripts/S!jael02.baf~
COMPILE ~ImprovedAnvil/scripts/S!jael03.baf~
COMPILE ~ImprovedAnvil/scripts/S!jailor.baf~
COMPILE ~ImprovedAnvil/scripts/S!jamis.baf~
COMPILE ~ImprovedAnvil/scripts/S!kaol1.baf~
COMPILE ~ImprovedAnvil/scripts/S!kaol.baf~
COMPILE ~ImprovedAnvil/scripts/S!karun.baf~
COMPILE ~ImprovedAnvil/scripts/S!kayard.baf~
COMPILE ~ImprovedAnvil/scripts/S!killer.baf~
COMPILE ~ImprovedAnvil/scripts/S!kobold.baf~
COMPILE ~ImprovedAnvil/scripts/S!koshi.baf~
COMPILE ~ImprovedAnvil/scripts/S!kpvipe.baf~
COMPILE ~ImprovedAnvil/scripts/S!kruin.baf~
COMPILE ~ImprovedAnvil/scripts/S!kuocap.baf~
COMPILE ~ImprovedAnvil/scripts/S!kuopri.baf~
COMPILE ~ImprovedAnvil/scripts/S!lady1.baf~
COMPILE ~ImprovedAnvil/scripts/S!lady2.baf~
COMPILE ~ImprovedAnvil/scripts/S!lady3.baf~
COMPILE ~ImprovedAnvil/scripts/S!lady4.baf~
COMPILE ~ImprovedAnvil/scripts/S!ladyde.baf~
COMPILE ~ImprovedAnvil/scripts/S!ladygy.baf~
COMPILE ~ImprovedAnvil/scripts/S!ladyhe.baf~
COMPILE ~ImprovedAnvil/scripts/S!layene.baf~
COMPILE ~ImprovedAnvil/scripts/S!legdor.baf~
COMPILE ~ImprovedAnvil/scripts/S!limak.baf~
COMPILE ~ImprovedAnvil/scripts/S!looker.baf~
COMPILE ~ImprovedAnvil/scripts/S!mafer.baf~
COMPILE ~ImprovedAnvil/scripts/S!mageco.baf~
COMPILE ~ImprovedAnvil/scripts/S!malba2.baf~
COMPILE ~ImprovedAnvil/scripts/S!malbar.baf~
COMPILE ~ImprovedAnvil/scripts/S!mayor.baf~
COMPILE ~ImprovedAnvil/scripts/S!mekear.baf~
COMPILE ~ImprovedAnvil/scripts/S!mekimp.baf~
COMPILE ~ImprovedAnvil/scripts/S!melee0.baf~
COMPILE ~ImprovedAnvil/scripts/S!messen.baf~
COMPILE ~ImprovedAnvil/scripts/S!minion.baf~
COMPILE ~ImprovedAnvil/scripts/S!minota.baf~
COMPILE ~ImprovedAnvil/scripts/S!mircha.baf~
COMPILE ~ImprovedAnvil/scripts/S!mirima.baf~
COMPILE ~ImprovedAnvil/scripts/S!mirror.baf~
COMPILE ~ImprovedAnvil/scripts/S!mirw10.baf~
COMPILE ~ImprovedAnvil/scripts/S!mirw15.baf~
COMPILE ~ImprovedAnvil/scripts/S!mism01.baf~
COMPILE ~ImprovedAnvil/scripts/S!mism02.baf~
COMPILE ~ImprovedAnvil/scripts/S!mistho.baf~
COMPILE ~ImprovedAnvil/scripts/S!mitgol.baf~
COMPILE ~ImprovedAnvil/scripts/S!mlar.baf~
COMPILE ~ImprovedAnvil/scripts/S!mogadi.baf~
COMPILE ~ImprovedAnvil/scripts/S!mom.baf~
COMPILE ~ImprovedAnvil/scripts/S!mombat.baf~
COMPILE ~ImprovedAnvil/scripts/S!momd.baf~
COMPILE ~ImprovedAnvil/scripts/S!morid1.baf~
COMPILE ~ImprovedAnvil/scripts/S!morid2.baf~
COMPILE ~ImprovedAnvil/scripts/S!mvguar.baf~
COMPILE ~ImprovedAnvil/scripts/S!mvprie.baf~
COMPILE ~ImprovedAnvil/scripts/S!nevm4.baf~
COMPILE ~ImprovedAnvil/scripts/S!ngem.baf~
COMPILE ~ImprovedAnvil/scripts/S!nishru.baf~
COMPILE ~ImprovedAnvil/scripts/S!nrak.baf~
COMPILE ~ImprovedAnvil/scripts/S!ntrol2.baf~
COMPILE ~ImprovedAnvil/scripts/S!ntroll.baf~
COMPILE ~ImprovedAnvil/scripts/S!olaf.baf~
COMPILE ~ImprovedAnvil/scripts/S!oldon2.baf~
COMPILE ~ImprovedAnvil/scripts/S!orcus.baf~
COMPILE ~ImprovedAnvil/scripts/S!orvam.baf~
COMPILE ~ImprovedAnvil/scripts/S!otyugh.baf~
COMPILE ~ImprovedAnvil/scripts/S!otyug2.baf~
COMPILE ~ImprovedAnvil/scripts/S!paac.baf~
COMPILE ~ImprovedAnvil/scripts/S!palad.baf~
COMPILE ~ImprovedAnvil/scripts/S!pasha.baf~
COMPILE ~ImprovedAnvil/scripts/S!pasha2.baf~
COMPILE ~ImprovedAnvil/scripts/S!perth.baf~
COMPILE ~ImprovedAnvil/scripts/S!phoun2.baf~
COMPILE ~ImprovedAnvil/scripts/S!phound.baf~
COMPILE ~ImprovedAnvil/scripts/S!pirate.baf~
COMPILE ~ImprovedAnvil/scripts/S!pircap.baf~
COMPILE ~ImprovedAnvil/scripts/S!pircoo.baf~
COMPILE ~ImprovedAnvil/scripts/S!pirmur.baf~
COMPILE ~ImprovedAnvil/scripts/S!planet.baf~
COMPILE ~ImprovedAnvil/scripts/S!plmetr.baf~
COMPILE ~ImprovedAnvil/scripts/S!ppaph2.baf~
COMPILE ~ImprovedAnvil/scripts/S!ppdra2.baf~
COMPILE ~ImprovedAnvil/scripts/S!ppiron.baf~
COMPILE ~ImprovedAnvil/scripts/S!ppnalj.baf~
COMPILE ~ImprovedAnvil/scripts/S!pptiax.baf~
COMPILE ~ImprovedAnvil/scripts/S!prince.baf~
COMPILE ~ImprovedAnvil/scripts/S!pull.baf~
COMPILE ~ImprovedAnvil/scripts/S!rak1.baf~
COMPILE ~ImprovedAnvil/scripts/S!rak2.baf~
COMPILE ~ImprovedAnvil/scripts/S!rak2g.baf~
COMPILE ~ImprovedAnvil/scripts/S!rak2r.baf~
COMPILE ~ImprovedAnvil/scripts/S!rakgy2.baf~
COMPILE ~ImprovedAnvil/scripts/S!rakgyp.baf~
COMPILE ~ImprovedAnvil/scripts/S!rakp.baf~
COMPILE ~ImprovedAnvil/scripts/S!ranarc.baf~
COMPILE ~ImprovedAnvil/scripts/S!rancm1.baf~
COMPILE ~ImprovedAnvil/scripts/S!rancm2.baf~
COMPILE ~ImprovedAnvil/scripts/S!rancm3.baf~
COMPILE ~ImprovedAnvil/scripts/S!rancm4.baf~
COMPILE ~ImprovedAnvil/scripts/S!random.baf~
COMPILE ~ImprovedAnvil/scripts/S!ranpm1.baf~
COMPILE ~ImprovedAnvil/scripts/S!ranpm2.baf~
COMPILE ~ImprovedAnvil/scripts/S!ranpm3.baf~
COMPILE ~ImprovedAnvil/scripts/S!ranpm4.baf~
COMPILE ~ImprovedAnvil/scripts/S!ransm1.baf~
COMPILE ~ImprovedAnvil/scripts/S!ransm2.baf~
COMPILE ~ImprovedAnvil/scripts/S!ransm3.baf~
COMPILE ~ImprovedAnvil/scripts/S!ransm4.baf~
COMPILE ~ImprovedAnvil/scripts/S!rat1.baf~
COMPILE ~ImprovedAnvil/scripts/S!rat2.baf~
COMPILE ~ImprovedAnvil/scripts/S!recler.baf~
COMPILE ~ImprovedAnvil/scripts/S!remage.baf~
COMPILE ~ImprovedAnvil/scripts/S!rengaa.baf~
COMPILE ~ImprovedAnvil/scripts/S!resuna.baf~
COMPILE ~ImprovedAnvil/scripts/S!rethie.baf~
COMPILE ~ImprovedAnvil/scripts/S!revan.baf~
COMPILE ~ImprovedAnvil/scripts/S!rngsha.baf~
COMPILE ~ImprovedAnvil/scripts/S!roegol.baf~
COMPILE ~ImprovedAnvil/scripts/S!roen01.baf~
COMPILE ~ImprovedAnvil/scripts/S!roen02.baf~
COMPILE ~ImprovedAnvil/scripts/S!rosha2.baf~
COMPILE ~ImprovedAnvil/scripts/S!rune1.baf~
COMPILE ~ImprovedAnvil/scripts/S!rune2.baf~
COMPILE ~ImprovedAnvil/scripts/S!rune3.baf~
COMPILE ~ImprovedAnvil/scripts/S!runef2.baf~
COMPILE ~ImprovedAnvil/scripts/S!runef3.baf~
COMPILE ~ImprovedAnvil/scripts/S!runeas.baf~
COMPILE ~ImprovedAnvil/scripts/S!runef.baf~
COMPILE ~ImprovedAnvil/scripts/S!runewa.baf~
COMPILE ~ImprovedAnvil/scripts/S!sahoty.baf~
COMPILE ~ImprovedAnvil/scripts/S!sahvip.baf~
COMPILE ~ImprovedAnvil/scripts/S!salam.baf~
COMPILE ~ImprovedAnvil/scripts/S!salam2.baf~
COMPILE ~ImprovedAnvil/scripts/S!salam3.baf~
COMPILE ~ImprovedAnvil/scripts/S!senarc.baf~
COMPILE ~ImprovedAnvil/scripts/S!senfig.baf~
COMPILE ~ImprovedAnvil/scripts/S!senken.baf~
COMPILE ~ImprovedAnvil/scripts/S!senlic.baf~
COMPILE ~ImprovedAnvil/scripts/S!senpet.baf~
COMPILE ~ImprovedAnvil/scripts/S!senpri.baf~
COMPILE ~ImprovedAnvil/scripts/S!sewrak.baf~
COMPILE ~ImprovedAnvil/scripts/S!shadel.baf~
COMPILE ~ImprovedAnvil/scripts/S!shadmi.baf~
COMPILE ~ImprovedAnvil/scripts/S!shado2.baf~
COMPILE ~ImprovedAnvil/scripts/S!shados.baf~
COMPILE ~ImprovedAnvil/scripts/S!shang.baf~
COMPILE ~ImprovedAnvil/scripts/S!skel.baf~
COMPILE ~ImprovedAnvil/scripts/S!skel2.baf~
COMPILE ~ImprovedAnvil/scripts/S!skel3.baf~
COMPILE ~ImprovedAnvil/scripts/S!skeld.baf~
COMPILE ~ImprovedAnvil/scripts/S!skelg5.baf~
COMPILE ~ImprovedAnvil/scripts/S!skelgr.baf~
COMPILE ~ImprovedAnvil/scripts/S!skelpp.baf~
COMPILE ~ImprovedAnvil/scripts/S!skelr2.baf~
COMPILE ~ImprovedAnvil/scripts/S!skels.baf~
COMPILE ~ImprovedAnvil/scripts/S!skelsu.baf~
COMPILE ~ImprovedAnvil/scripts/S!sl0405.baf~
COMPILE ~ImprovedAnvil/scripts/S!slapri.baf~
COMPILE ~ImprovedAnvil/scripts/S!slassa.baf~
COMPILE ~ImprovedAnvil/scripts/S!slave.baf~
COMPILE ~ImprovedAnvil/scripts/S!slmage.baf~
COMPILE ~ImprovedAnvil/scripts/S!spgrov.baf~
COMPILE ~ImprovedAnvil/scripts/S!spid2h.baf~
COMPILE ~ImprovedAnvil/scripts/S!spide2.baf~
COMPILE ~ImprovedAnvil/scripts/S!spided.baf~
COMPILE ~ImprovedAnvil/scripts/S!spideg.baf~
COMPILE ~ImprovedAnvil/scripts/S!spideh.baf~
COMPILE ~ImprovedAnvil/scripts/S!spideq.baf~
COMPILE ~ImprovedAnvil/scripts/S!spider.baf~
COMPILE ~ImprovedAnvil/scripts/S!spidgr.baf~
COMPILE ~ImprovedAnvil/scripts/S!spidmi.baf~
COMPILE ~ImprovedAnvil/scripts/S!spidpp.baf~
COMPILE ~ImprovedAnvil/scripts/S!spidrh.baf~
COMPILE ~ImprovedAnvil/scripts/S!spidsu.baf~
COMPILE ~ImprovedAnvil/scripts/S!spidwd.baf~
COMPILE ~ImprovedAnvil/scripts/S!spidwf.baf~
COMPILE ~ImprovedAnvil/scripts/S!spidwh.baf~
COMPILE ~ImprovedAnvil/scripts/S!spidwr.baf~
COMPILE ~ImprovedAnvil/scripts/S!sppain.baf~
COMPILE ~ImprovedAnvil/scripts/S!spy1.baf~
COMPILE ~ImprovedAnvil/scripts/S!spy2.baf~
COMPILE ~ImprovedAnvil/scripts/S!spy3.baf~
COMPILE ~ImprovedAnvil/scripts/S!spy4.baf~
COMPILE ~ImprovedAnvil/scripts/S!spy5.baf~
COMPILE ~ImprovedAnvil/scripts/S!spy6.baf~
COMPILE ~ImprovedAnvil/scripts/S!spy8.baf~
COMPILE ~ImprovedAnvil/scripts/S!spyran.baf~
COMPILE ~ImprovedAnvil/scripts/S!sqass4.baf~
COMPILE ~ImprovedAnvil/scripts/S!sqassa.baf~
COMPILE ~ImprovedAnvil/scripts/S!squi01.baf~
COMPILE ~ImprovedAnvil/scripts/S!squi04.baf~
COMPILE ~ImprovedAnvil/scripts/S!suffoc.baf~
COMPILE ~ImprovedAnvil/scripts/S!supgol.baf~
COMPILE ~ImprovedAnvil/scripts/S!supgow.baf~
COMPILE ~ImprovedAnvil/scripts/S!suraam.baf~
COMPILE ~ImprovedAnvil/scripts/S!swanme.baf~
COMPILE ~ImprovedAnvil/scripts/S!swansu.baf~
COMPILE ~ImprovedAnvil/scripts/S!tarnor.baf~
COMPILE ~ImprovedAnvil/scripts/S!tanthf.baf~
COMPILE ~ImprovedAnvil/scripts/S!tazok.baf~
COMPILE ~ImprovedAnvil/scripts/S!telcam.baf~
COMPILE ~ImprovedAnvil/scripts/S!time.baf~
COMPILE ~ImprovedAnvil/scripts/S!tolger.baf~
COMPILE ~ImprovedAnvil/scripts/S!tolmag.baf~
COMPILE ~ImprovedAnvil/scripts/S!torgal.baf~
COMPILE ~ImprovedAnvil/scripts/S!trap01.baf~
COMPILE ~ImprovedAnvil/scripts/S!trollk.baf~
COMPILE ~ImprovedAnvil/scripts/S!trollq.baf~
COMPILE ~ImprovedAnvil/scripts/S!turm01.baf~
COMPILE ~ImprovedAnvil/scripts/S!turm02.baf~
COMPILE ~ImprovedAnvil/scripts/S!turm03.baf~
COMPILE ~ImprovedAnvil/scripts/S!turm04.baf~
COMPILE ~ImprovedAnvil/scripts/S!twist1.baf~
COMPILE ~ImprovedAnvil/scripts/S!twist2.baf~
COMPILE ~ImprovedAnvil/scripts/S!twist3.baf~
COMPILE ~ImprovedAnvil/scripts/S!twist4.baf~
COMPILE ~ImprovedAnvil/scripts/S!twist5.baf~
COMPILE ~ImprovedAnvil/scripts/S!twist6.baf~
COMPILE ~ImprovedAnvil/scripts/S!uddwar.baf~
COMPILE ~ImprovedAnvil/scripts/S!ultgoa.baf~
COMPILE ~ImprovedAnvil/scripts/S!ultgod.baf~
COMPILE ~ImprovedAnvil/scripts/S!ultgog.baf~
COMPILE ~ImprovedAnvil/scripts/S!ultgol.baf~
COMPILE ~ImprovedAnvil/scripts/S!umar.baf~
COMPILE ~ImprovedAnvil/scripts/S!vadek.baf~
COMPILE ~ImprovedAnvil/scripts/S!vamp1.baf~
COMPILE ~ImprovedAnvil/scripts/S!vamp2.baf~
COMPILE ~ImprovedAnvil/scripts/S!vamp3.baf~
COMPILE ~ImprovedAnvil/scripts/S!vamp4.baf~
COMPILE ~ImprovedAnvil/scripts/S!vaxal.baf~
COMPILE ~ImprovedAnvil/scripts/S!villyn.baf~
COMPILE ~ImprovedAnvil/scripts/S!vipe1.baf~
COMPILE ~ImprovedAnvil/scripts/S!vipmir.baf~
COMPILE ~ImprovedAnvil/scripts/S!vithal.baf~
COMPILE ~ImprovedAnvil/scripts/S!vlord.baf~
COMPILE ~ImprovedAnvil/scripts/S!vvdel.baf~
COMPILE ~ImprovedAnvil/scripts/S!warden.baf~
COMPILE ~ImprovedAnvil/scripts/S!weapb3.baf~
COMPILE ~ImprovedAnvil/scripts/S!wetlan.baf~
COMPILE ~ImprovedAnvil/scripts/S!windma.baf~
COMPILE ~ImprovedAnvil/scripts/S!wonimp.baf~
COMPILE ~ImprovedAnvil/scripts/S!yaga02.baf~
COMPILE ~ImprovedAnvil/scripts/S!yaga03.baf~
COMPILE ~ImprovedAnvil/scripts/S!yaga05.baf~
COMPILE ~ImprovedAnvil/scripts/S!yaga.baf~
COMPILE ~ImprovedAnvil/scripts/S!zallan.baf~
COMPILE ~ImprovedAnvil/scripts/S!zilarc.baf~
COMPILE ~ImprovedAnvil/scripts/S!zilfgt.baf~
COMPILE ~ImprovedAnvil/scripts/S!zilken.baf~
COMPILE ~ImprovedAnvil/scripts/S!zorl.baf~
COMPILE ~ImprovedAnvil/scripts/SAMIA.baf~
COMPILE ~ImprovedAnvil/scripts/senbattl.baf~
COMPILE ~ImprovedAnvil/scripts/SENDAI.baf~
COMPILE ~ImprovedAnvil/scripts/sengua03.baf~
COMPILE ~ImprovedAnvil/scripts/sengua04.baf~
COMPILE ~ImprovedAnvil/scripts/sengua05.baf~
COMPILE ~ImprovedAnvil/scripts/senspi01.baf~
COMPILE ~ImprovedAnvil/scripts/sevpat01.baf~
COMPILE ~ImprovedAnvil/scripts/sevpat02.baf~
COMPILE ~ImprovedAnvil/scripts/sevpat04.baf~
COMPILE ~ImprovedAnvil/scripts/sevpat05.baf~
COMPILE ~ImprovedAnvil/scripts/shadfi02.baf~
COMPILE ~ImprovedAnvil/scripts/shadra01.baf~
COMPILE ~ImprovedAnvil/scripts/shalt01.baf~
COMPILE ~ImprovedAnvil/scripts/SHANGALR.baf~
COMPILE ~ImprovedAnvil/scripts/SHCRYSTA.baf~
COMPILE ~ImprovedAnvil/scripts/SHOUTDLG.baf~
COMPILE ~ImprovedAnvil/scripts/spidvo01.baf~
COMPILE ~ImprovedAnvil/scripts/spwndead.baf~
COMPILE ~ImprovedAnvil/scripts/spwndrow.baf~
COMPILE ~ImprovedAnvil/scripts/spwngol.baf~
COMPILE ~ImprovedAnvil/scripts/spwnmind.baf~
COMPILE ~ImprovedAnvil/scripts/spwnmon.baf~
COMPILE ~ImprovedAnvil/scripts/spwnrak.baf~
COMPILE ~ImprovedAnvil/scripts/spwntrol.baf~
COMPILE ~ImprovedAnvil/scripts/spwnvamp.baf~
COMPILE ~ImprovedAnvil/scripts/spwnwolf.baf~
COMPILE ~ImprovedAnvil/scripts/sujon.baf~
COMPILE ~ImprovedAnvil/scripts/SUMSHT01.baf~
COMPILE ~ImprovedAnvil/scripts/SUMSHT02.baf~
COMPILE ~ImprovedAnvil/scripts/SUSTATUE.baf~
COMPILE ~ImprovedAnvil/scripts/TAHAZZ.baf~
COMPILE ~ImprovedAnvil/scripts/tanari.baf~
COMPILE ~ImprovedAnvil/scripts/tanari2.baf~
COMPILE ~ImprovedAnvil/scripts/TELSLAV.baf~
COMPILE ~ImprovedAnvil/scripts/TELWRAI.baf~
COMPILE ~ImprovedAnvil/scripts/TELTIEF1.baf~
COMPILE ~ImprovedAnvil/scripts/TELTIEF2.baf~
COMPILE ~ImprovedAnvil/scripts/teltief3.baf~
COMPILE ~ImprovedAnvil/scripts/tolger.baf~
COMPILE ~ImprovedAnvil/scripts/Trania01.baf~
COMPILE ~ImprovedAnvil/scripts/Trania02.baf~
COMPILE ~ImprovedAnvil/scripts/Trania03.baf~
COMPILE ~ImprovedAnvil/scripts/Trania04.baf~
COMPILE ~ImprovedAnvil/scripts/Trania05.baf~
COMPILE ~ImprovedAnvil/scripts/Trania06.baf~
COMPILE ~ImprovedAnvil/scripts/Trania07.baf~
COMPILE ~ImprovedAnvil/scripts/Trania08.baf~
COMPILE ~ImprovedAnvil/scripts/Trania09.baf~
COMPILE ~ImprovedAnvil/scripts/Trania10.baf~
COMPILE ~ImprovedAnvil/scripts/Trania11.baf~
COMPILE ~ImprovedAnvil/scripts/Trania12.baf~
COMPILE ~ImprovedAnvil/scripts/Trania13.baf~
COMPILE ~ImprovedAnvil/scripts/Trania14.baf~
COMPILE ~ImprovedAnvil/scripts/Trania15.baf~
COMPILE ~ImprovedAnvil/scripts/Trania16.baf~
COMPILE ~ImprovedAnvil/scripts/Trania17.baf~
COMPILE ~ImprovedAnvil/scripts/Trania18.baf~
COMPILE ~ImprovedAnvil/scripts/Trania19.baf~
COMPILE ~ImprovedAnvil/scripts/Trania20.baf~
COMPILE ~ImprovedAnvil/scripts/Trania21.baf~
COMPILE ~ImprovedAnvil/scripts/Trania22.baf~
COMPILE ~ImprovedAnvil/scripts/Trania23.baf~
COMPILE ~ImprovedAnvil/scripts/Trania24.baf~
COMPILE ~ImprovedAnvil/scripts/Trania25.baf~
COMPILE ~ImprovedAnvil/scripts/Trania26.baf~
COMPILE ~ImprovedAnvil/scripts/Trania27.baf~
COMPILE ~ImprovedAnvil/scripts/Trania28.baf~
COMPILE ~ImprovedAnvil/scripts/Trania29.baf~
COMPILE ~ImprovedAnvil/scripts/Trania30.baf~
COMPILE ~ImprovedAnvil/scripts/Trania31.baf~
COMPILE ~ImprovedAnvil/scripts/Trania32.baf~
COMPILE ~ImprovedAnvil/scripts/Trania33.baf~
COMPILE ~ImprovedAnvil/scripts/Trania34.baf~
COMPILE ~ImprovedAnvil/scripts/Trania35.baf~
COMPILE ~ImprovedAnvil/scripts/Trania36.baf~
COMPILE ~ImprovedAnvil/scripts/Trania37.baf~
COMPILE ~ImprovedAnvil/scripts/TRRAK01.baf~
COMPILE ~ImprovedAnvil/scripts/TRRAK02.baf~
COMPILE ~ImprovedAnvil/scripts/uddeath.baf~
COMPILE ~ImprovedAnvil/scripts/uddrow17.baf~
COMPILE ~ImprovedAnvil/scripts/uddrow18.baf~
COMPILE ~ImprovedAnvil/scripts/uddrow19.baf~
COMPILE ~ImprovedAnvil/scripts/udmaster.baf~
COMPILE ~ImprovedAnvil/scripts/UDSAC.baf~
COMPILE ~ImprovedAnvil/scripts/UMBHUL01.baf~
COMPILE ~ImprovedAnvil/scripts/useitem.baf~
COMPILE ~ImprovedAnvil/scripts/VALVSED.baf~
COMPILE ~ImprovedAnvil/scripts/VALYGX.baf~
COMPILE ~ImprovedAnvil/scripts/VAMEMI01.baf~
COMPILE ~ImprovedAnvil/scripts/VAMPIR01.baf~
COMPILE ~ImprovedAnvil/scripts/VVDEL.baf~
COMPILE ~ImprovedAnvil/scripts/WISH01.baf~
COMPILE ~ImprovedAnvil/scripts/wtasight.baf~
COMPILE ~ImprovedAnvil/scripts/zilmag01.baf~
COMPILE ~ImprovedAnvil/scripts/S!inqui1.baf~
COMPILE ~ImprovedAnvil/scripts/S!elepri.baf~

COPY_EXISTING ~BALDUR.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~GlobalTimerExpired("BardMoneyTime","GLOBAL")~ ~GlobalTimerExpired("BardMoneyTime","GLOBAL") GlobalLT("Iabardmoney","GLOBAL",15)~
  REPLACE_TEXTUALLY ~SetGlobalTimer("BardMoneyTime","GLOBAL",SEVEN_DAYS)~ ~SetGlobalTimer("BardMoneyTime","GLOBAL",SEVEN_DAYS) IncrementGlobal("Iabardmoney","GLOBAL",1)~
  REPLACE_TEXTUALLY ~GlobalTimerExpired("KPTaxTime","GLOBAL")~ ~GlobalTimerExpired("KPTaxTime","GLOBAL") GlobalLT("Iakptax","GLOBAL",20)~
  REPLACE_TEXTUALLY ~SetGlobalTimer("KPTaxTime","GLOBAL",SEVEN_DAYS)~ ~SetGlobalTimer("KPTaxTime","GLOBAL",SEVEN_DAYS) IncrementGlobal("Iakptax","GLOBAL",1)~
  REPLACE_TEXTUALLY ~GlobalTimerExpired("PGThievesReturn","GLOBAL")~ ~GlobalTimerExpired("PGThievesReturn","GLOBAL") GlobalLT("Iathiefmoney","GLOBAL",20)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~BCOFFIN.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~48500~ ~23500~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~AMULET.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~Global("AmuletStolen","GLOBAL",0)~ ~Global("AmuletStolen","GLOBAL",0) Global("MaeVarWork","GLOBAL",3)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~SPMUCK.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~ANYONE~ ~GOODCUTOFF~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~SPLETTTP.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~ANYONE~ ~GOODCUTOFF~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~EDWINX.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~WIZARD_MINOR_SPELL_DEFLECTION~ ~WIZARD_MINOR_GLOBE_OF_INVULNERABILITY~
  REPLACE_TEXTUALLY ~WIZARD_MINOR_SPELL_TURNING~ ~WIZARD_GLOBE_OF_INVULNERABILITY~
  REPLACE_TEXTUALLY ~!HasImmunityEffects(Myself)~ ~!CheckStatGT(Myself,0,MINORGLOBE)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~HAERDAX.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~WIZARD_MINOR_SPELL_DEFLECTION~ ~WIZARD_MINOR_GLOBE_OF_INVULNERABILITY~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_MINOR_SPELL_TURNING)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_SPELL_TURNING)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_FINGER_OF_DEATH)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_ABI_DALZIMS_HORRID_WILTING)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_SUMMON_NISHRUU)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_DEATH_SPELL)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_PRISMATIC_SPRAY)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_DEATH_FOG)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_MAZE)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_DISINTEGRATE)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_FLESH_TO_STONE)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_IMPROVED_HASTE)~ ~FALSE()~
  REPLACE_TEXTUALLY ~!HasImmunityEffects(Myself)~ ~!CheckStatGT(Myself,0,MINORGLOBE)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~JANX.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~WIZARD_MINOR_SPELL_DEFLECTION~ ~WIZARD_MINOR_GLOBE_OF_INVULNERABILITY~
  REPLACE_TEXTUALLY ~WIZARD_MINOR_SPELL_TURNING~ ~WIZARD_GLOBE_OF_INVULNERABILITY~
  REPLACE_TEXTUALLY ~!HasImmunityEffects(Myself)~ ~!CheckStatGT(Myself,0,MINORGLOBE)~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_MAZE)~ ~False()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~NPCMAGE1.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~WIZARD_MINOR_SPELL_DEFLECTION~ ~WIZARD_MINOR_GLOBE_OF_INVULNERABILITY~
  REPLACE_TEXTUALLY ~WIZARD_MINOR_SPELL_TURNING~ ~WIZARD_GLOBE_OF_INVULNERABILITY~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_DELETED)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_SPELL_THRUST)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_ABI_DALZIMS_HORRID_WILTING)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_SUMMON_NISHRUU)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_WARDING_WHIP)~ ~FALSE()~
  REPLACE_TEXTUALLY ~!General(LastSeenBy(Myself),HUMANOID)~ ~Allegiance(Myself,ENEMY)~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_MAZE)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_DISINTEGRATE)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_DEATH_SPELL)~ ~FALSE()~
  REPLACE_TEXTUALLY ~!HasImmunityEffects(Myself)~ ~!CheckStatGT(Myself,0,MINORGLOBE)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~SUELFW11.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~WIZARD_MINOR_SPELL_DEFLECTION~ ~WIZARD_MINOR_GLOBE_OF_INVULNERABILITY~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~DEMSUC.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~WIZARD_MINOR_SPELL_TURNING~ ~WIZARD_SPELL_TURNING~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~COWENF01.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~WIZARD_SPELL_DEFLECTION~ ~WIZARD_SPELL_TURNING~
  REPLACE_TEXTUALLY ~Wait(1)~ ~SetGlobal("cowledwizard","LOCALS",1)~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_POWER_WORD_SILENCE)~ ~!StateCheck(LastSeenBy(Myself),STATE_SILENCED) !HasItemEquiped("S!amul05",LastSeenBy(Myself)) !HasItemEquiped("S!amul06",LastSeenBy(Myself)) !StateCheck(LastSeenBy(Myself),STATE_IMPROVEDINVISIBILITY)~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_POWER_WORD_STUN)~ ~FALSE()~
  REPLACE_TEXTUALLY ~!Range(LastSeenBy(Myself),10)~ ~!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE7) !StateCheck(LastSeenBy(Myself),STATE_IMPROVEDINVISIBILITY)~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_FIREBALL)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_GREATER_MALISON)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_MIRROR_IMAGE)~ ~HaveSpell(WIZARD_MIRROR_IMAGE) !StateCheck(Myself,STATE_MIRRORIMAGE)~
  REPLACE_TEXTUALLY ~Spell(LastSeenBy(Myself),WIZARD_DEATH_SPELL)~ ~ReallyForceSpell(Myself,WIZARD_MIRROR_IMAGE) Spell(LastSeenBy(Myself),WIZARD_DEATH_SPELL)~
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_LIGHTNING_BOLT)~ ~FALSE()~
  REPLACE_TEXTUALLY ~HaveSpell(0)~ ~FALSE()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~GT012.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~WIZARD_DELAYED_BLAST_FIREBALL~ ~WIZARD_FIREBALL~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~TRNR006.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~WIZARD_DELAYED_BLAST_FIREBALL~ ~WIZARD_FIREBALL~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~VALYGAR.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~ChangeAIScript("useitem",GENERAL)~ ~ChangeAIScript("valygx",GENERAL)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~BAZDRA01.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~NumTimesTalkedToLT(2)~ ~NumTimesTalkedToLT(2) Global("Iapcastts","GLOBAL",0)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~DEGARD2.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_PROTECTION_FROM_NORMAL_WEAPONS)~ ~FALSE()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~FIGMAG10.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_PROTECTION_FROM_NORMAL_WEAPONS)~ ~Global("Iaskins","LOCALS",0) CheckStatLT(Myself,1,STONESKINS)~
  REPLACE_TEXTUALLY ~Spell(Myself,WIZARD_PROTECTION_FROM_NORMAL_WEAPONS)~ ~SetGlobal("Iaskins","LOCALS",1) SpellNoDec(Myself,WIZARD_STONE_SKIN)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~PPMAG01.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_PROTECTION_FROM_NORMAL_WEAPONS)~ ~Global("Iaskins","LOCALS",0) CheckStatLT(Myself,1,STONESKINS)~
  REPLACE_TEXTUALLY ~Spell(Myself,WIZARD_PROTECTION_FROM_NORMAL_WEAPONS)~ ~SetGlobal("Iaskins","LOCALS",1) SpellNoDec(Myself,WIZARD_STONE_SKIN)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~THIEFMAG.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_PROTECTION_FROM_NORMAL_WEAPONS)~ ~Global("Iaskins","LOCALS",0) CheckStatLT(Myself,1,STONESKINS)~
  REPLACE_TEXTUALLY ~Spell(Myself,WIZARD_PROTECTION_FROM_NORMAL_WEAPONS)~ ~SetGlobal("Iaskins","LOCALS",1) SpellNoDec(Myself,WIZARD_STONE_SKIN)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~TRFUED05.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~WIZARD_PROTECTION_FROM_NORMAL_WEAPONS~ ~WIZARD_STONE_SKIN~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~AR3012.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~Dead("GorTan2")~ ~False()~
  REPLACE_TEXTUALLY ~Dead("GorTan3")~ ~False()~
  REPLACE_TEXTUALLY ~Dead("GorTan4")~ ~False()~
  REPLACE_TEXTUALLY ~Dead("GorTan5")~ ~False()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~AR3013.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~Dead("GorBat2")~ ~False()~
  REPLACE_TEXTUALLY ~Dead("GorBat3")~ ~False()~
  REPLACE_TEXTUALLY ~Dead("GorBat4")~ ~False()~
  REPLACE_TEXTUALLY ~Dead("GorBat5")~ ~False()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~AR3016.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~Global("SetDifficulty","AR3016",0)~ ~Global("SetDifficulty","AR3016",0) False()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~AR4000.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~Dead("Illasera")~ ~Dead("Illasera") CombatCounter(0)~
  REPLACE_TEXTUALLY ~SetGlobal("HeadsSave","AR4000",2)~ ~SetGlobal("HeadsSave","AR4000",2) SetGlobal("Iap1nr","GLOBAL",0) SetGlobal("Iap2nr","GLOBAL",0) SetGlobal("Iap3nr","GLOBAL",0) SetGlobal("Iap4nr","GLOBAL",0) SetGlobal("Iap5nr","GLOBAL",0) SetGlobal("Iap6nr","GLOBAL",0) SetGlobal("Iap1nb","GLOBAL",0) SetGlobal("Iap2nb","GLOBAL",0) SetGlobal("Iap3nb","GLOBAL",0) SetGlobal("Iap4nb","GLOBAL",0) SetGlobal("Iap5nb","GLOBAL",0) SetGlobal("Iap6nb","GLOBAL",0) ActionOverride(Player1,ReallyForceSpellRES("SPINI22",Myself))~
  REPLACE_TEXTUALLY ~DWCSW1H01~ ~DWSW1H01~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~TSIGHT.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~ForceSpell(Myself,CLERIC_TRUE_SIGHT)~ ~SetGlobalTimer("truesight","LOCALS",60) ReallyForceSpell(Myself,WIZARD_TRUE_SIGHT)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~AR5203.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~Delay(6)~ ~False()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~SHOUTPRO.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~See(Player1)~ ~See(Player1) Global("Iapcastts","GLOBAL",0)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~SARMEL01.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~GlobalGT("DeathOfGromnir","GLOBAL",0)~ ~Global("DeathOfGromnir","GLOBAL",1)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~GORGUA01.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~Global("AuruTimeStop","LOCALS",0)~ ~Global("AuruTimeStop","LOCALS",0) False()~
  REPLACE_TEXTUALLY ~!HasBounceEffects(LastSeenBy(Myself))~ ~!HasBounceEffects(LastSeenBy(Myself)) !StateCheck(LastSeenBy(Myself),STATE_CHARMED)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~CUT61A.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~ReputationInc(-2)~ ~ReputationInc(-18)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~SAHREBEL.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~Global("PrinceArrives","AR2300",1)~ ~Global("PrinceArrives","AR2300",1) !HasItem("halb09b",Myself)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~AESGAR.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~SpellNoDec(LastSeenBy(Myself),WIZARD_MAZE)~ ~SpellNoDec(LastSeenBy(Myself),WIZARD_ABI_DALZIMS_HORRID_WILTING)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~AMLICH02.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~SpellNoDec(LastSeenBy(Myself),WIZARD_MAZE)~ ~SpellNoDec(LastSeenBy(Myself),WIZARD_ABI_DALZIMS_HORRID_WILTING)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~BEHHIV01.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~SpellNoDec(LastSeenBy(Myself),WIZARD_MAZE)~ ~SpellNoDec(LastSeenBy(Myself),WIZARD_ABI_DALZIMS_HORRID_WILTING)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~CMACL20A.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_MAZE)~ ~False()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~CMAGE20B.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_MAZE)~ ~False()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~EDWINX.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_MAZE)~ ~False()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~FIGMAG16.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_MAZE)~ ~False()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~FLAYER01.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~HPPercentLT(LastSeenBy(Myself),25)~ ~False()~
  REPLACE_TEXTUALLY ~Delay(12)~ ~Delay(12) !HasBounceEffects(LastSeenBy(Myself))~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~GORCAMB2.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_MAZE)~ ~False()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~GORMIND.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~HPPercentLT(LastSeenBy(Myself),25)~ ~False()~
  REPLACE_TEXTUALLY ~Delay(12)~ ~Delay(12) !HasBounceEffects(LastSeenBy(Myself))~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~GORSTAM.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_MAZE)~ ~False()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~JATERMIN.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_MAZE)~ ~False()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~MAGE2.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~HaveSpell(WIZARD_MAZE)~ ~False()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~MELISS02.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~SpellNoDec(LastSeenBy(Myself),WIZARD_MAZE)~ ~SpellNoDec(LastSeenBy(Myself),WIZARD_ABI_DALZIMS_HORRID_WILTING)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~MELISS03.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~SpellNoDec(LastSeenBy(Myself),WIZARD_MAZE)~ ~SpellNoDec(LastSeenBy(Myself),WIZARD_ABI_DALZIMS_HORRID_WILTING)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~GITHFGMG.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~Global("gtMaze","LOCALS",0)~ ~Global("gtMaze","LOCALS",0) False()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~INP1IABS.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~Global("Attacked","LOCALS",0)~ ~Global("Attacked","LOCALS",0) Global("Iapcastts","GLOBAL",0)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~INP1IVBS.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~NumTimesTalkedTo(0)~ ~NumTimesTalkedTo(0) Global("Iapcastts","GLOBAL",0)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~INP1IVSG.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~NumTimesTalkedTo(0)~ ~NumTimesTalkedTo(0) Global("Iapcastts","GLOBAL",0)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~INP1NRSG.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~NumTimesTalkedTo(0)~ ~NumTimesTalkedTo(0) Global("Iapcastts","GLOBAL",0)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~INPA20SG.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~Global("NearDeath","LOCALS",0)~ ~Global("NearDeath","LOCALS",0) Global("Iapcastts","GLOBAL",0)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~INPAIASG.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~Global("Attacked","LOCALS",0)~ ~Global("Attacked","LOCALS",0) Global("Iapcastts","GLOBAL",0)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~INPAIV10.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~NumTimesTalkedTo(0)~ ~NumTimesTalkedTo(0) Global("Iapcastts","GLOBAL",0)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~INPAIVSG.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~NumTimesTalkedTo(0)~ ~NumTimesTalkedTo(0) Global("Iapcastts","GLOBAL",0)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~INPANHSG.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~NumTimesTalkedTo(0)~ ~NumTimesTalkedTo(0) Global("Iapcastts","GLOBAL",0)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~INPANR10.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~NumTimesTalkedTo(0)~ ~NumTimesTalkedTo(0) Global("Iapcastts","GLOBAL",0)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~INPANRSG.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~NumTimesTalkedTo(0)~ ~NumTimesTalkedTo(0) Global("Iapcastts","GLOBAL",0)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~INPANRWK.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~NumTimesTalkedTo(0)~ ~NumTimesTalkedTo(0) Global("Iapcastts","GLOBAL",0)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~INPARP10.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~NumTimesTalkedTo(0)~ ~NumTimesTalkedTo(0) Global("Iapcastts","GLOBAL",0)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~INPARPSG.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~NumTimesTalkedTo(0)~ ~NumTimesTalkedTo(0) Global("Iapcastts","GLOBAL",0)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~PPVAMP.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~HPLT(Myself,10)~ ~FALSE()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~PPVAMPIR.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~HPLT(Myself,10)~ ~FALSE()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~SARVAM01.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~HPLT(Myself,10)~ ~FALSE()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~SARVAM02.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~HPLT(Myself,10)~ ~FALSE()~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~HGNYMPH.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~Global("charmonce","LOCALS",0)~ ~Global("charmonce","LOCALS",0) !StateCheck(LastSeenBy(Myself),STATE_CHARMED) !StateCheck(LastSeenBy(Myself),STATE_INVISIBLE) !StateCheck(LastSeenBy(Myself),STATE_IMPROVEDINVISIBILITY)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~NALMISS.BCS~ ~override~
  DECOMPILE_BCS_TO_BAF
  REPLACE_TEXTUALLY ~!StateCheck(LastSeenBy(Myself),STATE_CHARMED)~ ~!StateCheck(LastSeenBy(Myself),STATE_CHARMED) !StateCheck(LastSeenBy(Myself),STATE_INVISIBLE) !StateCheck(LastSeenBy(Myself),STATE_IMPROVEDINVISIBILITY)~
  COMPILE_BAF_TO_BCS

COPY_EXISTING ~GTLB.bcs~ ~override/GTGW.bcs~

COPY_EXISTING ~GTFB.bcs~ ~override/GTST.bcs~

COPY_EXISTING ~GT023.bcs~ ~override/GT018.bcs~

COPY_EXISTING ~mage12d.bcs~ ~override/mage12c.bcs~

COPY_EXISTING ~mage12d.bcs~ ~override/mage12e.bcs~

COPY_EXISTING ~mage16a.bcs~ ~override/gpmage1.bcs~

COPY_EXISTING ~mage20a.bcs~ ~override/hellgen.bcs~

// Patching areas //

EXTEND_BOTTOM ~AR0028.BCS~ ~ImprovedAnvil\BAF\AR0028.BAF~
EXTEND_BOTTOM ~AR0329.BCS~ ~ImprovedAnvil\BAF\AR0329.BAF~
EXTEND_BOTTOM ~AR0410.BCS~ ~ImprovedAnvil\BAF\AR0410.BAF~
EXTEND_BOTTOM ~AR0414.BCS~ ~ImprovedAnvil\BAF\AR0414.BAF~
EXTEND_BOTTOM ~AR0419.BCS~ ~ImprovedAnvil\BAF\AR0419.BAF~
EXTEND_BOTTOM ~AR0420.BCS~ ~ImprovedAnvil\BAF\AR0420.BAF~
EXTEND_BOTTOM ~AR0500.BCS~ ~ImprovedAnvil\BAF\AR0500.BAF~
EXTEND_BOTTOM ~AR0511.BCS~ ~ImprovedAnvil\BAF\AR0511.BAF~
EXTEND_BOTTOM ~AR0523.BCS~ ~ImprovedAnvil\BAF\AR0523.BAF~
EXTEND_BOTTOM ~AR0602.BCS~ ~ImprovedAnvil\BAF\AR0602.BAF~
EXTEND_BOTTOM ~AR0607.BCS~ ~ImprovedAnvil\BAF\AR0607.BAF~
EXTEND_BOTTOM ~AR0711.BCS~ ~ImprovedAnvil\BAF\AR0711.BAF~
EXTEND_BOTTOM ~AR0803.BCS~ ~ImprovedAnvil\BAF\AR0803.BAF~
EXTEND_BOTTOM ~AR0804.BCS~ ~ImprovedAnvil\BAF\AR0804.BAF~
EXTEND_BOTTOM ~AR0906.BCS~ ~ImprovedAnvil\BAF\AR0906.BAF~
EXTEND_BOTTOM ~AR1000.BCS~ ~ImprovedAnvil\BAF\AR1000.BAF~
EXTEND_BOTTOM ~AR1008.BCS~ ~ImprovedAnvil\BAF\AR1008.BAF~
EXTEND_BOTTOM ~AR1204.BCS~ ~ImprovedAnvil\BAF\AR1204.BAF~
EXTEND_BOTTOM ~AR1402.BCS~ ~ImprovedAnvil\BAF\AR1402.BAF~
EXTEND_BOTTOM ~AR1512.BCS~ ~ImprovedAnvil\BAF\AR1512.BAF~
EXTEND_BOTTOM ~AR1513.BCS~ ~ImprovedAnvil\BAF\AR1513.BAF~
EXTEND_BOTTOM ~AR1514.BCS~ ~ImprovedAnvil\BAF\AR1514.BAF~
EXTEND_BOTTOM ~AR1515.BCS~ ~ImprovedAnvil\BAF\AR1515.BAF~
EXTEND_BOTTOM ~AR1902.BCS~ ~ImprovedAnvil\BAF\AR1902.BAF~
EXTEND_BOTTOM ~AR2009.BCS~ ~ImprovedAnvil\BAF\AR2009.BAF~
EXTEND_BOTTOM ~AR2100.BCS~ ~ImprovedAnvil\BAF\AR2100.BAF~
EXTEND_BOTTOM ~AR2209.BCS~ ~ImprovedAnvil\BAF\AR2209.BAF~
EXTEND_BOTTOM ~AR2300.BCS~ ~ImprovedAnvil\BAF\AR2300.BAF~
EXTEND_BOTTOM ~AR2101.BCS~ ~ImprovedAnvil\BAF\AR2101.BAF~
EXTEND_BOTTOM ~AR2602.BCS~ ~ImprovedAnvil\BAF\AR2602.BAF~
EXTEND_BOTTOM ~AR2800.BCS~ ~ImprovedAnvil\BAF\AR2800.BAF~
EXTEND_BOTTOM ~AR2802.BCS~ ~ImprovedAnvil\BAF\AR2802.BAF~
EXTEND_BOTTOM ~AR3016.BCS~ ~ImprovedAnvil\BAF\AR3016.BAF~
EXTEND_BOTTOM ~AR0701.BCS~ ~ImprovedAnvil\BAF\AR0701.BAF~
EXTEND_BOTTOM ~AR0809.BCS~ ~ImprovedAnvil\BAF\AR0809.BAF~
EXTEND_BOTTOM ~AR3001.BCS~ ~ImprovedAnvil\BAF\AR3001.BAF~
EXTEND_BOTTOM ~AR3012.BCS~ ~ImprovedAnvil\BAF\AR3012.BAF~
EXTEND_BOTTOM ~AR3013.BCS~ ~ImprovedAnvil\BAF\AR3013.BAF~
EXTEND_BOTTOM ~AR3021.BCS~ ~ImprovedAnvil\BAF\AR3021.BAF~
EXTEND_BOTTOM ~AR4000.BCS~ ~ImprovedAnvil\BAF\AR4000.BAF~
EXTEND_BOTTOM ~AR4500.BCS~ ~ImprovedAnvil\BAF\AR4500.BAF~
EXTEND_BOTTOM ~AR5014.BCS~ ~ImprovedAnvil\BAF\AR5014.BAF~
EXTEND_BOTTOM ~AR6103.BCS~ ~ImprovedAnvil\BAF\AR6103.BAF~
EXTEND_BOTTOM ~AR6109.BCS~ ~ImprovedAnvil\BAF\AR6109.BAF~
EXTEND_BOTTOM ~AR6110.BCS~ ~ImprovedAnvil\BAF\AR6110.BAF~
EXTEND_BOTTOM ~AR6300.BCS~ ~ImprovedAnvil\BAF\AR6300.BAF~
EXTEND_BOTTOM ~AR0201.BCS~ ~ImprovedAnvil\BAF\AR0201.BAF~
EXTEND_BOTTOM ~BOTSMITH.BCS~ ~ImprovedAnvil\BAF\BOTSMITH.BAF~
EXTEND_BOTTOM ~LASSAL02.BCS~ ~ImprovedAnvil\BAF\LASSAL02.BAF~
EXTEND_BOTTOM ~RAYIC.BCS~ ~ImprovedAnvil\BAF\RAYIC.BAF~
EXTEND_BOTTOM ~SARVAM01.BCS~ ~ImprovedAnvil\BAF\SARVAM01.BAF~
EXTEND_BOTTOM ~TROLGI01.BCS~ ~ImprovedAnvil\BAF\TROLGI01.BAF~
EXTEND_TOP ~AERI25.BCS~ ~ImprovedAnvil\BAF\AERI25.BAF~
EXTEND_TOP ~JAHE25.BCS~ ~ImprovedAnvil\BAF\AERI25.BAF~
EXTEND_TOP ~CELICH.BCS~ ~ImprovedAnvil\BAF\CELICH.BAF~
EXTEND_TOP ~CERN25.BCS~ ~ImprovedAnvil\BAF\AERI25.BAF~
EXTEND_TOP ~EDWI25.BCS~ ~ImprovedAnvil\BAF\AERI25.BAF~
EXTEND_TOP ~VICO25.BCS~ ~ImprovedAnvil\BAF\AERI25.BAF~
EXTEND_TOP ~IMOE25.BCS~ ~ImprovedAnvil\BAF\AERI25.BAF~
EXTEND_TOP ~VALY25.BCS~ ~ImprovedAnvil\BAF\AERI25.BAF~
EXTEND_TOP ~NALI25.BCS~ ~ImprovedAnvil\BAF\AERI25.BAF~
EXTEND_TOP ~MAZZ25.BCS~ ~ImprovedAnvil\BAF\AERI25.BAF~
EXTEND_TOP ~MINS25.BCS~ ~ImprovedAnvil\BAF\AERI25.BAF~
EXTEND_TOP ~KORG25.BCS~ ~ImprovedAnvil\BAF\AERI25.BAF~
EXTEND_TOP ~KELD25.BCS~ ~ImprovedAnvil\BAF\AERI25.BAF~
EXTEND_TOP ~JAN25.BCS~ ~ImprovedAnvil\BAF\AERI25.BAF~
EXTEND_TOP ~HAER25.BCS~ ~ImprovedAnvil\BAF\AERI25.BAF~
EXTEND_TOP ~ANOM25.BCS~ ~ImprovedAnvil\BAF\AERI25.BAF~
EXTEND_TOP ~SAREV25.BCS~ ~ImprovedAnvil\BAF\AERI25.BAF~
EXTEND_TOP ~AR0204.BCS~ ~ImprovedAnvil\BAF\AR0204.BAF~
EXTEND_TOP ~AR0205.BCS~ ~ImprovedAnvil\BAF\AR0205.BAF~
EXTEND_TOP ~AR0308.BCS~ ~ImprovedAnvil\BAF\AR0308.BAF~
EXTEND_TOP ~AR0404.BCS~ ~ImprovedAnvil\BAF\AR0404.BAF~
EXTEND_TOP ~AR0406.BCS~ ~ImprovedAnvil\BAF\AR0406.BAF~
EXTEND_TOP ~AR0411.BCS~ ~ImprovedAnvil\BAF\AR0411.BAF~
EXTEND_TOP ~AR0413.BCS~ ~ImprovedAnvil\BAF\AR0413.BAF~
EXTEND_TOP ~AR0516.BCS~ ~ImprovedAnvil\BAF\AR0516.BAF~
EXTEND_TOP ~AR0802.BCS~ ~ImprovedAnvil\BAF\AR0802.BAF~
EXTEND_TOP ~AR0808.BCS~ ~ImprovedAnvil\BAF\AR0808.BAF~
EXTEND_TOP ~AR0903.BCS~ ~ImprovedAnvil\BAF\AR0903.BAF~
EXTEND_TOP ~AR1004.BCS~ ~ImprovedAnvil\BAF\AR1004.BAF~
EXTEND_TOP ~AR1200.BCS~ ~ImprovedAnvil\BAF\AR1200.BAF~
EXTEND_TOP ~AR1301.BCS~ ~ImprovedAnvil\BAF\AR1301.BAF~
EXTEND_TOP ~AR1303.BCS~ ~ImprovedAnvil\BAF\AR1303.BAF~
EXTEND_TOP ~AR1304.BCS~ ~ImprovedAnvil\BAF\AR1304.BAF~
EXTEND_TOP ~AR1401.BCS~ ~ImprovedAnvil\BAF\AR1401.BAF~
EXTEND_TOP ~AR1404.BCS~ ~ImprovedAnvil\BAF\AR1404.BAF~
EXTEND_TOP ~AR1511.BCS~ ~ImprovedAnvil\BAF\AR1511.BAF~
EXTEND_TOP ~AR1700.BCS~ ~ImprovedAnvil\BAF\AR1700.BAF~
EXTEND_TOP ~AR1901.BCS~ ~ImprovedAnvil\BAF\AR1901.BAF~
EXTEND_TOP ~AR1905.BCS~ ~ImprovedAnvil\BAF\AR1905.BAF~
EXTEND_TOP ~AR2207.BCS~ ~ImprovedAnvil\BAF\AR2207.BAF~
EXTEND_TOP ~AR2400.BCS~ ~ImprovedAnvil\BAF\AR2400.BAF~
EXTEND_TOP ~AR2803.BCS~ ~ImprovedAnvil\BAF\AR2803.BAF~
EXTEND_TOP ~AR2806.BCS~ ~ImprovedAnvil\BAF\AR2806.BAF~
EXTEND_TOP ~AR2809.BCS~ ~ImprovedAnvil\BAF\AR2809.BAF~
EXTEND_TOP ~AR3005.BCS~ ~ImprovedAnvil\BAF\AR3005.BAF~
EXTEND_TOP ~AR3007.BCS~ ~ImprovedAnvil\BAF\AR3007.BAF~
EXTEND_TOP ~AR3015.BCS~ ~ImprovedAnvil\BAF\AR3015.BAF~
EXTEND_TOP ~AR3019.BCS~ ~ImprovedAnvil\BAF\AR3019.BAF~
EXTEND_TOP ~AR3024.BCS~ ~ImprovedAnvil\BAF\AR3024.BAF~
EXTEND_TOP ~AR3025.BCS~ ~ImprovedAnvil\BAF\AR3025.BAF~
EXTEND_TOP ~AR5002.BCS~ ~ImprovedAnvil\BAF\AR5002.BAF~
EXTEND_TOP ~AR5006.BCS~ ~ImprovedAnvil\BAF\AR5006.BAF~
EXTEND_TOP ~AR5202.BCS~ ~ImprovedAnvil\BAF\AR5202.BAF~
EXTEND_TOP ~AR5203.BCS~ ~ImprovedAnvil\BAF\AR5203.BAF~
EXTEND_TOP ~AR6000.BCS~ ~ImprovedAnvil\BAF\AR6000.BAF~
EXTEND_TOP ~AR6005.BCS~ ~ImprovedAnvil\BAF\AR6005.BAF~
EXTEND_TOP ~AR6102.BCS~ ~ImprovedAnvil\BAF\AR6102.BAF~
EXTEND_TOP ~BALDUR.BCS~ ~ImprovedAnvil\BAF\BALDUR.BAF~
EXTEND_TOP ~BALDUR25.BCS~ ~ImprovedAnvil\BAF\BALDUR25.BAF~
EXTEND_TOP ~C6BRUEN2.BCS~ ~ImprovedAnvil\BAF\C6BRUEN2.BAF~
EXTEND_TOP ~C6CATTI2.BCS~ ~ImprovedAnvil\BAF\C6BRUEN2.BAF~
EXTEND_TOP ~C6DRIZZ2.BCS~ ~ImprovedAnvil\BAF\C6DRIZZ2.BAF~
EXTEND_TOP ~C6GUEN2.BCS~ ~ImprovedAnvil\BAF\C6BRUEN2.BAF~
EXTEND_TOP ~C6REGIS2.BCS~ ~ImprovedAnvil\BAF\C6BRUEN2.BAF~
EXTEND_TOP ~C6WULF2.BCS~ ~ImprovedAnvil\BAF\C6BRUEN2.BAF~
EXTEND_TOP ~KPFORGE.BCS~ ~ImprovedAnvil\BAF\KPFORGE.BAF~
EXTEND_TOP ~DGDRU01.BCS~ ~ImprovedAnvil\BAF\DGDRU01.BAF~
EXTEND_TOP ~DGFIG01.BCS~ ~ImprovedAnvil\BAF\DGFIG01.BAF~
EXTEND_TOP ~DGMAG01.BCS~ ~ImprovedAnvil\BAF\DGMAG01.BAF~
EXTEND_TOP ~DS71203.BCS~ ~ImprovedAnvil\BAF\DS71203.BAF~
EXTEND_TOP ~FURNACE1.BCS~ ~ImprovedAnvil\BAF\FURNACE1.BAF~
EXTEND_TOP ~GORMAD1.BCS~ ~ImprovedAnvil\BAF\GORMAD1.BAF~
EXTEND_TOP ~ITPPLANE.BCS~ ~ImprovedAnvil\BAF\ITPPLANE.BAF~
EXTEND_TOP ~NALIA.BCS~ ~ImprovedAnvil\BAF\NALIA.BAF~
EXTEND_TOP ~OBSGOL.BCS~ ~ImprovedAnvil\BAF\OBSGOL.BAF~
EXTEND_TOP ~OBSPOOL.BCS~ ~ImprovedAnvil\BAF\OBSPOOL.BAF~
EXTEND_TOP ~SAERKX.BCS~ ~ImprovedAnvil\BAF\SAERKX.BAF~
EXTEND_TOP ~SUAVATAR.BCS~ ~ImprovedAnvil\BAF\SUAVATAR.BAF~
EXTEND_TOP ~UDMAGE.BCS~ ~ImprovedAnvil\BAF\UDMAGE.BAF~
EXTEND_TOP ~KAYL1.BCS~ ~ImprovedAnvil\BAF\KAYL1.BAF~

COPY_EXISTING ~ar0021.are~ ~override/ar0021.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0082" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0082.are~ ~override/ar0082.are~
  WRITE_ASCII 0x94 ~ar0082~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0021" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0082.BCS~ ~ImprovedAnvil\BAF\AR0082.BAF~

COPY_EXISTING ~ar0300.are~ ~override/ar0300.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran0334" = 0) OR
	     ("%iname%" STRING_COMPARE_CASE "Tran0301" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0300.BCS~ ~ImprovedAnvil\BAF\AR0300.BAF~

COPY_EXISTING ~ar0301.are~ ~override/ar0301.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran0301" = 0) OR
	     ("%iname%" STRING_COMPARE_CASE "Tran0300" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR0301.BCS~ ~ImprovedAnvil\BAF\AR0301.BAF~

COPY_EXISTING ~ar0302.are~ ~override/ar0302.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0301" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0334.are~ ~override/ar0334.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0300" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR0334.BCS~ ~ImprovedAnvil\BAF\AR0334.BAF~

COPY_EXISTING ~ar0503.are~ ~override/ar0503.are~
  WRITE_ASCII 0x94 ~ar0503~ #8 // Area Script reference
EXTEND_BOTTOM ~AR0503.BCS~ ~ImprovedAnvil\BAF\AR0503.BAF~

COPY_EXISTING ~ar1203.are~ ~override/ar1203.are~
  WRITE_ASCII 0x94 ~ar1203~ #8 // Area Script reference
EXTEND_BOTTOM ~AR1203.BCS~ ~ImprovedAnvil\BAF\AR1203.BAF~

COPY_EXISTING ~ar1201.are~ ~override/ar1201.are~
  WRITE_ASCII 0x94 ~ar1201~ #8 // Area Script reference
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!mistva~ #8
  WRITE_ASCII ("%interroffset%" + 88) ~S!misth1~ #8
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 132) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 132) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR1201.BCS~ ~ImprovedAnvil\BAF\AR1201.BAF~

COPY_EXISTING ~ar1610.are~ ~override/ar1610.are~
  WRITE_ASCII 0x94 ~ar1610~ #8 // Area Script reference
EXTEND_BOTTOM ~AR1610.BCS~ ~ImprovedAnvil\BAF\AR1610.BAF~

COPY_EXISTING ~AR0201.ARE~ ~override/AR0201.ARE~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!mummr~ #8
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran0206a" = 0) OR
	    ("%iname%" STRING_COMPARE_CASE "Tran0206b" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDPIRATE~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0202.are~ ~override/ar0202.are~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~mistva01~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDGNOLL~ #8
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0204.are~ ~override/ar0204.are~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 5" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDPIRATE~ #8
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 44) ~RDKEEP~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSAHUA~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDKEEP~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR0205.ARE~ ~override/AR0205.ARE~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!behgau~ #8

COPY_EXISTING ~AR0206.ARE~ ~override/AR0206.ARE~
  WRITE_ASCII 0x94 ~ar0206~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran0201a" = 0) OR
	    ("%iname%" STRING_COMPARE_CASE "Tran0201b" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDPIRATE~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (15)
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "High level trap" = 0) BEGIN
    WRITE_ASCII ("%ioffset%" + ("%it%" * 196) + 124) ~S!ar206~ #8
    SET "it" = "%icount%"
   END
  "it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0206.BCS~ ~ImprovedAnvil\BAF\AR0206.BAF~

COPY_EXISTING ~ar0303.are~ ~override/ar0303.are~
  WRITE_ASCII 0x94 ~ar0303~ #8 // Area Script reference
EXTEND_BOTTOM ~AR0303.BCS~ ~ImprovedAnvil\BAF\AR0303.BAF~

COPY_EXISTING ~ar0310.are~ ~override/ar0310.are~
  WRITE_ASCII 0x94 ~ar0310~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0313" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0310.BCS~ ~ImprovedAnvil\BAF\AR0310.BAF~

COPY_EXISTING ~ar0313.are~ ~override/ar0313.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0310" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0316.are~ ~override/ar0316.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0317" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0317.are~ ~override/ar0317.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0316" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0317.BCS~ ~ImprovedAnvil\BAF\AR0317.BAF~

COPY_EXISTING ~ar0325.are~ ~override/ar0325.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0326" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0326.are~ ~override/ar0326.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0325" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0326.BCS~ ~ImprovedAnvil\BAF\AR0326.BAF~

COPY_EXISTING ~ar0400.are~ ~override/ar0400.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0417" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0404.ARE~ ~override/ar0404.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 132) 1
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0405.are~ ~override/ar0405.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0404" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0405.BCS~ ~ImprovedAnvil\BAF\AR0405.BAF~

COPY_EXISTING ~ar0411.are~ ~override/ar0411.are~
 READ_SHORT 0x5A "icount"
 READ_LONG 0x5C "ioffset"
 SET "it" = 0
 WHILE ("%it%" < "%icount%") BEGIN
  READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (14)
  PATCH_IF ("%iname%" STRING_COMPARE_CASE "Info Trigger 4" = 0) BEGIN
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 52) 8
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 100) (BNOT 0)
   WRITE_ASCII ("%ioffset%" + ("%it%" * 196) + 124) ~S!time~
   SET "it" = "%icount%"
  END
 "it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR0414.ARE~ ~override/AR0414.ARE~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!maurez~ #8

COPY_EXISTING ~ar0417.are~ ~override/ar0417.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0400" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0417.BCS~ ~ImprovedAnvil\BAF\AR0417.BAF~

COPY_EXISTING ~AR0500.ARE~ ~override/AR0500.ARE~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran0506" = 0) OR
	    ("%iname%" STRING_COMPARE_CASE "Tran0530" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR0506.ARE~ ~override/AR0506.ARE~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran0500a" = 0) OR
	    ("%iname%" STRING_COMPARE_CASE "Tran0500b" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0506.BCS~ ~ImprovedAnvil\BAF\AR0506.BAF~

COPY_EXISTING ~AR0511.ARE~ ~override/AR0511.ARE~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran0522" = 0) OR
	    ("%iname%" STRING_COMPARE_CASE "Tran0509" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR0516.ARE~ ~override/AR0516.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!phounr~ #8
  WRITE_ASCII ("%interroffset%" + 80) ~rdspider~ #8
  READ_SHORT ("%interroffset%" + 152) "crecount"
  PATCH_IF ("%crecount%" < 2) BEGIN
   WRITE_SHORT ("%interroffset%" + 152) 2
END

COPY_EXISTING ~ar0525.are~ ~override/ar0525.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0526" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0526.are~ ~override/ar0526.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0525" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0526.BCS~ ~ImprovedAnvil\BAF\AR0526.BAF~

COPY_EXISTING ~ar0530.are~ ~override/ar0530.are~
  READ_LONG 0xBC "song-offset"
  WRITE_LONG "%song-offset%" 0
  WRITE_LONG ("%song-offset%" + 4) 0
  WRITE_LONG ("%song-offset%" + 12) 51
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0500" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0530.BCS~ ~ImprovedAnvil\BAF\AR0530.BAF~

COPY_EXISTING ~AR0602.ARE~ ~override/AR0602.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 9" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (14)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 11" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~MEPEAR01~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (14)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 12" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 44) ~MEPEAR01~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 8" = 0)) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (14)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 13" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR0603.ARE~ ~override/AR0603.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!SPIDE3~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0701.are~ ~override/ar0701.are~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 7" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!mistva~ #8
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0709.are~ ~override/ar0709.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0712" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0705.are~ ~override/ar0705.are~
 READ_SHORT 0x5A "icount"
 READ_LONG 0x5C "ioffset"
 SET "it" = 0
 WHILE ("%it%" < "%icount%") BEGIN
  READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (15)
  PATCH_IF ("%iname%" STRING_COMPARE_CASE "Trigger Point 4" = 0) BEGIN
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 52) 28
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 100) (BNOT 0)
   WRITE_ASCII ("%ioffset%" + ("%it%" * 196) + 124) ~Trania20~
   SET "it" = "%icount%"
  END
 "it" = "%it%" + 1
END
EXTEND_TOP ~AR0705.BCS~ ~ImprovedAnvil\BAF\AR0705.BAF~

COPY_EXISTING ~ar0712.are~ ~override/ar0712.are~
  WRITE_ASCII 0x94 ~ar0712~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0709" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR0712.BCS~ ~ImprovedAnvil\BAF\AR0712.BAF~

COPY_EXISTING ~ar0800.are~ ~override/ar0800.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0806" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR0801.ARE~ ~override/AR0801.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSahua~ #8
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 44) ~RDPirate~ #8
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR0802.ARE~ ~override/AR0802.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 80) ~S!mummr~ #8
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDGNOLL~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDPirate~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar0806.are~ ~override/ar0806.are~
  WRITE_ASCII 0x94 ~ar0806~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0800" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR0806.BCS~ ~ImprovedAnvil\BAF\AR0806.BAF~

COPY_EXISTING ~AR0808.ARE~ ~override/AR0808.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!skeld~ #8
  READ_LONG 0x54 "actoroffset"
  READ_SHORT 0x58 "actorcount"
  FOR (i = 0; i < "%actorcount%"; i = i+1) BEGIN
   READ_ASCII ("%actoroffset%" + 272 * "%i%" + 128) "creresref"
   PATCH_IF (("%creresref%" STRING_COMPARE_CASE "MISTVA01") = 0) BEGIN
    WRITE_ASCII ("%actoroffset%" + 272 * "%i%" + 96) "" #8
   END
END

COPY_EXISTING ~AR0907.ARE~ ~override/AR0907.are~
READ_SHORT 0x5A "icount"
READ_LONG 0x5C "ioffset"
SET "it" = 0
WHILE ("%it%" < "%icount%") BEGIN
 READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
 PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran0906a" = 0) OR
	  ("%iname%" STRING_COMPARE_CASE "Tran0906b" = 0)) BEGIN
  READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
  WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
  READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
  WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
 END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR0907.BCS~ ~ImprovedAnvil\BAF\AR0907.BAF~

COPY_EXISTING ~ar1100.are~ ~override/ar1100.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran1106" = 0) OR
             ("%iname%" STRING_COMPARE_CASE "Tran1103" = 0) OR
             ("%iname%" STRING_COMPARE_CASE "Tran1107" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!shador~ #8
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR1100.BCS~ ~ImprovedAnvil\BAF\AR1100.BAF~

COPY_EXISTING ~ar1101.are~ ~override/ar1101.are~
  WRITE_ASCII 0x94 ~ar1101~ #8 // Area Script reference
EXTEND_BOTTOM ~AR1101.BCS~ ~ImprovedAnvil\BAF\AR1101.BAF~

COPY_EXISTING ~ar1103.are~ ~override/ar1103.are~
  WRITE_ASCII 0x94 ~ar1103~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran1100" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR1103.BCS~ ~ImprovedAnvil\BAF\AR1103.BAF~

COPY_EXISTING ~ar1106.are~ ~override/ar1106.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran1100" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR1106.BCS~ ~ImprovedAnvil\BAF\AR1106.BAF~

COPY_EXISTING ~ar1202.are~ ~override/ar1202.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!shadfi~ #8
  WRITE_ASCII ("%interroffset%" + 80) ~S!skeld~ #8
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran1201" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_LONG 0xA4 "dcount"
  READ_LONG 0xA8 "doffset"
  SET "it" = 0
  WHILE ("%it%" < "%dcount%") BEGIN
   READ_ASCII ("%doffset%" + "%it%" * 200) "dname"
   PATCH_IF ("%dname%" STRING_COMPARE_CASE "Door02" = 0) BEGIN
    WRITE_LONG ("%doffset%" + ("%it%" * 200) + 140) 100
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 5" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDGnoll~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDPirate~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 9" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 132) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (14)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 12" = 0) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (14)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 10" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (14)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 11" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~mistva01~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR1202.BCS~ ~ImprovedAnvil\BAF\AR1202.BAF~

COPY_EXISTING ~AR1300.ARE~ ~override/AR1300.ARE~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran1302a" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0)) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 5" = 0)) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR1300.BCS~ ~ImprovedAnvil\BAF\AR1300.BAF~

COPY_EXISTING ~ar1301.are~ ~override/ar1301.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!icyuan~ #8

COPY_EXISTING ~AR1302.ARE~ ~override/AR1302.ARE~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!icyuan~ #8
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran1300b" = 0) OR
	     ("%iname%" STRING_COMPARE_CASE "Tran1300c" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0)) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR1302.BCS~ ~ImprovedAnvil\BAF\AR1302.BAF~

COPY_EXISTING ~AR1303.are~ ~override/AR1303.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran1301" = 0) OR
             ("%iname%" STRING_COMPARE_CASE "Tran1302" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 5" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 7" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 8" = 0)) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar1305.are~ ~override/ar1305.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!trolr~ #8

COPY_EXISTING ~ar1400.are~ ~override/ar1400.are~
 READ_SHORT 0x5A "icount"
 READ_LONG 0x5C "ioffset"
 SET "it" = 0
 WHILE ("%it%" < "%icount%") BEGIN
  READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (6)
  PATCH_IF ("%iname%" STRING_COMPARE_CASE "Mirror" = 0) BEGIN
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 52) 28
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 100) (BNOT 0)
   WRITE_ASCII ("%ioffset%" + ("%it%" * 196) + 124) ~Trania22~
   SET "it" = "%icount%"
  END
 "it" = "%it%" + 1
END
EXTEND_BOTTOM ~ar1400.BCS~ ~ImprovedAnvil\BAF\ar1400.BAF~

COPY_EXISTING ~AR1401.ARE~ ~override/AR1401.are~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!shador~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 44) ~S!shador~ #8
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR1403.ARE~ ~override/AR1403.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!shador~ #8
  WRITE_ASCII ("%interroffset%" + 80) ~S!shadfi~ #8

COPY_EXISTING ~AR1404.ARE~ ~override/AR1404.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!shador~ #8
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 7" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 8" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!shador~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 44) ~S!shador~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (14)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 11" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!shador~ #8
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR1500.ARE~ ~override/AR1500.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDGnoll~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR1512.ARE~ ~override/AR1512.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDKEEP~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR1513.ARE~ ~override/AR1513.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~MISTHO01~ #8
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 44) ~MISTVA01~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 2
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDPirate~ #8
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 44) ~RDKEEP~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR1514.ARE~ ~override/AR1514.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDKEEP~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR1515.ARE~ ~override/AR1515.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar1600.are~ ~override/ar1600.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran1605" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR1600.BCS~ ~ImprovedAnvil\BAF\AR1600.BAF~

COPY_EXISTING ~ar1605.are~ ~override/ar1605.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran1600" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR1605.BCS~ ~ImprovedAnvil\BAF\AR1605.BAF~

COPY_EXISTING ~AR1700.ARE~ ~override/AR1700.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR1800.ARE~ ~override/AR1800.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 7" = 0) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 8" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 9" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDKeep~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar1900.are~ ~override/ar1900.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran1904" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 8" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 7" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spgrov~ #8
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR1900.BCS~ ~ImprovedAnvil\BAF\AR1900.BAF~

COPY_EXISTING ~ar1904.are~ ~override/ar1904.are~
  WRITE_ASCII 0x94 ~ar1904~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "AR1900" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
COMPILE ~ImprovedAnvil\BAF\AR1904.BAF~

COPY_EXISTING ~ar2000.are~ ~override/ar2000.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran2013" = 0) OR
             ("%iname%" STRING_COMPARE_CASE "Tran2002" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR2000.BCS~ ~ImprovedAnvil\BAF\AR2000.BAF~

COPY_EXISTING ~ar2002.are~ ~override/ar2002.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran2000" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR2002.BCS~ ~ImprovedAnvil\BAF\AR2002.BAF~

COPY_EXISTING ~ar2013.are~ ~override/ar2013.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran2000" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR2013.BCS~ ~ImprovedAnvil\BAF\AR2013.BAF~

COPY_EXISTING ~AR2100.ARE~ ~override/AR2100.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!umbhul~ #8
  WRITE_ASCII ("%interroffset%" + 80) ~S!icliz~ #8
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar2101.are~ ~override/ar2101.are~
 READ_LONG 0xC0 "interroffset"
 WRITE_ASCII ("%interroffset%" + 72) ~S!behgau~ #8
 READ_SHORT 0x5A "icount"
 READ_LONG 0x5C "ioffset"
 SET "it" = 0
 WHILE ("%it%" < "%icount%") BEGIN
  READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
  PATCH_IF ("%iname%" STRING_COMPARE_CASE "StairInfo" = 0) BEGIN
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 52) 28
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 100) (BNOT 0)
   WRITE_ASCII ("%ioffset%" + ("%it%" * 196) + 124) ~Trania01~
   SET "it" = "%icount%"
  END
 "it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0)) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR2200.ARE~ ~override/ar2200.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran2210a" = 0) OR
	    ("%iname%" STRING_COMPARE_CASE "Tran2210b" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR2200.BCS~ ~ImprovedAnvil\BAF\AR2200.BAF~

COPY_EXISTING ~AR2210.ARE~ ~override/ar2210.are~
  WRITE_ASCII 0x94 ~ar2210~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran2200a" = 0) OR
	    ("%iname%" STRING_COMPARE_CASE "Tran2200b" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR2210.BCS~ ~ImprovedAnvil\BAF\AR2210.BAF~

COPY_EXISTING ~AR2300.ARE~ ~override/AR2300.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 8" = 0)) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar2400.are~ ~override/ar2400.are~
  READ_LONG 0xA4 "dcount"
  READ_LONG 0xA8 "doffset"
  SET "it" = 0
  WHILE ("%it%" < "%dcount%") BEGIN
   READ_ASCII ("%doffset%" + "%it%" * 200) "dname"
   PATCH_IF ("%dname%" STRING_COMPARE_CASE "Door01" = 0) BEGIN
    WRITE_LONG ("%doffset%" + ("%it%" * 200) + 140) 100
    READ_BYTE ("%doffset%" + ("%it%" * 200) + 0x28) "doorflags"
    WRITE_BYTE ("%doffset%" + ("%it%" * 200) + 0x28) ("%doorflags%" BAND 0b11111101)
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR2401.ARE~ ~override/AR2401.ARE~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!drofod~ #8

COPY_EXISTING ~ar2402.are~ ~override/ar2402.are~
 READ_LONG 0xC0 "interroffset"
 WRITE_ASCII "%interroffset%" ~~ #32
 WRITE_ASCII ("%interroffset%" + 72) ~rdkuoto2~ #8
 READ_SHORT ("%interroffset%" + 164) "trigcount"
 WRITE_SHORT ("%interroffset%" + 164) 1
 READ_SHORT ("%interroffset%" + 168) "daychance"
 WRITE_SHORT ("%interroffset%" + 168) 10
 READ_SHORT ("%interroffset%" + 170) "nigchance"
 WRITE_SHORT ("%interroffset%" + 170) 10
 READ_SHORT 0x5A "icount"
 READ_LONG 0x5C "ioffset"
 SET "it" = 0
 WHILE ("%it%" < "%icount%") BEGIN
  READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (7)
  PATCH_IF ("%iname%" STRING_COMPARE_CASE "GodInfo" = 0) BEGIN
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 52) 8
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 100) (BNOT 0)
   WRITE_ASCII ("%ioffset%" + ("%it%" * 196) + 124) ~S!pull~
   SET "it" = "%icount%"
  END
 "it" = "%it%" + 1
END
  READ_LONG 0xA4 "dcount"
  READ_LONG 0xA8 "doffset"
  SET "it" = 0
  WHILE ("%it%" < "%dcount%") BEGIN
   READ_ASCII ("%doffset%" + "%it%" * 200) "dname"
   PATCH_IF ("%dname%" STRING_COMPARE_CASE "Door02" = 0) BEGIN
    WRITE_LONG ("%doffset%" + ("%it%" * 200) + 140) 100
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 132) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR2402.BCS~ ~ImprovedAnvil\BAF\AR2402.BAF~

COPY_EXISTING ~ar2600.are~ ~override/ar2600.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran2602" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~mistva01~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
    PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 5" = 0) OR
              ("%spname%" STRING_COMPARE_CASE "Spawn Point 8" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDKeep~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR2602.ARE~ ~override/AR2602.ARE~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!wolfwe~ #8
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran2600" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0)) BEGIN
    WRITE_LONG ("%spoffset%" + ("%it%" * 200) + 134) 0
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar2800.are~ ~override/ar2800.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!coinra~ #8
  WRITE_ASCII ("%interroffset%" + 80) ~S!gemran~ #8
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran2807" = 0) OR
             ("%iname%" STRING_COMPARE_CASE "Tran2811" = 0) OR
             ("%iname%" STRING_COMPARE_CASE "Tran2810" = 0) OR
             ("%iname%" STRING_COMPARE_CASE "Tran2802" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_LONG 0xA4 "dcount"
  READ_LONG 0xA8 "doffset"
  SET "it" = 0
  WHILE ("%it%" < "%dcount%") BEGIN
   READ_ASCII ("%doffset%" + "%it%" * 200) "dname"
   PATCH_IF ("%dname%" STRING_COMPARE_CASE "Door07" = 0) BEGIN
    WRITE_LONG ("%doffset%" + ("%it%" * 200) + 140) 100
    WRITE_LONG ("%doffset%" + ("%it%" * 200) + 152) 10862
    READ_BYTE ("%doffset%" + ("%it%" * 200) + 0x28) "doorflags"
    WRITE_BYTE ("%doffset%" + ("%it%" * 200) + 0x28) ("%doorflags%" BOR 0b00000010)
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar2802.are~ ~override/ar2802.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran2800" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar2806.are~ ~override/ar2806.are~
 READ_SHORT 0x5A "icount"
 READ_LONG 0x5C "ioffset"
 SET "it" = 0
 WHILE ("%it%" < "%icount%") BEGIN
  READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (16)
  PATCH_IF ("%iname%" STRING_COMPARE_CASE "Trigger Point 19" = 0) BEGIN
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 52) 28
   WRITE_LONG ("%ioffset%" + ("%it%" * 196) + 100) (BNOT 0)
   WRITE_ASCII ("%ioffset%" + ("%it%" * 196) + 124) ~Trania28~
   SET "it" = "%icount%"
  END
 "it" = "%it%" + 1
END

COPY_EXISTING ~ar2807.are~ ~override/ar2807.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran2800" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR2807.BCS~ ~ImprovedAnvil\BAF\AR2807.BAF~

COPY_EXISTING ~AR2811.are~ ~override/AR2811.are~
  WRITE_ASCII 0x94 ~AR2811~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran2800" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR2811.BCS~ ~ImprovedAnvil\BAF\AR2811.BAF~

COPY_EXISTING ~AR3000.ARE~ ~override/AR3000.ARE~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran3000a" = 0) OR
	    ("%iname%" STRING_COMPARE_CASE "Tran3000b" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
   END
"it" = "%it%" + 1
END
EXTEND_TOP ~AR3000.BCS~ ~ImprovedAnvil\BAF\AR3000.BAF~

COPY_EXISTING ~AR3001.ARE~ ~override/AR3001.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 5" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 8" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 44) ~RDSahua~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
 READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 132) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 7" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDGnoll~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR3004.ARE~ ~override/AR3004.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  READ_SHORT ("%interroffset%" + 152) "crecount"
  WRITE_SHORT ("%interroffset%" + 152) 3

COPY_EXISTING ~ar3010.are~ ~override/ar3010.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 88) ~deriny01~ #8

COPY_EXISTING ~ar3011.are~ ~override/ar3011.are~
  READ_LONG 0xBC "song-offset"
  WRITE_LONG "%song-offset%" 0
  WRITE_LONG ("%song-offset%" + 4) 0
  WRITE_LONG ("%song-offset%" + 12) 58
EXTEND_TOP ~AR3011.BCS~ ~ImprovedAnvil\BAF\AR3011.BAF~

COPY_EXISTING ~ar3014.are~ ~override/ar3014.are~
  WRITE_ASCII 0x94 ~ar3014~ #8 // Area Script reference
EXTEND_BOTTOM ~ar3014.BCS~ ~ImprovedAnvil\BAF\ar3014.BAF~

COPY_EXISTING ~ar3016.ARE~ ~override/ar3016.ARE~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDGOLEM3~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~HGWAR02~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDGOLEM3~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 5" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!ELEGRA~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!ELEGRA~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 7" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!ELEGRA~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 8" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!ELEGRA~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 1
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar3017.are~ ~override/ar3017.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran3022" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 132) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDGnoll~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 5" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 6" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDKeep~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR3017.BCS~ ~ImprovedAnvil\BAF\AR3017.BAF~

COPY_EXISTING ~AR3019.ARE~ ~override/AR3019.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!mistva~ #8
  WRITE_ASCII ("%interroffset%" + 80) ~S!spidr2~ #8
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 132) 1
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~AR3021.ARE~ ~override/AR3021.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!umbhul~ #8

COPY_EXISTING ~ar3022.are~ ~override/ar3022.are~
  WRITE_ASCII 0x94 ~ar3022~ #8 // Area Script reference
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!gemran~ #8
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF (("%iname%" STRING_COMPARE_CASE "Tran3027" = 0) OR
             ("%iname%" STRING_COMPARE_CASE "Tran3017" = 0)) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR3022.BCS~ ~ImprovedAnvil\BAF\AR3022.BAF~

COPY_EXISTING ~ar3027.are~ ~override/ar3027.are~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran3022" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR3027.BCS~ ~ImprovedAnvil\BAF\AR3027.BAF~

COPY_EXISTING ~AR5002.ARE~ ~override/AR5002.are~
  READ_LONG 0x54 "actoroffset"
  READ_SHORT 0x58 "actorcount"
  FOR (i = 0; i < "%actorcount%"; i = i+1) BEGIN
   READ_ASCII ("%actoroffset%" + 272 * "%i%" + 128) "creresref"
   PATCH_IF (("%creresref%" STRING_COMPARE_CASE "GROMG05") = 0) BEGIN
    WRITE_ASCII ("%actoroffset%" + 272 * "%i%" + 80) "" #8
   END
END

COPY_EXISTING ~AR5006.ARE~ ~override/AR5006.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!vamemi~ #8

COPY_EXISTING ~AR5007.ARE~ ~override/AR5007.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~orc06~ #8

COPY_EXISTING ~ar5200.ARE~ ~override/ar5200.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  READ_SHORT ("%interroffset%" + 152) "crecount"
  WRITE_SHORT ("%interroffset%" + 152) 1
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (5)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "EASYA" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "HARDA" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR5200.BCS~ ~ImprovedAnvil\BAF\AR5200.BAF~

COPY_EXISTING ~ar5201.are~ ~override/ar5201.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~rdfire1~ #8
  READ_SHORT ("%interroffset%" + 152) "crecount"
  WRITE_SHORT ("%interroffset%" + 152) 1
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran5204" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar5202.are~ ~override/ar5202.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!skeld~ #8
  READ_SHORT ("%interroffset%" + 152) "crecount"
  WRITE_SHORT ("%interroffset%" + 152) 1
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDPirate~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar5204.are~ ~override/ar5204.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~rdfire1~ #8
  READ_SHORT ("%interroffset%" + 152) "crecount"
  WRITE_SHORT ("%interroffset%" + 152) 1
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran5201" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~AR5204.BCS~ ~ImprovedAnvil\BAF\AR5204.BAF~

COPY_EXISTING ~ar6000.are~ ~override/ar6000.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!elegra~ #8
  READ_SHORT ("%interroffset%" + 164) "trigcount"
  WRITE_SHORT ("%interroffset%" + 164) 2
  READ_SHORT ("%interroffset%" + 168) "daychance"
  WRITE_SHORT ("%interroffset%" + 168) 10
  READ_SHORT ("%interroffset%" + 170) "nigchance"
  WRITE_SHORT ("%interroffset%" + 170) 10

COPY_EXISTING ~ar6001.are~ ~override/ar6001.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!elegra~ #8
  READ_SHORT ("%interroffset%" + 154) "diffflag"
  WRITE_SHORT ("%interroffset%" + 154) 2
  READ_SHORT ("%interroffset%" + 168) "daychance"
  WRITE_SHORT ("%interroffset%" + 168) 10
  READ_SHORT ("%interroffset%" + 170) "nigchance"
  WRITE_SHORT ("%interroffset%" + 170) 10

COPY_EXISTING ~ar6002.are~ ~override/ar6002.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!elegra~ #8
  READ_SHORT ("%interroffset%" + 164) "trigcount"
  WRITE_SHORT ("%interroffset%" + 164) 2
  READ_SHORT ("%interroffset%" + 168) "daychance"
  WRITE_SHORT ("%interroffset%" + 168) 10
  READ_SHORT ("%interroffset%" + 170) "nigchance"
  WRITE_SHORT ("%interroffset%" + 170) 10

COPY_EXISTING ~ar6003.are~ ~override/ar6003.are~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0)) BEGIN
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 122) 2
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar6008.are~ ~override/ar6008.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!icegor~ #8
  READ_SHORT ("%interroffset%" + 164) "trigcount"
  WRITE_SHORT ("%interroffset%" + 164) 1
  READ_SHORT ("%interroffset%" + 168) "daychance"
  WRITE_SHORT ("%interroffset%" + 168) 10
  READ_SHORT ("%interroffset%" + 170) "nigchance"
  WRITE_SHORT ("%interroffset%" + 170) 10

COPY_EXISTING ~ar6011.are~ ~override/ar6011.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!behgau~ #8

COPY_EXISTING ~ar6100.are~ ~override/ar6100.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!drofod~ #8

COPY_EXISTING ~ar6101.ARE~ ~override/ar6101.are~
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar6103.are~ ~override/ar6103.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!spidr1~ #8

COPY_EXISTING ~ar6104.are~ ~override/ar6104.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!drofod~ #8
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 1" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF (("%spname%" STRING_COMPARE_CASE "Spawn Point 3" = 0) OR
             ("%spname%" STRING_COMPARE_CASE "Spawn Point 4" = 0)) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~S!spyran~ #8
   END
"it" = "%it%" + 1
END
  READ_SHORT 0x64 "spcount"
  READ_LONG 0x60 "spoffset"
  SET "it" = 0
  WHILE ("%it%" < "%spcount%") BEGIN
   READ_ASCII ("%spoffset%" + "%it%" * 200) "spname" (13)
   PATCH_IF ("%spname%" STRING_COMPARE_CASE "Spawn Point 2" = 0) BEGIN
    WRITE_ASCII ("%spoffset%" + ("%it%" * 200) + 36) ~RDSPID5~ #8
    WRITE_SHORT ("%spoffset%" + ("%it%" * 200) + 116) 1
   END
"it" = "%it%" + 1
END

COPY_EXISTING ~ar6107.are~ ~override/ar6107.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!umbhul~ #8

COPY_EXISTING ~ar6109.are~ ~override/ar6109.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII "%interroffset%" ~~ #32
  WRITE_ASCII ("%interroffset%" + 72) ~S!drofod~ #8

COPY_EXISTING ~AR6400.ARE~ ~override/AR6400.are~
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~giafir01~ #8
  READ_SHORT ("%interroffset%" + 152) "crecount"
  WRITE_SHORT ("%interroffset%" + 152) 1

COPY_EXISTING ~ar0331.are~ ~override/ar0331.are~
  WRITE_ASCII 0x94 ~ar0331~ #8 // Area Script reference
EXTEND_BOTTOM ~AR0331.BCS~ ~ImprovedAnvil\BAF\AR0331.BAF~

COPY_EXISTING ~ar0412.are~ ~override/ar0412.are~
  WRITE_ASCII 0x94 ~ar0412~ #8 // Area Script reference
  READ_LONG 0xC0 "interroffset"
  WRITE_ASCII ("%interroffset%" + 72) ~S!shador~ #8
  WRITE_ASCII ("%interroffset%" + 80) ~S!shadfi~ #8
EXTEND_BOTTOM ~AR0412.BCS~ ~ImprovedAnvil\BAF\AR0412.BAF~

COPY_EXISTING ~ar3018.are~ ~override/ar3018.are~
  WRITE_ASCII 0x94 ~ar3018~ #8 // Area Script reference
EXTEND_BOTTOM ~ar3018.BCS~ ~ImprovedAnvil\BAF\ar3018.BAF~

COPY_EXISTING ~ar1107.are~ ~override/ar1107.are~
  WRITE_ASCII 0x94 ~ar1107~ #8 // Area Script reference
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname"
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran1100" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END
EXTEND_BOTTOM ~ar1107.BCS~ ~ImprovedAnvil\BAF\ar1107.BAF~

COPY_EXISTING ~AR0500.ARE~ ~override/AR0500.ARE~
  READ_SHORT 0x5A "icount"
  READ_LONG 0x5C "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
   READ_ASCII ("%ioffset%" + "%it%" * 196) "iname" (9)
   PATCH_IF ("%iname%" STRING_COMPARE_CASE "Tran0506b" = 0) BEGIN
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x60) ("%areflags%" BOR 0b00000100) // set Party Required bit
    READ_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) "areflags"
    WRITE_BYTE ("%ioffset%" + ("%it%" * 196) + 0x61) ("%areflags%" BOR 0b00000010) // set NPCs Cannot Pass bit
   END
"it" = "%it%" + 1
END

//Copying bs files//

COPY ~ImprovedAnvil\bs/AGEN.BS~      ~scripts/AGEN.BS~
COPY ~ImprovedAnvil\bs/APASS.BS~      ~scripts/APASS.BS~
COPY ~ImprovedAnvil\bs/ARANG.BS~      ~scripts/ARANG.BS~
COPY ~ImprovedAnvil\bs/CAUTIOUS.BS~      ~scripts/CAUTIOUS.BS~
COPY ~ImprovedAnvil\bs/CLERIC1.BS~      ~scripts/CLERIC1.BS~
COPY ~ImprovedAnvil\bs/CLERIC2.BS~      ~scripts/CLERIC2.BS~
COPY ~ImprovedAnvil\bs/CLERIC3.BS~      ~scripts/CLERIC3.BS~
COPY ~ImprovedAnvil\bs/CLERIC4.BS~      ~scripts/CLERIC4.BS~
COPY ~ImprovedAnvil\bs/DEFAULT.BS~      ~scripts/DEFAULT.BS~
COPY ~ImprovedAnvil\bs/FIGHTER1.BS~      ~scripts/FIGHTER1.BS~
COPY ~ImprovedAnvil\bs/FIGHTER2.BS~      ~scripts/FIGHTER2.BS~
COPY ~ImprovedAnvil\bs/FIGHTER3.BS~      ~scripts/FIGHTER3.BS~
COPY ~ImprovedAnvil\bs/FIGHTER4.BS~      ~scripts/FIGHTER4.BS~
COPY ~ImprovedAnvil\bs/MAGE1.BS~      ~scripts/MAGE1.BS~
COPY ~ImprovedAnvil\bs/MAGE2.BS~      ~scripts/MAGE2.BS~
COPY ~ImprovedAnvil\bs/MAGE3.BS~      ~scripts/MAGE3.BS~
COPY ~ImprovedAnvil\bs/MAGE4.BS~      ~scripts/MAGE4.BS~
COPY ~ImprovedAnvil\bs/THIEF1.BS~      ~scripts/THIEF1.BS~
COPY ~ImprovedAnvil\bs/THIEF2.BS~      ~scripts/THIEF2.BS~
COPY ~ImprovedAnvil\bs/THIEF3.BS~      ~scripts/THIEF3.BS~
COPY ~ImprovedAnvil\bs/THIEF4.BS~      ~scripts/THIEF4.BS~

//Copying eff files//

COPY ~ImprovedAnvil\eff/S!dragon.eff~      ~override/S!dragon.eff~
COPY ~ImprovedAnvil\eff/S!undead.eff~      ~override/S!undead.eff~
COPY ~ImprovedAnvil\eff/S!demon.eff~      ~override/S!demon.eff~
COPY ~ImprovedAnvil\eff/S!djinn.eff~      ~override/S!djinn.eff~
COPY ~ImprovedAnvil\eff/S!horn.eff~      ~override/S!horn.eff~
COPY ~ImprovedAnvil\eff/S!holy.eff~      ~override/S!holy.eff~
COPY ~ImprovedAnvil\eff/S!holy2.eff~      ~override/S!holy2.eff~
COPY ~ImprovedAnvil\eff/S!spider.eff~      ~override/S!spider.eff~
COPY ~ImprovedAnvil\eff/S!golem.eff~      ~override/S!golem.eff~
COPY ~ImprovedAnvil\eff/spcl422.eff~      ~override/spcl422.eff~
COPY ~ImprovedAnvil\eff/spcl422a.eff~      ~override/spcl422a.eff~
COPY ~ImprovedAnvil\eff/spcl422b.eff~      ~override/spcl422b.eff~
COPY ~ImprovedAnvil\eff/S!swan.eff~      ~override/S!swan.eff~
COPY ~ImprovedAnvil\eff/S!gswan.eff~      ~override/S!gswan.eff~
COPY ~ImprovedAnvil\eff/S!swanq.eff~      ~override/S!swanq.eff~
COPY ~ImprovedAnvil\eff/S!ipdam.eff~      ~override/S!ipdam.eff~
COPY ~ImprovedAnvil\eff/S!golem2.eff~      ~override/S!golem2.eff~
COPY ~ImprovedAnvil\eff/S!golem3.eff~      ~override/S!golem3.eff~
COPY ~ImprovedAnvil\eff/S!golem4.eff~      ~override/S!golem4.eff~
COPY ~ImprovedAnvil\eff/S!acp4.eff~      ~override/S!acp4.eff~
COPY ~ImprovedAnvil\eff/S!demh8.eff~      ~override/S!demh8.eff~
COPY ~ImprovedAnvil\eff/S!demd8.eff~      ~override/S!demd8.eff~
COPY ~ImprovedAnvil\eff/S!drgh6.eff~      ~override/S!drgh6.eff~
COPY ~ImprovedAnvil\eff/S!drgd6.eff~      ~override/S!drgd6.eff~
COPY ~ImprovedAnvil\eff/S!flah8.eff~      ~override/S!flah8.eff~
COPY ~ImprovedAnvil\eff/S!flad8.eff~      ~override/S!flad8.eff~
COPY ~ImprovedAnvil\eff/S!golh8.eff~      ~override/S!golh8.eff~
COPY ~ImprovedAnvil\eff/S!gold8.eff~      ~override/S!gold8.eff~
COPY ~ImprovedAnvil\eff/S!lchh4.eff~      ~override/S!lchh4.eff~
COPY ~ImprovedAnvil\eff/S!lchd4.eff~      ~override/S!lchd4.eff~
COPY ~ImprovedAnvil\eff/S!spih8.eff~      ~override/S!spih8.eff~
COPY ~ImprovedAnvil\eff/S!spid8.eff~      ~override/S!spid8.eff~
COPY ~ImprovedAnvil\eff/S!spih8.eff~      ~override/S!skeh8.eff~
COPY ~ImprovedAnvil\eff/S!spid8.eff~      ~override/S!sked8.eff~
COPY ~ImprovedAnvil\eff/S!spih8.eff~      ~override/S!vamh8.eff~
COPY ~ImprovedAnvil\eff/S!spid8.eff~      ~override/S!vamd8.eff~
COPY ~ImprovedAnvil\eff/S!disrup.eff~      ~override/S!disrup.eff~
COPY ~ImprovedAnvil\eff/S!disru2.eff~      ~override/S!disru2.eff~
COPY ~ImprovedAnvil\eff/S!disru3.eff~      ~override/S!disru3.eff~
COPY ~ImprovedAnvil\eff/S!tlkani.eff~      ~override/S!tlkani.eff~
COPY ~ImprovedAnvil\eff/S!tlkan2.eff~      ~override/S!tlkan2.eff~
COPY ~ImprovedAnvil\eff/S!riskbr.eff~      ~override/S!riskbr.eff~
COPY ~ImprovedAnvil\eff/S!lord.eff~      ~override/S!lord.eff~
COPY ~ImprovedAnvil\eff/S!recast.eff~      ~override/S!recast.eff~
COPY ~ImprovedAnvil\eff/S!recas2.eff~      ~override/S!recas2.eff~
COPY ~ImprovedAnvil\eff/S!mon4.eff~      ~override/S!mon4.eff~
COPY ~ImprovedAnvil\eff/S!mon5.eff~      ~override/S!mon5.eff~
COPY ~ImprovedAnvil\eff/S!mon6.eff~      ~override/S!mon6.eff~
COPY ~ImprovedAnvil\eff/S!mon7.eff~      ~override/S!mon7.eff~
COPY ~ImprovedAnvil\eff/S!anim7.eff~      ~override/S!anim7.eff~
COPY ~ImprovedAnvil\eff/S!anim8.eff~      ~override/S!anim8.eff~
COPY ~ImprovedAnvil\eff/skullcr.eff~      ~override/skullcr.eff~
COPY ~ImprovedAnvil\eff/S!oldone.eff~      ~override/S!oldone.eff~
COPY ~ImprovedAnvil\eff/S!pasha.eff~      ~override/S!pasha.eff~
COPY ~ImprovedAnvil\eff/S!fist.eff~      ~override/S!fist.eff~
COPY ~ImprovedAnvil\eff/S!swash1.eff~      ~override/S!swash1.eff~
COPY ~ImprovedAnvil\eff/S!swash2.eff~      ~override/S!swash2.eff~

// Patching eff files

COPY_EXISTING ~trolld1.eff~ ~override/trolld1.eff~
  WRITE_LONG  0x14    1 // target
  WRITE_LONG  0x20    4 // parameter 2
  WRITE_BYTE  0x24    2 // timing mod

COPY_EXISTING ~trollh1.eff~ ~override/trollh1.eff~
  WRITE_LONG  0x14    1 // target
  WRITE_LONG  0x20    4 // parameter 2
  WRITE_BYTE  0x24    2 // timing mod

COPY_EXISTING ~ft2hit.eff~ ~override/ft2hit.eff~
  WRITE_LONG  0x14    1 // target
  WRITE_LONG  0x1c  145 // parameter 1
  WRITE_LONG  0x20    4 // parameter 2
  WRITE_BYTE  0x24    2 // timing mod

COPY_EXISTING ~ft2dam.eff~ ~override/ft2dam.eff~
  WRITE_LONG  0x14    1 // target
  WRITE_LONG  0x1c  145 // parameter 1
  WRITE_LONG  0x20    4 // parameter 2
  WRITE_BYTE  0x24    2 // timing mod

COPY_EXISTING ~spcl132.eff~ ~override/spcl132.eff~
  WRITE_LONG  0x1c   10 // parameter 1

COPY_EXISTING ~spandl15.eff~ ~override/spandl15.eff~
  WRITE_LONG  0x18   8 // power

COPY_EXISTING ~spandead.eff~ ~override/spandead.eff~
  WRITE_LONG  0x18   8 // power

COPY_EXISTING ~archstun.eff~ ~override/archstun.eff~
  WRITE_LONG  0x18   0 // power

COPY_EXISTING ~wish14a.eff~ ~override/wish14a.eff~
  WRITE_LONG  0x1c    1 // parameter 1
  WRITE_BYTE  0x24    1 // timing mod
  WRITE_ASCII 0x30 ~S!wand01~ #8

COPY_EXISTING ~wish14b.eff~ ~override/wish14b.eff~
  WRITE_LONG  0x1c    1 // parameter 1
  WRITE_BYTE  0x24    1 // timing mod
  WRITE_ASCII 0x30 ~S!wand02~ #8

COPY_EXISTING ~wish14c.eff~ ~override/wish14c.eff~
  WRITE_LONG  0x1c    1 // parameter 1
  WRITE_BYTE  0x24    1 // timing mod
  WRITE_ASCII 0x30 ~S!wand03~ #8

//Copying bam files//

COPY ~ImprovedAnvil\bam\S!cirid.bam~ ~override/S!cirid.bam~
COPY ~ImprovedAnvil\bam\S!cirin.bam~ ~override/S!cirin.bam~
COPY ~ImprovedAnvil\bam\S!leiid.bam~ ~override/S!leiid.bam~
COPY ~ImprovedAnvil\bam\S!seedin.bam~ ~override/S!seedin.bam~
COPY ~ImprovedAnvil\bam\S!woodin.bam~ ~override/S!woodin.bam~
COPY ~ImprovedAnvil\bam\S!woodid.bam~ ~override/S!woodid.bam~
COPY ~ImprovedAnvil\bam\S!monkin.bam~ ~override/S!monkin.bam~
COPY ~ImprovedAnvil\bam\S!orein.bam~ ~override/S!orein.bam~
COPY ~ImprovedAnvil\bam\S!clubin.bam~ ~override/S!clubin.bam~
COPY ~ImprovedAnvil\bam\S!glovin.bam~ ~override/S!glovin.bam~
COPY ~ImprovedAnvil\bam\S!memin.bam~ ~override/S!memin.bam~
COPY ~ImprovedAnvil\bam\S!elerin.bam~ ~override/S!elerin.bam~
COPY ~ImprovedAnvil\bam\S!volcin.bam~ ~override/S!volcin.bam~
COPY ~ImprovedAnvil\bam\S!proin.bam~ ~override/S!proin.bam~
COPY ~ImprovedAnvil\bam\S!gaxxin.bam~ ~override/S!gaxxin.bam~
COPY ~ImprovedAnvil\bam\S!elabin.bam~ ~override/S!elabin.bam~
COPY ~ImprovedAnvil\bam\S!barbin.bam~ ~override/S!barbin.bam~
COPY ~ImprovedAnvil\bam\S!magein.bam~ ~override/S!magein.bam~
COPY ~ImprovedAnvil\bam\S!hornin.bam~ ~override/S!hornin.bam~
COPY ~ImprovedAnvil\bam\S!lockin.bam~ ~override/S!lockin.bam~
COPY ~ImprovedAnvil\bam\S!daggin.bam~ ~override/S!daggin.bam~
COPY ~ImprovedAnvil\bam\S!hastin.bam~ ~override/S!hastin.bam~
COPY ~ImprovedAnvil\bam\S!talin.bam~ ~override/S!talin.bam~
COPY ~ImprovedAnvil\bam\S!clouin.bam~ ~override/S!clouin.bam~
COPY ~ImprovedAnvil\bam\S!lordin.bam~ ~override/S!lordin.bam~
COPY ~ImprovedAnvil\bam\S!posin.bam~ ~override/S!posin.bam~
COPY ~ImprovedAnvil\bam\S!shelin.bam~ ~override/S!shelin.bam~
COPY ~ImprovedAnvil\bam\S!ankhin.bam~ ~override/S!ankhin.bam~
COPY ~ImprovedAnvil\bam\S!janin.bam~ ~override/S!janin.bam~
COPY ~ImprovedAnvil\bam\S!flowin.bam~ ~override/S!flowin.bam~
COPY ~ImprovedAnvil\bam\S!burgin.bam~ ~override/S!burgin.bam~
COPY ~ImprovedAnvil\bam\S!buckin.bam~ ~override/S!buckin.bam~
COPY ~ImprovedAnvil\bam\S!iounin.bam~ ~override/S!iounin.bam~
COPY ~ImprovedAnvil\bam\S!anomin.bam~ ~override/S!anomin.bam~
COPY ~ImprovedAnvil\bam\S!huskin.bam~ ~override/S!huskin.bam~
COPY ~ImprovedAnvil\bam\S!valkin.bam~ ~override/S!valkin.bam~
COPY ~ImprovedAnvil\bam\S!valain.bam~ ~override/S!valain.bam~
COPY ~ImprovedAnvil\bam\S!haerin.bam~ ~override/S!haerin.bam~
COPY ~ImprovedAnvil\bam\S!mazzin.bam~ ~override/S!mazzin.bam~
COPY ~ImprovedAnvil\bam\S!hespin.bam~ ~override/S!hespin.bam~
COPY ~ImprovedAnvil\bam\S!mornin.bam~ ~override/S!mornin.bam~
COPY ~ImprovedAnvil\bam\S!clckin.bam~ ~override/S!clckin.bam~
COPY ~ImprovedAnvil\bam\S!rodin.bam~ ~override/S!rodin.bam~
COPY ~ImprovedAnvil\bam\S!elfin.bam~ ~override/S!elfin.bam~
COPY ~ImprovedAnvil\bam\S!bookin.bam~ ~override/S!bookin.bam~
COPY ~ImprovedAnvil\bam\S!clarin.bam~ ~override/S!clarin.bam~
COPY ~ImprovedAnvil\bam\S!acidin.bam~ ~override/S!acidin.bam~
COPY ~ImprovedAnvil\bam\S!janfin.bam~ ~override/S!janfin.bam~
COPY ~ImprovedAnvil\bam\S!cutin.bam~ ~override/S!cutin.bam~
COPY ~ImprovedAnvil\bam\S!catin.bam~ ~override/S!catin.bam~
COPY ~ImprovedAnvil\bam\S!spidin.bam~ ~override/S!spidin.bam~
COPY ~ImprovedAnvil\bam\S!tresin.bam~ ~override/S!tresin.bam~
COPY ~ImprovedAnvil\bam\S!braiin.bam~ ~override/S!braiin.bam~
COPY ~ImprovedAnvil\bam\S!inwiin.bam~ ~override/S!inwiin.bam~
COPY ~ImprovedAnvil\bam\S!garnin.bam~ ~override/S!garnin.bam~
COPY ~ImprovedAnvil\bam\S!protin.bam~ ~override/S!protin.bam~
COPY ~ImprovedAnvil\bam\S!ambin.bam~ ~override/S!ambin.bam~
COPY ~ImprovedAnvil\bam\S!bladin.bam~ ~override/S!bladin.bam~
COPY ~ImprovedAnvil\bam\S!bladid.bam~ ~override/S!bladid.bam~
COPY ~ImprovedAnvil\bam\S!hiltin.bam~ ~override/S!hiltin.bam~
COPY ~ImprovedAnvil\bam\S!hiltid.bam~ ~override/S!hiltid.bam~
COPY ~ImprovedAnvil\bam\S!trutin.bam~ ~override/S!trutin.bam~
COPY ~ImprovedAnvil\bam\S!trutid.bam~ ~override/S!trutid.bam~
COPY ~ImprovedAnvil\bam\S!dracin.bam~ ~override/S!dracin.bam~
COPY ~ImprovedAnvil\bam\S!sigin.bam~ ~override/S!sigin.bam~
COPY ~ImprovedAnvil\bam\S!vitin.bam~ ~override/S!vitin.bam~
COPY ~ImprovedAnvil\bam\S!bag1in.bam~ ~override/S!bag1in.bam~
COPY ~ImprovedAnvil\bam\S!gemin.bam~ ~override/S!gemin.bam~
COPY ~ImprovedAnvil\bam\S!vagrin.bam~ ~override/S!vagrin.bam~
COPY ~ImprovedAnvil\bam\S!vag2in.bam~ ~override/S!vag2in.bam~
COPY ~ImprovedAnvil\bam\S!ber1in.bam~ ~override/S!ber1in.bam~
COPY ~ImprovedAnvil\bam\S!ber2in.bam~ ~override/S!ber2in.bam~
COPY ~ImprovedAnvil\bam\S!keldin.bam~ ~override/S!keldin.bam~
COPY ~ImprovedAnvil\bam\S!scagin.bam~ ~override/S!scagin.bam~
COPY ~ImprovedAnvil\bam\S!plagin.bam~ ~override/S!plagin.bam~
COPY ~ImprovedAnvil\bam\S!bootin.bam~ ~override/S!bootin.bam~
COPY ~ImprovedAnvil\bam\S!plarin.bam~ ~override/S!plarin.bam~
COPY ~ImprovedAnvil\bam\spini12b.bam~ ~override/spini12b.bam~
COPY ~ImprovedAnvil\bam\spini13b.bam~ ~override/spini13b.bam~
COPY ~ImprovedAnvil\bam\S!gem2in.bam~ ~override/S!gem2in.bam~
COPY ~ImprovedAnvil\bam\S!chaoin.bam~ ~override/S!chaoin.bam~
COPY ~ImprovedAnvil\bam\spwi413a.bam~ ~override/spwi413a.bam~
COPY ~ImprovedAnvil\bam\spwi413b.bam~ ~override/spwi413b.bam~
COPY ~ImprovedAnvil\bam\spwi413c.bam~ ~override/spwi413c.bam~
COPY ~ImprovedAnvil\bam\spwi703a.bam~ ~override/spwi703a.bam~
COPY ~ImprovedAnvil\bam\spwi703b.bam~ ~override/spwi703b.bam~
COPY ~ImprovedAnvil\bam\spwi703c.bam~ ~override/spwi703c.bam~
COPY ~ImprovedAnvil\bam\S!uglin.bam~ ~override/S!uglin.bam~
COPY ~ImprovedAnvil\bam\S!swanin.bam~ ~override/S!swanin.bam~
COPY ~ImprovedAnvil\bam\S!lakein.bam~ ~override/S!lakein.bam~
COPY ~ImprovedAnvil\bam\S!oilin.bam~ ~override/S!oilin.bam~
COPY ~ImprovedAnvil\bam\sppri15b.bam~ ~override/sppri15b.bam~
COPY ~ImprovedAnvil\bam\sppri15c.bam~ ~override/sppri15c.bam~
COPY ~ImprovedAnvil\bam\spwi804a.bam~ ~override/spwi804a.bam~
COPY ~ImprovedAnvil\bam\spwi804b.bam~ ~override/spwi804b.bam~
COPY ~ImprovedAnvil\bam\spwi804c.bam~ ~override/spwi804c.bam~
COPY ~ImprovedAnvil\bam\S!longin.bam~ ~override/S!longin.bam~
COPY ~ImprovedAnvil\bam\S!deadin.bam~ ~override/S!deadin.bam~
COPY ~ImprovedAnvil\bam\spini34b.bam~ ~override/spini34b.bam~
COPY ~ImprovedAnvil\bam\S!amulin.bam~ ~override/S!amulin.bam~
COPY ~ImprovedAnvil\bam\S!clc2in.bam~ ~override/S!clc2in.bam~
COPY ~ImprovedAnvil\bam\S!clc3in.bam~ ~override/S!clc3in.bam~
COPY ~ImprovedAnvil\bam\spini45b.bam~ ~override/spini45b.bam~
COPY ~ImprovedAnvil\bam\spwi707a.bam~ ~override/spwi707a.bam~
COPY ~ImprovedAnvil\bam\spwi707b.bam~ ~override/spwi707b.bam~
COPY ~ImprovedAnvil\bam\spwi707c.bam~ ~override/spwi707c.bam~
COPY ~ImprovedAnvil\bam\sppr215b.bam~ ~override/sppr215b.bam~
COPY ~ImprovedAnvil\bam\sppr215c.bam~ ~override/sppr215c.bam~
COPY ~ImprovedAnvil\bam\sppri20b.bam~ ~override/sppri20b.bam~
COPY ~ImprovedAnvil\bam\sppri20c.bam~ ~override/sppri20c.bam~
COPY ~ImprovedAnvil\bam\sppri21b.bam~ ~override/sppri21b.bam~
COPY ~ImprovedAnvil\bam\sppri21c.bam~ ~override/sppri21c.bam~
COPY ~ImprovedAnvil\bam\spwi807a.bam~ ~override/spwi807a.bam~
COPY ~ImprovedAnvil\bam\spwi807b.bam~ ~override/spwi807b.bam~
COPY ~ImprovedAnvil\bam\spwi807c.bam~ ~override/spwi807c.bam~
COPY ~ImprovedAnvil\bam\spini51b.bam~ ~override/spini51b.bam~
COPY ~ImprovedAnvil\bam\spwi607a.bam~ ~override/spwi607a.bam~
COPY ~ImprovedAnvil\bam\spwi607b.bam~ ~override/spwi607b.bam~
COPY ~ImprovedAnvil\bam\spwi607c.bam~ ~override/spwi607c.bam~
COPY ~ImprovedAnvil\bam\S!fsigin.bam~ ~override/S!fsigin.bam~
COPY ~ImprovedAnvil\bam\S!flaiin.bam~ ~override/S!flaiin.bam~
COPY ~ImprovedAnvil\bam\S!stafin.bam~ ~override/S!stafin.bam~
COPY ~ImprovedAnvil\bam\S!jewin.bam~ ~override/S!jewin.bam~
COPY ~ImprovedAnvil\bam\S!pullin.bam~ ~override/S!pullin.bam~
COPY ~ImprovedAnvil\bam\S!docuin.bam~ ~override/S!docuin.bam~
COPY ~ImprovedAnvil\bam\S!bonein.bam~ ~override/S!bonein.bam~
COPY ~ImprovedAnvil\bam\S!iou2in.bam~ ~override/S!iou2in.bam~
COPY ~ImprovedAnvil\bam\S!clc4in.bam~ ~override/S!clc4in.bam~
COPY ~ImprovedAnvil\bam\S!clc5in.bam~ ~override/S!clc5in.bam~
COPY ~ImprovedAnvil\bam\spwi905a.bam~ ~override/spwi905a.bam~
COPY ~ImprovedAnvil\bam\spwi905b.bam~ ~override/spwi905b.bam~
COPY ~ImprovedAnvil\bam\spwi905c.bam~ ~override/spwi905c.bam~
COPY ~ImprovedAnvil\bam\spwi522a.bam~ ~override/spwi522a.bam~
COPY ~ImprovedAnvil\bam\spwi522b.bam~ ~override/spwi522b.bam~
COPY ~ImprovedAnvil\bam\spwi522c.bam~ ~override/spwi522c.bam~
COPY ~ImprovedAnvil\bam\spwi902a.bam~ ~override/spwi902a.bam~
COPY ~ImprovedAnvil\bam\spwi902b.bam~ ~override/spwi902b.bam~
COPY ~ImprovedAnvil\bam\spwi902c.bam~ ~override/spwi902c.bam~
COPY ~ImprovedAnvil\bam\spwi815a.bam~ ~override/spwi815a.bam~
COPY ~ImprovedAnvil\bam\spwi815b.bam~ ~override/spwi815b.bam~
COPY ~ImprovedAnvil\bam\spwi815c.bam~ ~override/spwi815c.bam~
COPY ~ImprovedAnvil\bam\spwi712a.bam~ ~override/spwi712a.bam~
COPY ~ImprovedAnvil\bam\spwi712b.bam~ ~override/spwi712b.bam~
COPY ~ImprovedAnvil\bam\spwi712c.bam~ ~override/spwi712c.bam~
COPY ~ImprovedAnvil\bam\spwi618a.bam~ ~override/spwi618a.bam~
COPY ~ImprovedAnvil\bam\spwi618b.bam~ ~override/spwi618b.bam~
COPY ~ImprovedAnvil\bam\spwi618c.bam~ ~override/spwi618c.bam~
COPY ~ImprovedAnvil\bam\sppr703b.bam~ ~override/sppr703b.bam~
COPY ~ImprovedAnvil\bam\sppr703c.bam~ ~override/sppr703c.bam~
COPY ~ImprovedAnvil\bam\SPCLI12b.bam~ ~override/SPCLI12b.bam~
COPY ~ImprovedAnvil\bam\SPCLI13b.bam~ ~override/SPCLI13b.bam~
COPY ~ImprovedAnvil\bam\spwi511a.bam~ ~override/spwi511a.bam~
COPY ~ImprovedAnvil\bam\spwi511b.bam~ ~override/spwi511b.bam~
COPY ~ImprovedAnvil\bam\spwi511c.bam~ ~override/spwi511c.bam~
COPY ~ImprovedAnvil\bam\states2.bam~ ~override/states2.bam~
COPY ~ImprovedAnvil\bam\states.bam~ ~override/states.bam~
COPY ~ImprovedAnvil\bam\S!boo1in.bam~ ~override/S!boo1in.bam~
COPY ~ImprovedAnvil\bam\S!mirrin.bam~ ~override/S!mirrin.bam~
COPY ~ImprovedAnvil\bam\S!mir1in.bam~ ~override/S!mir1in.bam~
COPY ~ImprovedAnvil\bam\S!mir2in.bam~ ~override/S!mir2in.bam~
COPY ~ImprovedAnvil\bam\S!holwin.bam~ ~override/S!holwin.bam~
COPY ~ImprovedAnvil\bam\SPCLI15b.bam~ ~override/SPCLI15b.bam~
COPY ~ImprovedAnvil\bam\S!leatin.bam~ ~override/S!leatin.bam~
COPY ~ImprovedAnvil\bam\S!starin.bam~ ~override/S!starin.bam~
COPY ~ImprovedAnvil\bam\SPCLI16b.bam~ ~override/SPCLI16b.bam~
COPY ~ImprovedAnvil\bam\S!helm09.bam~ ~override/S!helm09.bam~
COPY ~ImprovedAnvil\bam\SPWI424a.bam~ ~override/SPWI424a.bam~
COPY ~ImprovedAnvil\bam\SPWI424b.bam~ ~override/SPWI424b.bam~
COPY ~ImprovedAnvil\bam\SPWI424c.bam~ ~override/SPWI424c.bam~

//Copying spells//

COPY ~ImprovedAnvil\spl\SPINI05.spl~ ~override/SPINI05.spl~
  SAY NAME1 @359

COPY ~ImprovedAnvil\spl\SPINI06.spl~ ~override/SPINI06.spl~
  SAY NAME1 @360

COPY ~ImprovedAnvil\spl\SPPR310.spl~ ~override/SPPR310.spl~
  SAY UNIDENTIFIED_DESC @361

COPY ~ImprovedAnvil\spl\SPPR319.spl~ ~override/SPPR319.spl~
  SAY UNIDENTIFIED_DESC @362

COPY ~ImprovedAnvil\spl\SPPR517.spl~ ~override/SPPR517.spl~
  SAY UNIDENTIFIED_DESC @363

COPY ~ImprovedAnvil\spl\SPWI224.spl~ ~override/SPWI224.spl~
  SAY UNIDENTIFIED_DESC @364

COPY ~ImprovedAnvil\spl\SPPR704.spl~ ~override/SPPR704.spl~
  SAY UNIDENTIFIED_DESC @365

COPY ~ImprovedAnvil\spl\SPWII09.spl~ ~override/SPWII09.spl~
  SAY NAME1 @368

COPY ~ImprovedAnvil\spl\SPWII11.spl~ ~override/SPWII11.spl~
  SAY NAME1 @369

COPY ~ImprovedAnvil\spl\SPWII12.spl~ ~override/SPWII12.spl~
  SAY NAME1 @370

COPY ~ImprovedAnvil\spl\SPPRI03.spl~ ~override/SPPRI03.spl~
  SAY NAME1 @371

COPY ~ImprovedAnvil\spl\SPINI07.spl~ ~override/SPINI07.spl~
  SAY NAME1 @373

COPY ~ImprovedAnvil\spl\SPWII14.spl~ ~override/SPWII14.spl~
  SAY NAME1 @374

COPY ~ImprovedAnvil\spl\SPWII17.spl~ ~override/SPWII17.spl~
  SAY NAME1 @374

COPY ~ImprovedAnvil\spl\SPWII16.spl~ ~override/SPWII16.spl~
  SAY NAME1 @375

COPY ~ImprovedAnvil\spl\SPWII18.spl~ ~override/SPWII18.spl~
  SAY NAME1 @376

COPY ~ImprovedAnvil\spl\SPWII19.spl~ ~override/SPWII19.spl~
  SAY NAME1 @377

COPY ~ImprovedAnvil\spl\SPWII20.spl~ ~override/SPWII20.spl~
  SAY NAME1 @378

COPY ~ImprovedAnvil\spl\SPPR207.spl~ ~override/SPPR207.spl~
  SAY UNIDENTIFIED_DESC @379

COPY ~ImprovedAnvil\spl\SPWII21.spl~ ~override/SPWII21.spl~
  SAY NAME1 @380

COPY ~ImprovedAnvil\spl\SPPRI04.spl~ ~override/SPPRI04.spl~
  SAY NAME1 @381

COPY ~ImprovedAnvil\spl\SPWII22.spl~ ~override/SPWII22.spl~
  SAY NAME1 @382

COPY ~ImprovedAnvil\spl\SPWII25.spl~ ~override/SPWII25.spl~
  SAY NAME1 @383

COPY ~ImprovedAnvil\spl\SPWII27.spl~ ~override/SPWII27.spl~
  SAY NAME1 @385

COPY ~ImprovedAnvil\spl\SPWII28.spl~ ~override/SPWII28.spl~
  SAY NAME1 @386

COPY ~ImprovedAnvil\spl\SPWII29.spl~ ~override/SPWII29.spl~
  SAY NAME1 @387

COPY ~ImprovedAnvil\spl\SPINI01.spl~ ~override/SPINI01.spl~
  SAY NAME1 @388

COPY ~ImprovedAnvil\spl\SPWII30.spl~ ~override/SPWII30.spl~
  SAY NAME1 @391

COPY ~ImprovedAnvil\spl\SPWII31.spl~ ~override/SPWII31.spl~
  SAY NAME1 @391

COPY ~ImprovedAnvil\spl\SPPR512.spl~ ~override/SPPR512.spl~
  SAY UNIDENTIFIED_DESC @392

COPY ~ImprovedAnvil\spl\SPPR708.spl~ ~override/SPPR708.spl~
  SAY UNIDENTIFIED_DESC @393

COPY ~ImprovedAnvil\spl\SPWI713.spl~ ~override/SPWI713.spl~
  SAY UNIDENTIFIED_DESC @269

COPY ~ImprovedAnvil\spl\SPWI314.spl~ ~override/SPWI314.spl~
  SAY UNIDENTIFIED_DESC @283

COPY ~ImprovedAnvil\spl\SPINI02.spl~ ~override/SPINI02.spl~
  SAY NAME1 @396

COPY ~ImprovedAnvil\spl\SPINI03.spl~ ~override/SPINI03.spl~
  SAY NAME1 @397

COPY ~ImprovedAnvil\spl\SPWII04.spl~ ~override/SPWII04.spl~
  SAY NAME1 @398

COPY ~ImprovedAnvil\spl\SPWII05.spl~ ~override/SPWII05.spl~
  SAY NAME1 @398

COPY ~ImprovedAnvil\spl\SPWII32.spl~ ~override/SPWII32.spl~
  SAY NAME1 @9500

COPY ~ImprovedAnvil\spl\SPWII33.spl~ ~override/SPWII33.spl~
  SAY NAME1 @9501

COPY ~ImprovedAnvil\spl\SPINI08.spl~ ~override/SPINI08.spl~
  SAY NAME1 @9502

COPY ~ImprovedAnvil\spl\SPWI106.spl~ ~override/SPWI106.spl~
  SAY UNIDENTIFIED_DESC @9503

COPY ~ImprovedAnvil\spl\SPCLI02.spl~ ~override/SPCLI02.spl~
  SAY NAME1 @9505

COPY ~ImprovedAnvil\spl\SPPR108.spl~ ~override/SPPR108.spl~
  SAY UNIDENTIFIED_DESC @9506

COPY ~ImprovedAnvil\spl\SPWII34.spl~ ~override/SPWII34.spl~
  SAY NAME1 @9507

COPY ~ImprovedAnvil\spl\SPINI12.spl~ ~override/SPINI12.spl~
  SAY NAME1 @9508

COPY ~ImprovedAnvil\spl\SPWI703.spl~ ~override/SPWI703.spl~
  SAY NAME1 @9036
  SAY UNIDENTIFIED_DESC @9037

COPY ~ImprovedAnvil\spl\SPWI210.spl~ ~override/SPWI210.spl~
  SAY UNIDENTIFIED_DESC @9049

COPY ~ImprovedAnvil\spl\SPWI519.spl~ ~override/SPWI519.spl~
  SAY UNIDENTIFIED_DESC @9050

COPY ~ImprovedAnvil\spl\SPPR508.spl~ ~override/SPPR508.spl~
  SAY UNIDENTIFIED_DESC @9051

COPY ~ImprovedAnvil\spl\SPWI313.spl~ ~override/SPWI313.spl~
  SAY UNIDENTIFIED_DESC @9055

COPY ~ImprovedAnvil\spl\SPWI413.spl~ ~override/SPWI413.spl~
  SAY NAME1 @9056
  SAY UNIDENTIFIED_DESC @9057

COPY ~ImprovedAnvil\spl\SPWI804.spl~ ~override/SPWI804.spl~
  SAY NAME1 @9070

COPY ~ImprovedAnvil\spl\SPWII35.spl~ ~override/SPWII35.spl~
  SAY NAME1 @9509

COPY ~ImprovedAnvil\spl\SPWII36.spl~ ~override/SPWII36.spl~
  SAY NAME1 @9510

COPY ~ImprovedAnvil\spl\SPINI13.spl~ ~override/SPINI13.spl~
  SAY NAME1 @9511

COPY ~ImprovedAnvil\spl\SPPR111.spl~ ~override/SPPR111.spl~
  SAY UNIDENTIFIED_DESC @9512

COPY ~ImprovedAnvil\spl\SPCL922.spl~ ~override/SPCL922.spl~
  SAY NAME1 @9513
  SAY UNIDENTIFIED_DESC @9514

COPY ~ImprovedAnvil\spl\SPINI27.spl~ ~override/SPINI27.spl~
  SAY NAME1 @9513

COPY ~ImprovedAnvil\spl\SPWII37.spl~ ~override/SPWII37.spl~
  SAY NAME1 @9515

COPY ~ImprovedAnvil\spl\SPINI15.spl~ ~override/SPINI15.spl~
  SAY NAME1 @9516

COPY ~ImprovedAnvil\spl\SPINI17.spl~ ~override/SPINI17.spl~
  SAY NAME1 @9517

COPY ~ImprovedAnvil\spl\SPINI18.spl~ ~override/SPINI18.spl~
  SAY NAME1 @9518

COPY ~ImprovedAnvil\spl\SPINI19.spl~ ~override/SPINI19.spl~
  SAY NAME1 @9519

COPY ~ImprovedAnvil\spl\SPWI523.spl~ ~override/SPWI523.spl~
  SAY UNIDENTIFIED_DESC @9520

COPY ~ImprovedAnvil\spl\SPINI26.spl~ ~override/SPINI26.spl~
  SAY NAME1 @9521

COPY ~ImprovedAnvil\spl\SPCLI04.spl~ ~override/SPCLI04.spl~
  SAY NAME1 @9522

COPY ~ImprovedAnvil\spl\SPPRI15.spl~ ~override/SPPRI15.spl~
  SAY NAME1 @9523
  SAY UNIDENTIFIED_DESC @9524

COPY ~ImprovedAnvil\spl\SPPRI16.spl~ ~override/SPPRI16.spl~
  SAY NAME1 @9525
  SAY UNIDENTIFIED_DESC @9526

COPY ~ImprovedAnvil\spl\SPPRI17.spl~ ~override/SPPRI17.spl~
  SAY NAME1 @9527
  SAY UNIDENTIFIED_DESC @9528

COPY ~ImprovedAnvil\spl\SPINI29.spl~ ~override/SPINI29.spl~
  SAY NAME1 @9529

COPY ~ImprovedAnvil\spl\SPWII39.spl~ ~override/SPWII39.spl~
  SAY NAME1 @9530

COPY ~ImprovedAnvil\spl\SPWII13.spl~ ~override/SPWII13.spl~
  SAY NAME1 @9531

COPY ~ImprovedAnvil\spl\SPPR409.spl~ ~override/SPPR409.spl~
  SAY UNIDENTIFIED_DESC @9532

COPY ~ImprovedAnvil\spl\SPINI31.spl~ ~override/SPINI31.spl~
  SAY NAME1 @9533

COPY ~ImprovedAnvil\spl\SPCLI06.spl~ ~override/SPCLI06.spl~
  SAY NAME1 @9534

COPY ~ImprovedAnvil\spl\SPCLI08.spl~ ~override/SPCLI08.spl~
  SAY NAME1 @9534

COPY ~ImprovedAnvil\spl\SPINI34.spl~ ~override/SPINI34.spl~
  SAY NAME1 @9535

COPY ~ImprovedAnvil\spl\SPINI37.spl~ ~override/SPINI37.spl~
  SAY NAME1 @9536

COPY ~ImprovedAnvil\spl\SPINI38.spl~ ~override/SPINI38.spl~
  SAY NAME1 @9536

COPY ~ImprovedAnvil\spl\SPWII40.spl~ ~override/SPWII40.spl~
  SAY NAME1 @9537

COPY ~ImprovedAnvil\spl\SPPR211.spl~ ~override/SPPR211.spl~
  SAY UNIDENTIFIED_DESC @9538

COPY ~ImprovedAnvil\spl\SPIN692.spl~ ~override/SPIN692.spl~
  SAY NAME1 @9539

COPY ~ImprovedAnvil\spl\SPINI39.spl~ ~override/SPINI39.spl~
  SAY NAME1 @9540

COPY ~ImprovedAnvil\spl\SPINI42.spl~ ~override/SPINI42.spl~
  SAY NAME1 @9541

COPY ~ImprovedAnvil\spl\SPINI43.spl~ ~override/SPINI43.spl~
  SAY NAME1 @9542

COPY ~ImprovedAnvil\spl\SPINI45.spl~ ~override/SPINI45.spl~
  SAY NAME1 @9543

COPY ~ImprovedAnvil\spl\SPINI46.spl~ ~override/SPINI46.spl~
  SAY NAME1 @9544

COPY ~ImprovedAnvil\spl\SPINI47.spl~ ~override/SPINI47.spl~
  SAY NAME1 @9545

COPY ~ImprovedAnvil\spl\SPINI48.spl~ ~override/SPINI48.spl~
  SAY NAME1 @9546

COPY ~ImprovedAnvil\spl\SPINI49.spl~ ~override/SPINI49.spl~
  SAY NAME1 @9547

COPY ~ImprovedAnvil\spl\SPINI50.spl~ ~override/SPINI50.spl~
  SAY NAME1 @9548

COPY ~ImprovedAnvil\spl\SPINI44.spl~ ~override/SPINI44.spl~
  SAY NAME1 @9549

COPY ~ImprovedAnvil\spl\SPPR509.spl~ ~override/SPPR509.spl~
  SAY UNIDENTIFIED_DESC @9550

COPY ~ImprovedAnvil\spl\SPWI222.spl~ ~override/SPWI222.spl~
  SAY UNIDENTIFIED_DESC @9551

COPY ~ImprovedAnvil\spl\SPWI723.spl~ ~override/SPWI723.spl~
  SAY UNIDENTIFIED_DESC @9552

COPY ~ImprovedAnvil\spl\SPWI707.spl~ ~override/SPWI707.spl~
  SAY NAME1 @9097
  SAY UNIDENTIFIED_DESC @9098

COPY ~ImprovedAnvil\spl\SPPR215.spl~ ~override/SPPR215.spl~
  SAY NAME1 @9099
  SAY UNIDENTIFIED_DESC @9100

COPY ~ImprovedAnvil\spl\SPPRI20.spl~ ~override/SPPRI20.spl~
  SAY NAME1 @9101
  SAY UNIDENTIFIED_DESC @9102

COPY ~ImprovedAnvil\spl\SPPRI21.spl~ ~override/SPPRI21.spl~
  SAY NAME1 @9103
  SAY UNIDENTIFIED_DESC @9104

COPY ~ImprovedAnvil\spl\SPWI807.spl~ ~override/SPWI807.spl~
  SAY NAME1 @9105
  SAY UNIDENTIFIED_DESC @9106

COPY ~ImprovedAnvil\spl\SPWI607.spl~ ~override/SPWI607.spl~
  SAY NAME1 @9107
  SAY UNIDENTIFIED_DESC @9108

COPY ~ImprovedAnvil\spl\SPINI51.spl~ ~override/SPINI51.spl~
  SAY NAME1 @9553

COPY ~ImprovedAnvil\spl\SPWI925.spl~ ~override/SPWI925.spl~
  SAY UNIDENTIFIED_DESC @9554

COPY ~ImprovedAnvil\spl\SPWI214.spl~ ~override/SPWI214.spl~
  SAY UNIDENTIFIED_DESC @9109

COPY ~ImprovedAnvil\spl\SPWI905.spl~ ~override/SPWI905.spl~
  SAY NAME1 @9156

COPY ~ImprovedAnvil\spl\SPWII55.spl~ ~override/SPWII55.spl~
  SAY NAME1 @9156

COPY ~ImprovedAnvil\spl\SPWII56.spl~ ~override/SPWII56.spl~
  SAY NAME1 @9156

COPY ~ImprovedAnvil\spl\SPCL918.spl~ ~override/SPCL918.spl~
  SAY UNIDENTIFIED_DESC @9555

COPY ~ImprovedAnvil\spl\gbalchpr.spl~ ~override/gbalchpr.spl~
  SAY UNIDENTIFIED_DESC @9556

COPY ~ImprovedAnvil\spl\gbalchmg.spl~ ~override/gbalchmg.spl~
  SAY UNIDENTIFIED_DESC @9557

COPY ~ImprovedAnvil\spl\gbscrbpr.spl~ ~override/gbscrbpr.spl~
  SAY UNIDENTIFIED_DESC @9558

COPY ~ImprovedAnvil\spl\gbscrbmg.spl~ ~override/gbscrbmg.spl~
  SAY UNIDENTIFIED_DESC @9559

COPY ~ImprovedAnvil\spl\SPCL919.spl~ ~override/SPCL919.spl~
  SAY UNIDENTIFIED_DESC @9560

COPY ~ImprovedAnvil\spl\SPPR304.spl~ ~override/SPPR304.spl~
  SAY UNIDENTIFIED_DESC @9563

COPY ~ImprovedAnvil\spl\SPINI68.spl~ ~override/SPINI68.spl~
  SAY NAME1 @9564

COPY ~ImprovedAnvil\spl\SPWI318.spl~ ~override/SPWI318.spl~
  SAY UNIDENTIFIED_DESC @9163

COPY ~ImprovedAnvil\spl\SPWI522.spl~ ~override/SPWI522.spl~
  SAY NAME1 @9164
  SAY UNIDENTIFIED_DESC @9165

COPY ~ImprovedAnvil\spl\SPWI902.spl~ ~override/SPWI902.spl~
  SAY NAME1 @9166
  SAY UNIDENTIFIED_DESC @9167

COPY ~ImprovedAnvil\spl\SPWI815.spl~ ~override/SPWI815.spl~
  SAY NAME1 @9168
  SAY UNIDENTIFIED_DESC @366

COPY ~ImprovedAnvil\spl\SPWI712.spl~ ~override/SPWI712.spl~
  SAY NAME1 @9169
  SAY UNIDENTIFIED_DESC @9170

COPY ~ImprovedAnvil\spl\SPWI618.spl~ ~override/SPWI618.spl~
  SAY NAME1 @9171
  SAY UNIDENTIFIED_DESC @9172

COPY ~ImprovedAnvil\spl\SPPR729.spl~ ~override/SPPR729.spl~
  SAY NAME1 @9105
  SAY UNIDENTIFIED_DESC @9565

COPY ~ImprovedAnvil\spl\SPPR703.spl~ ~override/SPPR703.spl~
  SAY NAME1 @9566
  SAY UNIDENTIFIED_DESC @9567

COPY ~ImprovedAnvil\spl\SPCLI12.spl~ ~override/SPCLI12.spl~
  SAY NAME1 @9568
  SAY UNIDENTIFIED_DESC @9569

COPY ~ImprovedAnvil\spl\SPPR710.spl~ ~override/SPPR710.spl~
  SAY NAME1 @9097
  SAY UNIDENTIFIED_DESC @9570

COPY ~ImprovedAnvil\spl\SPCLI13.spl~ ~override/SPCLI13.spl~
  SAY NAME1 @9571
  SAY UNIDENTIFIED_DESC @9561

COPY ~ImprovedAnvil\spl\SPWI511.spl~ ~override/SPWI511.spl~
  SAY NAME1 @9174

COPY ~ImprovedAnvil\spl\SPWII51.spl~ ~override/SPWII51.spl~
  SAY NAME1 @9572

COPY ~ImprovedAnvil\spl\SPINI73.spl~ ~override/SPINI73.spl~
  SAY NAME1 @9573

COPY ~ImprovedAnvil\spl\SPWII53.spl~ ~override/SPWII53.spl~
  SAY NAME1 @9574

COPY ~ImprovedAnvil\spl\SPWII54.spl~ ~override/SPWII54.spl~
  SAY NAME1 @9575

COPY ~ImprovedAnvil\spl\SPCLI15.spl~ ~override/SPCLI15.spl~
  SAY NAME1 @9576
  SAY UNIDENTIFIED_DESC @9577

COPY ~ImprovedAnvil\spl\SPPRI24.spl~ ~override/SPPRI24.spl~
  SAY NAME1 @9578

COPY ~ImprovedAnvil\spl\SPINI78.spl~ ~override/SPINI78.spl~
  SAY NAME1 @9579

COPY ~ImprovedAnvil\spl\SPINI79.spl~ ~override/SPINI79.spl~
  SAY NAME1 @9580

COPY ~ImprovedAnvil\spl\SPINI80.spl~ ~override/SPINI80.spl~
  SAY NAME1 @9581

COPY ~ImprovedAnvil\spl\SPPR613.spl~ ~override/SPPR613.spl~
  SAY NAME1 @9582

COPY ~ImprovedAnvil\spl\SPCLI16.spl~ ~override/SPCLI16.spl~
  SAY NAME1 @9583
  SAY UNIDENTIFIED_DESC @9584

COPY ~ImprovedAnvil\spl\SPINI87.spl~ ~override/SPINI87.spl~
  SAY NAME1 @10195

COPY ~ImprovedAnvil\spl\SPWI424.spl~ ~override/SPWI424.spl~
  SAY NAME1 @11105
  SAY UNIDENTIFIED_DESC @11106

COPY ~ImprovedAnvil\spl\SPPR415.spl~ ~override/SPPR415.spl~
  SAY NAME1 @11105
  SAY UNIDENTIFIED_DESC @11107

COPY ~ImprovedAnvil\spl\SPINI04.spl~ ~override/SPINI04.spl~

COPY ~ImprovedAnvil\spl\SPPRI01.spl~ ~override/SPPRI01.spl~

COPY ~ImprovedAnvil\spl\SPWII01.spl~ ~override/SPWII01.spl~

COPY ~ImprovedAnvil\spl\SPWII02.spl~ ~override/SPWII02.spl~

COPY ~ImprovedAnvil\spl\SPWII03.spl~ ~override/SPWII03.spl~

COPY ~ImprovedAnvil\spl\SPWII06.spl~ ~override/SPWII06.spl~

COPY ~ImprovedAnvil\spl\SPWII07.spl~ ~override/SPWII07.spl~

COPY ~ImprovedAnvil\spl\SPIN545.spl~ ~override/SPIN545.spl~

COPY ~ImprovedAnvil\spl\SPIN678.spl~ ~override/SPIN678.spl~

COPY ~ImprovedAnvil\spl\SPIN961.spl~ ~override/SPIN961.spl~

COPY ~ImprovedAnvil\spl\SPIN973.spl~ ~override/SPIN973.spl~

COPY ~ImprovedAnvil\spl\SPIN104.spl~ ~override/SPIN104.spl~

COPY ~ImprovedAnvil\spl\SPIN106.spl~ ~override/SPIN106.spl~

COPY ~ImprovedAnvil\spl\SPWI119.spl~ ~override/SPWI119.spl~

COPY ~ImprovedAnvil\spl\SPWI302.spl~ ~override/SPWI302.spl~

COPY ~ImprovedAnvil\spl\SPWI590.spl~ ~override/SPWI590.spl~

COPY ~ImprovedAnvil\spl\SPWI591.spl~ ~override/SPWI591.spl~

COPY ~ImprovedAnvil\spl\SPWI592.spl~ ~override/SPWI592.spl~

COPY ~ImprovedAnvil\spl\SPWI593.spl~ ~override/SPWI593.spl~

COPY ~ImprovedAnvil\spl\SPWI594.spl~ ~override/SPWI594.spl~

COPY ~ImprovedAnvil\spl\SPWI595.spl~ ~override/SPWI595.spl~

COPY ~ImprovedAnvil\spl\SPWI596.spl~ ~override/SPWI596.spl~

COPY ~ImprovedAnvil\spl\SPWI597.spl~ ~override/SPWI597.spl~

COPY ~ImprovedAnvil\spl\SPCL421.spl~ ~override/SPCL421.spl~

COPY ~ImprovedAnvil\spl\SPCL541.spl~ ~override/SPCL541.spl~

COPY ~ImprovedAnvil\spl\SPPR403.spl~ ~override/SPPR403.spl~

COPY ~ImprovedAnvil\spl\SPCL152.spl~ ~override/SPCL152.spl~

COPY ~ImprovedAnvil\spl\SPIN682.spl~ ~override/SPIN682.spl~

COPY ~ImprovedAnvil\spl\SPIN596.spl~ ~override/SPIN596.spl~

COPY ~ImprovedAnvil\spl\SPIN691.spl~ ~override/SPIN691.spl~

COPY ~ImprovedAnvil\spl\SPIN693.spl~ ~override/SPIN693.spl~

COPY ~ImprovedAnvil\spl\SPIN531.spl~ ~override/SPIN531.spl~

COPY ~ImprovedAnvil\spl\SPIN532.spl~ ~override/SPIN532.spl~

COPY ~ImprovedAnvil\spl\SPPRI02.spl~ ~override/SPPRI02.spl~

COPY ~ImprovedAnvil\spl\SPWI421.spl~ ~override/SPWI421.spl~

COPY ~ImprovedAnvil\spl\SPIN805.spl~ ~override/SPIN805.spl~

COPY ~ImprovedAnvil\spl\SPWII08.spl~ ~override/SPWII08.spl~

COPY ~ImprovedAnvil\spl\SPWII10.spl~ ~override/SPWII10.spl~

COPY ~ImprovedAnvil\spl\spyancd.spl~ ~override/spyancd.spl~

COPY ~ImprovedAnvil\spl\SPPR725D.spl~ ~override/SPPR725D.spl~

COPY ~ImprovedAnvil\spl\spin602.spl~ ~override/spin602.spl~

COPY ~ImprovedAnvil\spl\spin603.spl~ ~override/spin603.spl~

COPY ~ImprovedAnvil\spl\spin604.spl~ ~override/spin604.spl~

COPY ~ImprovedAnvil\spl\spin605.spl~ ~override/spin605.spl~

COPY ~ImprovedAnvil\spl\SPIN977.spl~ ~override/SPIN977.spl~

COPY ~ImprovedAnvil\spl\SPIN978.spl~ ~override/SPIN978.spl~

COPY ~ImprovedAnvil\spl\SPWII15.spl~ ~override/SPWII15.spl~

COPY ~ImprovedAnvil\spl\SPWII23.spl~ ~override/SPWII23.spl~

COPY ~ImprovedAnvil\spl\SPWII24.spl~ ~override/SPWII24.spl~

COPY ~ImprovedAnvil\spl\SPCL423.spl~ ~override/SPCL423.spl~

COPY ~ImprovedAnvil\spl\SPWII26.spl~ ~override/SPWII26.spl~

COPY ~ImprovedAnvil\spl\SPIN834.spl~ ~override/SPIN834.spl~

COPY ~ImprovedAnvil\spl\SPIN684.spl~ ~override/SPIN684.spl~

COPY ~ImprovedAnvil\spl\SPPR303.spl~ ~override/SPPR303.spl~

COPY ~ImprovedAnvil\spl\SPPR505.spl~ ~override/SPPR505.spl~

COPY ~ImprovedAnvil\spl\SPPR505D.spl~ ~override/SPPR505D.spl~

COPY ~ImprovedAnvil\spl\SPWI326.spl~ ~override/SPWI326.spl~

COPY ~ImprovedAnvil\spl\SPWI609.spl~ ~override/SPWI609.spl~

COPY ~ImprovedAnvil\spl\SPWI609D.spl~ ~override/SPWI609D.spl~

COPY ~ImprovedAnvil\spl\SPCL232.spl~ ~override/SPCL232.spl~

COPY ~ImprovedAnvil\spl\SPCL232D.spl~ ~override/SPCL232D.spl~

COPY ~ImprovedAnvil\spl\SPPR950.spl~ ~override/SPPR950.spl~

COPY ~ImprovedAnvil\spl\SPCLI01.spl~ ~override/SPCLI01.spl~

COPY ~ImprovedAnvil\spl\SPWI409.spl~ ~override/SPWI409.spl~

COPY ~ImprovedAnvil\spl\SPWI603.spl~ ~override/SPWI603.spl~

COPY ~ImprovedAnvil\spl\SPRA301.spl~ ~override/SPRA301.spl~

COPY ~ImprovedAnvil\spl\SPRA303.spl~ ~override/SPRA303.spl~

COPY ~ImprovedAnvil\spl\SPWI613.spl~ ~override/SPWI613.spl~

COPY ~ImprovedAnvil\spl\SPWI410.spl~ ~override/SPWI410.spl~

COPY ~ImprovedAnvil\spl\SPWI125.spl~ ~override/SPWI125.spl~

COPY ~ImprovedAnvil\spl\SPWI714.spl~ ~override/SPWI714.spl~

COPY ~ImprovedAnvil\spl\SPPR313.spl~ ~override/SPPR313.spl~

COPY ~ImprovedAnvil\spl\SPWISH12.spl~ ~override/SPWISH12.spl~

COPY ~ImprovedAnvil\spl\SPCL907.spl~ ~override/SPCL907.spl~

COPY ~ImprovedAnvil\spl\SPCL321.spl~ ~override/SPCL321.spl~

COPY ~ImprovedAnvil\spl\SPWI405.spl~ ~override/SPWI405.spl~

COPY ~ImprovedAnvil\spl\SPWI721.spl~ ~override/SPWI721.spl~

COPY ~ImprovedAnvil\spl\SPIN992.spl~ ~override/SPIN992.spl~

COPY ~ImprovedAnvil\spl\SPINI09.spl~ ~override/SPINI09.spl~

COPY ~ImprovedAnvil\spl\SPINI10.spl~ ~override/SPINI10.spl~

COPY ~ImprovedAnvil\spl\SPCL222.spl~ ~override/SPCL222.spl~

COPY ~ImprovedAnvil\spl\SPPRI05.spl~ ~override/SPPRI05.spl~

COPY ~ImprovedAnvil\spl\SPINI11.spl~ ~override/SPINI11.spl~

COPY ~ImprovedAnvil\spl\SPINI14.spl~ ~override/SPINI14.spl~

COPY ~ImprovedAnvil\spl\SPCL542a.spl~ ~override/SPCL542a.spl~

COPY ~ImprovedAnvil\spl\SPPR306.spl~ ~override/SPPR306.spl~

COPY ~ImprovedAnvil\spl\SPPR210.spl~ ~override/SPPR210.spl~

COPY ~ImprovedAnvil\spl\SPINI16.spl~ ~override/SPINI16.spl~

COPY ~ImprovedAnvil\spl\SPWI918.spl~ ~override/SPWI918.spl~

COPY ~ImprovedAnvil\spl\SPWI818.spl~ ~override/SPWI818.spl~

COPY ~ImprovedAnvil\spl\SPWI915.spl~ ~override/SPWI915.spl~

COPY ~ImprovedAnvil\spl\SPWI920.spl~ ~override/SPWI920.spl~

COPY ~ImprovedAnvil\spl\SPPR721.spl~ ~override/SPPR721.spl~

COPY ~ImprovedAnvil\spl\SPWII38.spl~ ~override/SPWII38.spl~

COPY ~ImprovedAnvil\spl\SPCL231.spl~ ~override/SPCL231.spl~

COPY ~ImprovedAnvil\spl\SPINI20.spl~ ~override/SPINI20.spl~

COPY ~ImprovedAnvil\spl\SPINI21.spl~ ~override/SPINI21.spl~

COPY ~ImprovedAnvil\spl\SPINI22.spl~ ~override/SPINI22.spl~

COPY ~ImprovedAnvil\spl\SPINI23.spl~ ~override/SPINI23.spl~

COPY ~ImprovedAnvil\spl\SPINI24.spl~ ~override/SPINI24.spl~

COPY ~ImprovedAnvil\spl\SPINI25.spl~ ~override/SPINI25.spl~

COPY ~ImprovedAnvil\spl\SPCLI03.spl~ ~override/SPCLI03.spl~

COPY ~ImprovedAnvil\spl\SPPRI06.spl~ ~override/SPPRI06.spl~

COPY ~ImprovedAnvil\spl\SPPRI07.spl~ ~override/SPPRI07.spl~

COPY ~ImprovedAnvil\spl\SPPRI08.spl~ ~override/SPPRI08.spl~

COPY ~ImprovedAnvil\spl\SPPRI11.spl~ ~override/SPPRI11.spl~

COPY ~ImprovedAnvil\spl\SPPRI12.spl~ ~override/SPPRI12.spl~

COPY ~ImprovedAnvil\spl\SPPRI13.spl~ ~override/SPPRI13.spl~

COPY ~ImprovedAnvil\spl\SPPRI14.spl~ ~override/SPPRI14.spl~

COPY ~ImprovedAnvil\spl\SPPRI18.spl~ ~override/SPPRI18.spl~

COPY ~ImprovedAnvil\spl\SPINI28.spl~ ~override/SPINI28.spl~

COPY ~ImprovedAnvil\spl\SPCL311.spl~ ~override/SPCL311.spl~

COPY ~ImprovedAnvil\spl\SPIN621.spl~ ~override/SPIN621.spl~

COPY ~ImprovedAnvil\spl\SPIN632.spl~ ~override/SPIN632.spl~

COPY ~ImprovedAnvil\spl\SPIN774.spl~ ~override/SPIN774.spl~

COPY ~ImprovedAnvil\spl\SPINI30.spl~ ~override/SPINI30.spl~

COPY ~ImprovedAnvil\spl\SPIN597.spl~ ~override/SPIN597.spl~

COPY ~ImprovedAnvil\spl\DRGRBRHT.spl~ ~override/DRGRBRHT.spl~

COPY ~ImprovedAnvil\spl\spin694.spl~ ~override/spin694.spl~

COPY ~ImprovedAnvil\spl\SPPR717.spl~ ~override/SPPR717.spl~

COPY ~ImprovedAnvil\spl\SPCL242.spl~ ~override/SPCL242.spl~

COPY ~ImprovedAnvil\spl\SPWI708.spl~ ~override/SPWI708.spl~

COPY ~ImprovedAnvil\spl\SPWI808.spl~ ~override/SPWI808.spl~

COPY ~ImprovedAnvil\spl\SPIN686.spl~ ~override/SPIN686.spl~

COPY ~ImprovedAnvil\spl\SPWI611.spl~ ~override/SPWI611.spl~

COPY ~ImprovedAnvil\spl\SPWI907.spl~ ~override/SPWI907.spl~

COPY ~ImprovedAnvil\spl\SPIN997.spl~ ~override/SPIN997.spl~

COPY ~ImprovedAnvil\spl\SPCLI05.spl~ ~override/SPCLI05.spl~

COPY ~ImprovedAnvil\spl\SPINI32.spl~ ~override/SPINI32.spl~

COPY ~ImprovedAnvil\spl\SPINI33.spl~ ~override/SPINI33.spl~

COPY ~ImprovedAnvil\spl\SPIN788.spl~ ~override/SPIN788.spl~

COPY ~ImprovedAnvil\spl\SPINI35.spl~ ~override/SPINI35.spl~

COPY ~ImprovedAnvil\spl\SPWI903.spl~ ~override/SPWI903.spl~

COPY ~ImprovedAnvil\spl\SPINI36.spl~ ~override/SPINI36.spl~

COPY ~ImprovedAnvil\spl\SPIN550.spl~ ~override/SPIN550.spl~

COPY ~ImprovedAnvil\spl\SPIN536.spl~ ~override/SPIN536.spl~

COPY ~ImprovedAnvil\spl\SPIN689.spl~ ~override/SPIN689.spl~

COPY ~ImprovedAnvil\spl\SPPR606.spl~ ~override/SPPR606.spl~

COPY ~ImprovedAnvil\spl\SPIN839.spl~ ~override/SPIN839.spl~

COPY ~ImprovedAnvil\spl\SPWII41.spl~ ~override/SPWII41.spl~

COPY ~ImprovedAnvil\spl\SPCLI07.spl~ ~override/SPCLI07.spl~

COPY ~ImprovedAnvil\spl\SPINI40.spl~ ~override/SPINI40.spl~

COPY ~ImprovedAnvil\spl\SPINI41.spl~ ~override/SPINI41.spl~

COPY ~ImprovedAnvil\spl\SPWII42.spl~ ~override/SPWII42.spl~

COPY ~ImprovedAnvil\spl\SPWI219.spl~ ~override/SPWI219.spl~

COPY ~ImprovedAnvil\spl\SPIN986.spl~ ~override/SPIN986.spl~

COPY ~ImprovedAnvil\spl\SPIN989.spl~ ~override/SPIN989.spl~

COPY ~ImprovedAnvil\spl\SPIN990.spl~ ~override/SPIN990.spl~

COPY ~ImprovedAnvil\spl\SPIN991.spl~ ~override/SPIN991.spl~

COPY ~ImprovedAnvil\spl\SPCL920a.spl~ ~override/SPCL920a.spl~

COPY ~ImprovedAnvil\spl\SPCLI09.spl~ ~override/SPCLI09.spl~

COPY ~ImprovedAnvil\spl\SPCLI10.spl~ ~override/SPCLI10.spl~

COPY ~ImprovedAnvil\spl\SPWI513.spl~ ~override/SPWI513.spl~

COPY ~ImprovedAnvil\spl\SPWISH08.spl~ ~override/SPWISH08.spl~

COPY ~ImprovedAnvil\spl\SPWISH10.spl~ ~override/SPWISH10.spl~

COPY ~ImprovedAnvil\spl\SPWISH26.spl~ ~override/SPWISH26.spl~

COPY ~ImprovedAnvil\spl\SPWISH31.spl~ ~override/SPWISH31.spl~

COPY ~ImprovedAnvil\spl\SPWISH30.spl~ ~override/SPWISH30.spl~

COPY ~ImprovedAnvil\spl\SPWISH36.spl~ ~override/SPWISH36.spl~

COPY ~ImprovedAnvil\spl\SPWISH37.spl~ ~override/SPWISH37.spl~

COPY ~ImprovedAnvil\spl\SPWISH38.spl~ ~override/SPWISH38.spl~

COPY ~ImprovedAnvil\spl\SPWISH40.spl~ ~override/SPWISH40.spl~

COPY ~ImprovedAnvil\spl\sppr951d.spl~ ~override/sppr951d.spl~

COPY ~ImprovedAnvil\spl\SPCL900.spl~ ~override/SPCL900.spl~

COPY ~ImprovedAnvil\spl\SPCL901.spl~ ~override/SPCL901.spl~

COPY ~ImprovedAnvil\spl\SPWI414.spl~ ~override/SPWI414.spl~

COPY ~ImprovedAnvil\spl\SPCL221.spl~ ~override/SPCL221.spl~

COPY ~ImprovedAnvil\spl\SPIN674.spl~ ~override/SPIN674.spl~

COPY ~ImprovedAnvil\spl\SPINI52.spl~ ~override/SPINI52.spl~

COPY ~ImprovedAnvil\spl\SPINI53.spl~ ~override/SPINI53.spl~

COPY ~ImprovedAnvil\spl\SPWII43.spl~ ~override/SPWII43.spl~

COPY ~ImprovedAnvil\spl\SPPRI09.spl~ ~override/SPPRI09.spl~

COPY ~ImprovedAnvil\spl\SPINI54.spl~ ~override/SPINI54.spl~

COPY ~ImprovedAnvil\spl\SPIN688.spl~ ~override/SPIN688.spl~

COPY ~ImprovedAnvil\spl\SPPRI10.spl~ ~override/SPPRI10.spl~

COPY ~ImprovedAnvil\spl\SPWI404.spl~ ~override/SPWI404.spl~

COPY ~ImprovedAnvil\spl\SPCL233b.spl~ ~override/SPCL233b.spl~

COPY ~ImprovedAnvil\spl\SPCL151.spl~ ~override/SPCL151.spl~

COPY ~ImprovedAnvil\spl\BHAAL3A.spl~ ~override/BHAAL3A.spl~

COPY ~ImprovedAnvil\spl\SPCL741.spl~ ~override/SPCL741.spl~

COPY ~ImprovedAnvil\spl\SPIN854.spl~ ~override/SPIN854.spl~

COPY ~ImprovedAnvil\spl\SPPR413.spl~ ~override/SPPR413.spl~

COPY ~ImprovedAnvil\spl\SPWI412.spl~ ~override/SPWI412.spl~

COPY ~ImprovedAnvil\spl\SPWI102.spl~ ~override/SPWI102.spl~

COPY ~ImprovedAnvil\spl\SPWI114.spl~ ~override/SPWI114.spl~

COPY ~ImprovedAnvil\spl\SPCLI11.spl~ ~override/SPCLI11.spl~

COPY ~ImprovedAnvil\spl\SPINI55.spl~ ~override/SPINI55.spl~

COPY ~ImprovedAnvil\spl\SPINI56.spl~ ~override/SPINI56.spl~

COPY ~ImprovedAnvil\spl\SPINI57.spl~ ~override/SPINI57.spl~

COPY ~ImprovedAnvil\spl\SPINI58.spl~ ~override/SPINI58.spl~

COPY ~ImprovedAnvil\spl\SPINI59.spl~ ~override/SPINI59.spl~

COPY ~ImprovedAnvil\spl\SPINI60.spl~ ~override/SPINI60.spl~

COPY ~ImprovedAnvil\spl\SPINI61.spl~ ~override/SPINI61.spl~

COPY ~ImprovedAnvil\spl\SPINI62.spl~ ~override/SPINI62.spl~

COPY ~ImprovedAnvil\spl\SPINI63.spl~ ~override/SPINI63.spl~

COPY ~ImprovedAnvil\spl\SPINI64.spl~ ~override/SPINI64.spl~

COPY ~ImprovedAnvil\spl\SPINI65.spl~ ~override/SPINI65.spl~

COPY ~ImprovedAnvil\spl\SPPR603D.spl~ ~override/SPPR603D.spl~

COPY ~ImprovedAnvil\spl\SPWISH14.spl~ ~override/SPWISH14.spl~

COPY ~ImprovedAnvil\spl\SPWISH23.spl~ ~override/SPWISH23.spl~

COPY ~ImprovedAnvil\spl\SPWISH28.spl~ ~override/SPWISH28.spl~

COPY ~ImprovedAnvil\spl\SPWISH29.spl~ ~override/SPWISH29.spl~

COPY ~ImprovedAnvil\spl\SPWISH33.spl~ ~override/SPWISH33.spl~

COPY ~ImprovedAnvil\spl\SPWISH39.spl~ ~override/SPWISH39.spl~

COPY ~ImprovedAnvil\spl\SPWISH41.spl~ ~override/SPWISH41.spl~

COPY ~ImprovedAnvil\spl\SPWISH42.spl~ ~override/SPWISH42.spl~

COPY ~ImprovedAnvil\spl\SPWISH43.spl~ ~override/SPWISH43.spl~

COPY ~ImprovedAnvil\spl\SPWISH44.spl~ ~override/SPWISH44.spl~

COPY ~ImprovedAnvil\spl\SPWISH45.spl~ ~override/SPWISH45.spl~

COPY ~ImprovedAnvil\spl\SPIN885.spl~ ~override/SPIN885.spl~

COPY ~ImprovedAnvil\spl\SPWI485.spl~ ~override/SPWI485.spl~

COPY ~ImprovedAnvil\spl\SPWI486.spl~ ~override/SPWI486.spl~

COPY ~ImprovedAnvil\spl\SPWI487.spl~ ~override/SPWI487.spl~

COPY ~ImprovedAnvil\spl\SPWI488.spl~ ~override/SPWI488.spl~

COPY ~ImprovedAnvil\spl\SPCL912.spl~ ~override/SPCL912.spl~

COPY ~ImprovedAnvil\spl\SPCL912B.spl~ ~override/SPCL912B.spl~

COPY ~ImprovedAnvil\spl\SPCL917.spl~ ~override/SPCL917.spl~

COPY ~ImprovedAnvil\spl\SPWII44.spl~ ~override/SPWII44.spl~

COPY ~ImprovedAnvil\spl\SPINI66.spl~ ~override/SPINI66.spl~

COPY ~ImprovedAnvil\spl\SPWI919.spl~ ~override/SPWI919.spl~

COPY ~ImprovedAnvil\spl\SPWI908.spl~ ~override/SPWI908.spl~

COPY ~ImprovedAnvil\spl\SPINI67.spl~ ~override/SPINI67.spl~

COPY ~ImprovedAnvil\spl\SPIN765.spl~ ~override/SPIN765.spl~

COPY ~ImprovedAnvil\spl\SPIN766.spl~ ~override/SPIN766.spl~

COPY ~ImprovedAnvil\spl\SPIN767.spl~ ~override/SPIN767.spl~

COPY ~ImprovedAnvil\spl\SPIN770.spl~ ~override/SPIN770.spl~

COPY ~ImprovedAnvil\spl\SPIN771.spl~ ~override/SPIN771.spl~

COPY ~ImprovedAnvil\spl\SPWII45.spl~ ~override/SPWII45.spl~

COPY ~ImprovedAnvil\spl\SPPR113.spl~ ~override/SPPR113.spl~

COPY ~ImprovedAnvil\spl\SPCL732.spl~ ~override/SPCL732.spl~

COPY ~ImprovedAnvil\spl\SPINI69.spl~ ~override/SPINI69.spl~

COPY ~ImprovedAnvil\spl\SPPR511.spl~ ~override/SPPR511.spl~

COPY ~ImprovedAnvil\spl\SPPR599.spl~ ~override/SPPR599.spl~

COPY ~ImprovedAnvil\spl\SPPR722.spl~ ~override/SPPR722.spl~

COPY ~ImprovedAnvil\spl\SPWII46.spl~ ~override/SPWII46.spl~

COPY ~ImprovedAnvil\spl\SPWII47.spl~ ~override/SPWII47.spl~

COPY ~ImprovedAnvil\spl\SPWII48.spl~ ~override/SPWII48.spl~

COPY ~ImprovedAnvil\spl\SPWII49.spl~ ~override/SPWII49.spl~

COPY ~ImprovedAnvil\spl\SPPR416.spl~ ~override/SPPR416.spl~

COPY ~ImprovedAnvil\spl\SPWI701.spl~ ~override/SPWI701.spl~

COPY ~ImprovedAnvil\spl\SPWI406.spl~ ~override/SPWI406.spl~

COPY ~ImprovedAnvil\spl\SPWI602.spl~ ~override/SPWI602.spl~

COPY ~ImprovedAnvil\spl\SPPR701.spl~ ~override/SPPR701.spl~

COPY ~ImprovedAnvil\spl\SPWI319.spl~ ~override/SPWI319.spl~

COPY ~ImprovedAnvil\spl\SPWI320.spl~ ~override/SPWI320.spl~

COPY ~ImprovedAnvil\spl\SPWI512.spl~ ~override/SPWI512.spl~

COPY ~ImprovedAnvil\spl\SPWI702.spl~ ~override/SPWI702.spl~

COPY ~ImprovedAnvil\spl\SPWI803.spl~ ~override/SPWI803.spl~

COPY ~ImprovedAnvil\spl\SPPR407.spl~ ~override/SPPR407.spl~

COPY ~ImprovedAnvil\spl\SPCL915.spl~ ~override/SPCL915.spl~

COPY ~ImprovedAnvil\spl\SPCL521.spl~ ~override/SPCL521.spl~

COPY ~ImprovedAnvil\spl\SPCLI14.spl~ ~override/SPCLI14.spl~

COPY ~ImprovedAnvil\spl\SPWII50.spl~ ~override/SPWII50.spl~

COPY ~ImprovedAnvil\spl\SPWI507.spl~ ~override/SPWI507.spl~

COPY ~ImprovedAnvil\spl\SPWI312.spl~ ~override/SPWI312.spl~

COPY ~ImprovedAnvil\spl\SPWI112.spl~ ~override/SPWI112.spl~

COPY ~ImprovedAnvil\spl\SPCL913.spl~ ~override/SPCL913.spl~

COPY ~ImprovedAnvil\spl\SPCL914.spl~ ~override/SPCL914.spl~

COPY ~ImprovedAnvil\spl\SPPR713.spl~ ~override/SPPR713.spl~

COPY ~ImprovedAnvil\spl\SPCL721.spl~ ~override/SPCL721.spl~

COPY ~ImprovedAnvil\spl\SPWI921.spl~ ~override/SPWI921.spl~

COPY ~ImprovedAnvil\spl\SPINI70.spl~ ~override/SPINI70.spl~

COPY ~ImprovedAnvil\spl\SPINI71.spl~ ~override/SPINI71.spl~

COPY ~ImprovedAnvil\spl\SPINI72.spl~ ~override/SPINI72.spl~

COPY ~ImprovedAnvil\spl\SPWII52.spl~ ~override/SPWII52.spl~

COPY ~ImprovedAnvil\spl\SPINI74.spl~ ~override/SPINI74.spl~

COPY ~ImprovedAnvil\spl\SPINI75.spl~ ~override/SPINI75.spl~

COPY ~ImprovedAnvil\spl\SPPRI22.spl~ ~override/SPPRI22.spl~

COPY ~ImprovedAnvil\spl\SPPRI23.spl~ ~override/SPPRI23.spl~

COPY ~ImprovedAnvil\spl\SPINI76.spl~ ~override/SPINI76.spl~

COPY ~ImprovedAnvil\spl\SPINI77.spl~ ~override/SPINI77.spl~

COPY ~ImprovedAnvil\spl\SPWI211.spl~ ~override/SPWI211.spl~

COPY ~ImprovedAnvil\spl\SPCL441.spl~ ~override/SPCL441.spl~

COPY ~ImprovedAnvil\spl\SPIN607.spl~ ~override/SPIN607.spl~

COPY ~ImprovedAnvil\spl\SPINI81.spl~ ~override/SPINI81.spl~

COPY ~ImprovedAnvil\spl\SPIN553.spl~ ~override/SPIN553.spl~

COPY ~ImprovedAnvil\spl\SPIN975.spl~ ~override/SPIN975.spl~

COPY ~ImprovedAnvil\spl\SPPR723.spl~ ~override/SPPR723.spl~
  SAY UNIDENTIFIED_DESC @9562

COPY ~ImprovedAnvil\spl\SPPR724.spl~ ~override/SPPR724.spl~

COPY ~ImprovedAnvil\spl\SPPR609.spl~ ~override/SPPR609.spl~

COPY ~ImprovedAnvil\spl\SPCLI17.spl~ ~override/SPCLI17.spl~

COPY ~ImprovedAnvil\spl\SPCLI18.spl~ ~override/SPCLI18.spl~

COPY ~ImprovedAnvil\spl\SPCLI19.spl~ ~override/SPCLI19.spl~

COPY ~ImprovedAnvil\spl\SPPR507.spl~ ~override/SPPR507.spl~

COPY ~ImprovedAnvil\spl\SPPR105.spl~ ~override/SPPR105.spl~

COPY ~ImprovedAnvil\spl\SPPR952D.spl~ ~override/SPPR952D.spl~

// Patching spells //

COPY_EXISTING ~spin775.spl~ ~override/spin775.spl~
  SAY NAME1 @358
  WRITE_BYTE  0x27    0xb // secondary type

COPY_EXISTING ~sppr506.spl~ ~override/sppr506.spl~
  SAY UNIDENTIFIED_DESC @10189
  WRITE_BYTE  0x27      7 // secondary type

  // patch casting time
  READ_SHORT 0x68 "icount"
  READ_LONG 0x64 "ioffset"
  SET "it" = 0
  WHILE ("%it%" < "%icount%") BEGIN
    WRITE_SHORT (%ioffset% + ("%it%" * 0x28) + 0x12) 1
    "it" = "%it%" + 1
  END

COPY_EXISTING ~melstone.spl~ ~override/melstone.spl~
  WRITE_BYTE  0x27      7 // secondary type

COPY_EXISTING ~spin535.spl~ ~override/spin535.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~spin910.spl~ ~override/spin910.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~spin909.spl~ ~override/spin909.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~spin911.spl~ ~override/spin911.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~spin894.spl~ ~override/spin894.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~spwi620.spl~ ~override/spwi620.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~spwi621.spl~ ~override/spwi621.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~spwi520.spl~ ~override/spwi520.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~spwi521.spl~ ~override/spwi521.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~spwi516.spl~ ~override/spwi516.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~spwi622.spl~ ~override/spwi622.spl~
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~sppr710.spl~ ~override/sppr710.spl~
  WRITE_BYTE  0x27    0xc // secondary type

COPY_EXISTING ~sppr715.spl~ ~override/sppr715.spl~
  WRITE_BYTE  0x27    0xc // secondary type

COPY_EXISTING ~SPIN695.spl~ ~override/SPIN695.spl~
  WRITE_SHORT 0x25      0 // type
  WRITE_BYTE  0x27    0xc // secondary type

COPY_EXISTING ~SPIN658.spl~ ~override/SPIN658.spl~
  WRITE_SHORT 0x25      0 // type
  WRITE_BYTE  0x27    0xc // secondary type

COPY_EXISTING ~SPCL904.spl~ ~override/SPCL904.spl~
  WRITE_BYTE  0x27      2 // secondary type

COPY_EXISTING ~SPIN893.spl~ ~override/SPIN893.spl~
  WRITE_BYTE  0x27    0xa // secondary type

COPY_EXISTING ~SPIN890.spl~ ~override/SPIN890.spl~
  WRITE_BYTE  0x27    0xb // secondary type

COPY_EXISTING ~SPIN999.spl~ ~override/SPIN999.spl~
  WRITE_BYTE  0x27    0xb // secondary type

COPY_EXISTING ~BEGUILE.spl~ ~override/BEGUILE.spl~
  WRITE_BYTE  0x27    0xb // secondary type

COPY_EXISTING ~SPPR318.spl~ ~override/SPPR318.spl~
  WRITE_SHORT  0x20      0 // Priest Type

COPY_EXISTING ~SPIN768.spl~ ~override/SPIN768.spl~
  WRITE_SHORT 0x25      0 // type
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~SPIN769.spl~ ~override/SPIN769.spl~
  WRITE_SHORT 0x25      0 // type
  WRITE_BYTE  0x27      0 // secondary type

COPY_EXISTING ~SPWI805.spl~ ~override/SPWI805.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~SPWI910.spl~ ~override/SPWI910.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~SPWI911.spl~ ~override/SPWI911.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~SPPR705.spl~ ~override/SPPR705.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~SPWI612.spl~ ~override/SPWI612.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~SPWI411.spl~ ~override/SPWI411.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

  // patch "wake on sleep" for Emotion
  PATCH_IF GAME_IS ~bg2ee~ THEN BEGIN
      READ_SHORT 0x68 "icount"
      READ_LONG 0x64 "ioffset"
      READ_LONG 0x6a "fbtoffset"
      SET "it" = 0

      WHILE ("%it%" < "%icount%") BEGIN
        READ_SHORT (%ioffset% + ("%it%" * 0x28) + 0x1e) "fcount"
        READ_SHORT (%ioffset% + ("%it%" * 0x28) + 0x20) "foffset"
        SET "of" = 0

        WHILE ("%of%" < "%fcount%") BEGIN
          READ_SHORT (%fbtoffset% + %foffset% + ("%of%" * 0x30) + 0x00) opcode

          PATCH_IF (opcode = 39) THEN BEGIN
             WRITE_LONG (%fbtoffset% + %foffset% + ("%of%" * 0x30) + 0x08) 1
          END

          "of" = "%of%" + 1
        END

        "it" = "%it%" + 1
      END
  END

COPY_EXISTING ~SPWI213.spl~ ~override/SPWI213.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~SPWI205.spl~ ~override/SPWI205.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~SPWI401.spl~ ~override/SPWI401.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~SPPR709.spl~ ~override/SPPR709.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~SPWISH35.spl~ ~override/SPWISH35.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~SPWI715.spl~ ~override/SPWI715.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~SPWI912.spl~ ~override/SPWI912.spl~
  READ_BYTE 0x19 "splflags"
  WRITE_BYTE 0x19 ("%splflags%" BOR 0b00000100)

COPY_EXISTING ~METSWARM.pro~ ~override/METSWARM.pro~
  WRITE_BYTE 0x216      4

//Compiling dialogue files//

COMPILE ~ImprovedAnvil/dlg/cespfix.d~

COMPILE ~ImprovedAnvil/dlg/crom.d~
  USING ~ImprovedAnvil/English/crom.tra~

COMPILE ~ImprovedAnvil/dlg/cespy.d~
  USING ~ImprovedAnvil/English/crom.tra~
        ~ImprovedAnvil/English/cespy.tra~

COMPILE ~ImprovedAnvil/dlg/iadlord.d~
  USING ~ImprovedAnvil/English/demon.tra~

COMPILE ~ImprovedAnvil/dlg/iavlord.d~
  USING ~ImprovedAnvil/English/vlord.tra~

COMPILE ~ImprovedAnvil/dlg/iademgod.d~
  USING ~ImprovedAnvil/English/dgod.tra~

COMPILE ~ImprovedAnvil/dlg/iadryad.d~
  USING ~ImprovedAnvil/English/dryad.tra~

COMPILE ~ImprovedAnvil/dlg/iaslagol.d~
  USING ~ImprovedAnvil/English/golem.tra~

COMPILE ~ImprovedAnvil/dlg/iaspideq.d~
  USING ~ImprovedAnvil/English/queen.tra~

COMPILE ~ImprovedAnvil/dlg/iapalad.d~
  USING ~ImprovedAnvil/English/palad.tra~

COMPILE ~ImprovedAnvil/dlg/iabeggar.d~
  USING ~ImprovedAnvil/English/beggar.tra~

COMPILE ~ImprovedAnvil/dlg/iaorder.d~
  USING ~ImprovedAnvil/English/order.tra~

COMPILE ~ImprovedAnvil/dlg/ialady1.d~
  USING ~ImprovedAnvil/English/lady1.tra~

COMPILE ~ImprovedAnvil/dlg/ialady2.d~
  USING ~ImprovedAnvil/English/lady2.tra~

COMPILE ~ImprovedAnvil/dlg/iagypsy.d~
  USING ~ImprovedAnvil/English/gypsy.tra~

COMPILE ~ImprovedAnvil/dlg/iapasha.d~
  USING ~ImprovedAnvil/English/pasha.tra~

COMPILE ~ImprovedAnvil/dlg/iaggod.d~
  USING ~ImprovedAnvil/English/gypgod.tra~

COMPILE ~ImprovedAnvil/dlg/iafsdrag.d~
  USING ~ImprovedAnvil/English/dragon.tra~

COMPILE ~ImprovedAnvil/dlg/iadelon1.d~
  USING ~ImprovedAnvil/English/delon1.tra~

COMPILE ~ImprovedAnvil/dlg/iadelon2.d~
  USING ~ImprovedAnvil/English/delon2.tra~

COMPILE ~ImprovedAnvil/dlg/iadelon3.d~
  USING ~ImprovedAnvil/English/delon3.tra~

COMPILE ~ImprovedAnvil/dlg/iadelon4.d~
  USING ~ImprovedAnvil/English/delon4.tra~

COMPILE ~ImprovedAnvil/dlg/iagirl1.d~
  USING ~ImprovedAnvil/English/girl1.tra~

COMPILE ~ImprovedAnvil/dlg/iaroshan.d~
  USING ~ImprovedAnvil/English/roshan.tra~

COMPILE ~ImprovedAnvil/dlg/iarosha2.d~
  USING ~ImprovedAnvil/English/rosha2.tra~

COMPILE ~ImprovedAnvil/dlg/iaknight.d~
  USING ~ImprovedAnvil/English/knight.tra~

COMPILE ~ImprovedAnvil/dlg/iaknigh2.d~
  USING ~ImprovedAnvil/English/knigh2.tra~

COMPILE ~ImprovedAnvil/dlg/iaknigh3.d~
  USING ~ImprovedAnvil/English/knigh3.tra~

COMPILE ~ImprovedAnvil/dlg/iaauriel.d~
  USING ~ImprovedAnvil/English/auriel.tra~

COMPILE ~ImprovedAnvil/dlg/iaenchan.d~
  USING ~ImprovedAnvil/English/enchan.tra~

COMPILE ~ImprovedAnvil/dlg/iaillusi.d~
  USING ~ImprovedAnvil/English/illusi.tra~

COMPILE ~ImprovedAnvil/dlg/iakiller.d~
  USING ~ImprovedAnvil/English/killer.tra~

COMPILE ~ImprovedAnvil/dlg/iadopple.d~
  USING ~ImprovedAnvil/English/dopple.tra~

COMPILE ~ImprovedAnvil/dlg/iarunef.d~
  USING ~ImprovedAnvil/English/runef.tra~

COMPILE ~ImprovedAnvil/dlg/iadwarf.d~
  USING ~ImprovedAnvil/English/dwarf.tra~

COMPILE ~ImprovedAnvil/dlg/iaefree2.d~
  USING ~ImprovedAnvil/English/efreet.tra~

COMPILE ~ImprovedAnvil/dlg/ialimak.d~
  USING ~ImprovedAnvil/English/limak.tra~

COMPILE ~ImprovedAnvil/dlg/iaamarie.d~
  USING ~ImprovedAnvil/English/amarie.tra~

COMPILE ~ImprovedAnvil/dlg/iaamari2.d~
  USING ~ImprovedAnvil/English/amari2.tra~

COMPILE ~ImprovedAnvil/dlg/iaammar.d~
  USING ~ImprovedAnvil/English/ammar.tra~

COMPILE ~ImprovedAnvil/dlg/iaammar2.d~
  USING ~ImprovedAnvil/English/ammar2.tra~

COMPILE ~ImprovedAnvil/dlg/iakpglai.d~
  USING ~ImprovedAnvil/English/glaica.tra~

COMPILE ~ImprovedAnvil/dlg/iarunewa.d~
  USING ~ImprovedAnvil/English/runewa.tra~

COMPILE ~ImprovedAnvil/dlg/iarakp.d~
  USING ~ImprovedAnvil/English/rakp.tra~

COMPILE ~ImprovedAnvil/dlg/iapasha2.d~
  USING ~ImprovedAnvil/English/pasha2.tra~

COMPILE ~ImprovedAnvil/dlg/iafound.d~
  USING ~ImprovedAnvil/English/found.tra~

COMPILE ~ImprovedAnvil/dlg/iatarnor.d~
  USING ~ImprovedAnvil/English/tarnor.tra~

COMPILE ~ImprovedAnvil/dlg/iamessen.d~
  USING ~ImprovedAnvil/English/messen.tra~

COMPILE ~ImprovedAnvil/dlg/iaorcus.d~
  USING ~ImprovedAnvil/English/orcus.tra~

COMPILE ~ImprovedAnvil/dlg/iaancest.d~
  USING ~ImprovedAnvil/English/ancest.tra~

COMPILE ~ImprovedAnvil/dlg/iaspy2.d~
  USING ~ImprovedAnvil/English/spy2.tra~

COMPILE ~ImprovedAnvil/dlg/iacghost.d~
  USING ~ImprovedAnvil/English/ghost.tra~

COMPILE ~ImprovedAnvil/dlg/iacghos2.d~
  USING ~ImprovedAnvil/English/ghost2.tra~

COMPILE ~ImprovedAnvil/dlg/iadracol.d~
  USING ~ImprovedAnvil/English/dracol.tra~

COMPILE ~ImprovedAnvil/dlg/iasamia.d~
  USING ~ImprovedAnvil/English/samia.tra~

COMPILE ~ImprovedAnvil/dlg/iasupgow.d~
  USING ~ImprovedAnvil/English/supgow.tra~

COMPILE ~ImprovedAnvil/dlg/iadraggr.d~
  USING ~ImprovedAnvil/English/draggr.tra~

COMPILE ~ImprovedAnvil/dlg/iashados.d~
  USING ~ImprovedAnvil/English/shados.tra~

COMPILE ~ImprovedAnvil/dlg/iaswanme.d~
  USING ~ImprovedAnvil/English/swanme.tra~

COMPILE ~ImprovedAnvil/dlg/ialooker.d~
  USING ~ImprovedAnvil/English/looker.tra~

COMPILE ~ImprovedAnvil/dlg/iaaurie2.d~
  USING ~ImprovedAnvil/English/aurie2.tra~

COMPILE ~ImprovedAnvil/dlg/iamalbar.d~
  USING ~ImprovedAnvil/English/malbar.tra~

COMPILE ~ImprovedAnvil/dlg/ialooke2.d~
  USING ~ImprovedAnvil/English/looke2.tra~

COMPILE ~ImprovedAnvil/dlg/iaaurie3.d~
  USING ~ImprovedAnvil/English/aurie3.tra~

COMPILE ~ImprovedAnvil/dlg/iacangua.d~
  USING ~ImprovedAnvil/English/cangua.tra~

COMPILE ~ImprovedAnvil/dlg/iabelgua.d~
  USING ~ImprovedAnvil/English/belgua.tra~

COMPILE ~ImprovedAnvil/dlg/iabolich.d~
  USING ~ImprovedAnvil/English/bolich.tra~

COMPILE ~ImprovedAnvil/dlg/iaspy3.d~
  USING ~ImprovedAnvil/English/spy3.tra~

COMPILE ~ImprovedAnvil/dlg/DRSHSP01.d~
  USING ~ImprovedAnvil/English/drshsp.tra~

COMPILE ~ImprovedAnvil/dlg/iachick1.d~
  USING ~ImprovedAnvil/English/chick1.tra~

COMPILE ~ImprovedAnvil/dlg/iachick3.d~
  USING ~ImprovedAnvil/English/chick3.tra~

COMPILE ~ImprovedAnvil/dlg/iaanima1.d~
  USING ~ImprovedAnvil/English/anima1.tra~

COMPILE ~ImprovedAnvil/dlg/iahorse1.d~
  USING ~ImprovedAnvil/English/horse1.tra~

COMPILE ~ImprovedAnvil/dlg/iamoose1.d~
  USING ~ImprovedAnvil/English/moose1.tra~

COMPILE ~ImprovedAnvil/dlg/iaoldone.d~
  USING ~ImprovedAnvil/English/oldone.tra~

COMPILE ~ImprovedAnvil/dlg/iagrlch6.d~
  USING ~ImprovedAnvil/English/grlch6.tra~

COMPILE ~ImprovedAnvil/dlg/iaoldon2.d~
  USING ~ImprovedAnvil/English/oldon2.tra~

COMPILE ~ImprovedAnvil/dlg/iamorid1.d~
  USING ~ImprovedAnvil/English/morid1.tra~

COMPILE ~ImprovedAnvil/dlg/iagrlch8.d~
  USING ~ImprovedAnvil/English/grlch8.tra~

COMPILE ~ImprovedAnvil/dlg/iasqui01.d~
  USING ~ImprovedAnvil/English/squi01.tra~

COMPILE ~ImprovedAnvil/dlg/iasqui02.d~
  USING ~ImprovedAnvil/English/squi02.tra~

COMPILE ~ImprovedAnvil/dlg/iasqui03.d~
  USING ~ImprovedAnvil/English/squi03.tra~

COMPILE ~ImprovedAnvil/dlg/iaacton.d~
  USING ~ImprovedAnvil/English/acton.tra~

COMPILE ~ImprovedAnvil/dlg/iasqui04.d~
  USING ~ImprovedAnvil/English/squi04.tra~

COMPILE ~ImprovedAnvil/dlg/iaavatar.d~
  USING ~ImprovedAnvil/English/avatar.tra~

COMPILE ~ImprovedAnvil/dlg/iademmag.d~
  USING ~ImprovedAnvil/English/demmag.tra~

COMPILE ~ImprovedAnvil/dlg/iaacton2.d~
  USING ~ImprovedAnvil/English/acton2.tra~

COMPILE ~ImprovedAnvil/dlg/iamorid2.d~
  USING ~ImprovedAnvil/English/morid2.tra~

COMPILE ~ImprovedAnvil/dlg/iatimemf.d~
  USING ~ImprovedAnvil/English/timemf.tra~

COMPILE ~ImprovedAnvil/dlg/iatimema.d~
  USING ~ImprovedAnvil/English/timema.tra~

COMPILE ~ImprovedAnvil/dlg/iayoungb.d~
  USING ~ImprovedAnvil/English/youngb.tra~

COMPILE ~ImprovedAnvil/dlg/iayoungl.d~
  USING ~ImprovedAnvil/English/youngl.tra~

COMPILE ~ImprovedAnvil/dlg/iaforce1.d~
  USING ~ImprovedAnvil/English/force1.tra~

COMPILE ~ImprovedAnvil/dlg/iaforce2.d~
  USING ~ImprovedAnvil/English/force2.tra~

COMPILE ~ImprovedAnvil/dlg/iaspy4.d~
  USING ~ImprovedAnvil/English/spy4.tra~

COMPILE ~ImprovedAnvil/dlg/iaswanfa.d~
  USING ~ImprovedAnvil/English/swanfa.tra~

COMPILE ~ImprovedAnvil/dlg/iarngspi.d~
  USING ~ImprovedAnvil/English/rngspi.tra~

COMPILE ~ImprovedAnvil/dlg/iasqui05.d~
  USING ~ImprovedAnvil/English/squi05.tra~

COMPILE ~ImprovedAnvil/dlg/iamircre.d~
  USING ~ImprovedAnvil/English/mircre.tra~

COMPILE ~ImprovedAnvil/dlg/iaponcre.d~
  USING ~ImprovedAnvil/English/poncre.tra~

COMPILE ~ImprovedAnvil/dlg/iamom.d~
  USING ~ImprovedAnvil/English/mom.tra~

COMPILE ~ImprovedAnvil/dlg/iawetlan.d~
  USING ~ImprovedAnvil/English/wetlan.tra~

COMPILE ~ImprovedAnvil/dlg/multig.d~

COMPILE ~ImprovedAnvil/dlg/garrfix.d~

COMPILE ~ImprovedAnvil/dlg/reirfix.d~

COMPILE ~ImprovedAnvil/dlg/nalifix.d~

COMPILE ~ImprovedAnvil/dlg/blacfix.d~

COMPILE ~ImprovedAnvil/dlg/tannfix.d~

COMPILE ~ImprovedAnvil/dlg/domtd.d~

COMPILE ~ImprovedAnvil/dlg/CEFALDOR.d~

COMPILE ~ImprovedAnvil/dlg/CECHALLE.d~

COMPILE ~ImprovedAnvil/dlg/WISH25.d~

COMPILE ~ImprovedAnvil/dlg/murcrag.d~

COMPILE ~ImprovedAnvil/dlg/tolgfix.d~

COMPILE ~ImprovedAnvil/dlg/kruifix.d~

COMPILE ~ImprovedAnvil/dlg/mgapfix.d~

COPY_EXISTING ~PPRIDD.DLG~ ~override~
 DECOMPILE_DLG_TO_D
 REPLACE_TEXTUALLY ~PartyHasItem("MISC8Z")~ ~PartyHasItem("MISC8Z") Global("openHead","AR1512",0)~
 COMPILE_D_TO_DLG

COPY_EXISTING ~SUJON.DLG~ ~override~
 DECOMPILE_DLG_TO_D
 REPLACE_TEXTUALLY ~HP(Myself,1)~ ~HPLT(Myself,5)~
 COMPILE_D_TO_DLG

COPY_EXISTING ~SHOP03.DLG~ ~override~
 DECOMPILE_DLG_TO_D
 REPLACE_TEXTUALLY ~TakePartyItem("misc42")~ ~TakePartyItemNum("misc42",1)~
 REPLACE_TEXTUALLY ~TakePartyItem("misc6z")~ ~TakePartyItemNum("misc6z",1)~
 COMPILE_D_TO_DLG

COPY_EXISTING ~WISH.DLG~ ~override~
 DECOMPILE_DLG_TO_D
 REPLACE_TEXTUALLY ~"vamanc01"~ ~"S!vamwis"~
 REPLACE_TEXTUALLY ~"vamver01"~ ~"S!vamwis"~
 REPLACE_TEXTUALLY ~"vamold01"~ ~"S!vamwis"~
 REPLACE_TEXTUALLY ~"vammat01"~ ~"S!vamwis"~
 REPLACE_TEXTUALLY ~ActionOverride(LastTalkedToBy,ReallyForceSpell(Myself,WIZARD_TIME_STOP))~ ~SetGlobal("Iapcastts","GLOBAL",1) SetGlobalTimer("Iatstimer","GLOBAL",18) ActionOverride(LastTalkedToBy,ReallyForceSpell(Myself,WIZARD_TIME_STOP))~
 COMPILE_D_TO_DLG

COPY_EXISTING ~SARVAM01.DLG~ ~override~
 DECOMPILE_DLG_TO_D
 REPLACE_TEXTUALLY ~Enemy()~ ~SetGlobal("Iaprisonbattle","AR5006",1)~
 COMPILE_D_TO_DLG

COPY_EXISTING ~PPDEMON.DLG~ ~override~
 DECOMPILE_DLG_TO_D
 REPLACE_TEXTUALLY ~TriggerActivation("demondoor",TRUE)~ ~SetGlobal("Iaunseal","AR0028",1)~
 COMPILE_D_TO_DLG

COPY_EXISTING ~CORNEIL.DLG~ ~override~
 DECOMPILE_DLG_TO_D
 REPLACE_TEXTUALLY ~ReputationLT(LastTalkedToBy,4)~ ~OR(2) ReputationLT(LastTalkedToBy,4) GlobalGT("CowledWarning","GLOBAL",1)~
 REPLACE_TEXTUALLY ~ReputationGT(LastTalkedToBy,3)~ ~ReputationGT(LastTalkedToBy,3) GlobalLT("CowledWarning","GLOBAL",2)~
 COMPILE_D_TO_DLG

COPY_EXISTING ~ORPHAN1.DLG~ ~override~
 DECOMPILE_DLG_TO_D
 REPLACE_TEXTUALLY ~PartyHasItem("rods03")~ ~False()~
 COMPILE_D_TO_DLG

COPY_EXISTING ~SLAVERM.DLG~ ~override~
 DECOMPILE_DLG_TO_D
 REPLACE_TEXTUALLY ~Enemy()~ ~SetGlobal("Iapartyhere","AR0405",1) Enemy() ReallyForceSpellRES("SPWII07",Myself) DestroyItem("surehp1")~
 COMPILE_D_TO_DLG

COPY_EXISTING ~PPDESH.DLG~ ~override~
 DECOMPILE_DLG_TO_D
 REPLACE_TEXTUALLY ~38500~ ~5000~
 REPLACE_TEXTUALLY ~IsValidForPartyDialogue("YOSHIMO)~ ~IsValidForPartyDialogue("YOSHIMO")~
 COMPILE_D_TO_DLG

COPY_EXISTING ~HLKANG.DLG~ ~override~
 DECOMPILE_DLG_TO_D
 REPLACE_TEXTUALLY ~ReallyForceSpell(Myself,RED_EFFECT)~ ~ReallyForceSpell(Myself,RED_EFFECT) SetGlobal("Iakangaxx","AR0331",1)~
 COMPILE_D_TO_DLG

COPY_EXISTING ~TRSKIN01.DLG~ ~override~
 DECOMPILE_DLG_TO_D
 REPLACE_TEXTUALLY ~AddexperienceParty(30000)~ ~AddexperienceParty(30000) DialogueInterrupt(FALSE) SetInterrupt(FALSE)~
 COMPILE_D_TO_DLG

COPY_EXISTING ~TOLGER.DLG~ ~override~
 DECOMPILE_DLG_TO_D
 REPLACE_TEXTUALLY ~ReputationInc(-1)~ ~ReputationInc(-18)~
 COMPILE_D_TO_DLG

COPY_EXISTING ~DOMT.DLG~ ~override~
 DECOMPILE_DLG_TO_D
 REPLACE_TEXTUALLY ~AddexperienceParty(300000)~ ~AddexperienceParty(15000)~
 REPLACE_TEXTUALLY ~AddexperienceParty(1000000)~ ~AddexperienceParty(30000)~
 COMPILE_D_TO_DLG

COPY_EXISTING ~GORLUM2.DLG~ ~override~
 DECOMPILE_DLG_TO_D
 REPLACE_TEXTUALLY ~"POTN55"~ ~"S!POTN11"~
 REPLACE_TEXTUALLY ~AddXPObject(LastTalkedToBy,100000)~ ~DestroySelf()~
 COMPILE_D_TO_DLG

COPY_EXISTING ~HENDAK.DLG~ ~override~
 DECOMPILE_DLG_TO_D
 REPLACE_TEXTUALLY ~GiveItemCreate("SW1H03",LastTalkedToBy,0,0,0)~ ~GiveItemCreate("SW1H03",LastTalkedToBy,0,0,0) GiveItemCreate("POTN45",LastTalkedToBy,4,0,0) GiveItemCreate("POTN11",LastTalkedToBy,4,0,0) GiveItemCreate("POTN52",LastTalkedToBy,4,0,0) GiveItemCreate("POTN37",LastTalkedToBy,4,0,0) GiveItemCreate("POTN35",LastTalkedToBy,0,0,0)~
 COMPILE_D_TO_DLG

//patching stores//

COPY_EXISTING ~garlena.sto~ ~Override/garlena.sto~
WRITE_LONG  0x14   165 // sell price markup
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF ("%itemname%" STRING_COMPARE_CASE "sw1h58" = 0)
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~wmart1.sto~ ~Override/wmart1.sto~
WRITE_LONG  0x14   165 // sell price markup
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "waninja" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "waflail" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "wawak" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "wasling" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "waaxe" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~wmart2.sto~ ~Override/wmart2.sto~
WRITE_LONG  0x14   165 // sell price markup
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "wa2robe" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "wa2shiel" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~ribald.sto~ ~Override/ribald.sto~
PATCH_IF GAME_IS ~bg2ee~ BEGIN
  ADD_STORE_ITEM ~BAG06~ LAST #1 #0 #0 ~IDENTIFIED&UNSTEALABLE~ #1
END
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "staf20" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "belt06" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl09" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "ring28" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "ring03" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl07" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "leat20" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "shld24" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "rods03" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "hamm08" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "leat09" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "hamm05" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~ribald3.sto~ ~Override/ribald3.sto~
WRITE_LONG  0x18   30 // buy price markup
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "chan11" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl9l" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl9r" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~bmthief.sto~ ~Override/bmthief.sto~
WRITE_LONG  0x14   165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~bshop01.sto~ ~Override/bshop01.sto~
WRITE_LONG  0x14   165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_BYTE  0x11 "stoflags"
WRITE_BYTE 0x11 ("%stoflags%" BAND 0b11101111) // clear Buy Fenced bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "scrl7q" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl6s" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~bshop02.sto~ ~Override/bshop02.sto~
WRITE_LONG  0x14   165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_BYTE  0x11 "stoflags"
WRITE_BYTE 0x11 ("%stoflags%" BAND 0b11101111) // clear Buy Fenced bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF ("%itemname%" STRING_COMPARE_CASE "gberry" = 0)
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~gorch.sto~ ~Override/gorch.sto~
WRITE_LONG  0x14   165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_BYTE  0x11 "stoflags"
WRITE_BYTE 0x11 ("%stoflags%" BAND 0b11101111) // clear Buy Fenced bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF ("%itemname%" STRING_COMPARE_CASE "blun21" = 0)
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~jayes.sto~ ~Override/jayes.sto~
WRITE_LONG  0x14   165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_BYTE  0x11 "stoflags"
WRITE_BYTE 0x11 ("%stoflags%" BAND 0b11101111) // clear Buy Fenced bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "scrl7d" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "clck09" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~roger.sto~ ~Override/roger.sto~
PATCH_IF GAME_IS ~bg2ee~ BEGIN
  ADD_STORE_ITEM ~BAG06~ LAST #1 #0 #0 ~IDENTIFIED&UNSTEALABLE~ #1
END
WRITE_LONG  0x14   165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF ("%itemname%" STRING_COMPARE_CASE "potn40" = 0)
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~shthstor.sto~ ~Override/shthstor.sto~
WRITE_LONG  0x14   165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_BYTE  0x11 "stoflags"
WRITE_BYTE 0x11 ("%stoflags%" BAND 0b11101111) // clear Buy Fenced bit

COPY_EXISTING ~udduer02.sto~ ~Override/udduer02.sto~
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_BYTE  0x11 "stoflags"
WRITE_BYTE 0x11 ("%stoflags%" BAND 0b11101111) // clear Buy Fenced bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "scrla4" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl6s" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~arled.sto~ ~Override/arled.sto~
WRITE_LONG  0x14   165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~bernard.sto~ ~Override/bernard.sto~
WRITE_LONG  0x14   165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~amsmug01.sto~ ~Override/amsmug01.sto~
WRITE_LONG  0x14  165 // sell price markup
WRITE_LONG  0x18   30 // buy price markup
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "slng10" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "ax1h17" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "dagg24" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sw2h20" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sw1h75" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sw1h74" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sw1h73" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sw1h72" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "hamm12" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "halb12" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sper06" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "blun34" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "blun33" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "blun31" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "blun32" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~amsmug02.sto~ ~Override/amsmug02.sto~
WRITE_LONG  0x14  165 // sell price markup
WRITE_LONG  0x18   30 // buy price markup
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "slng10" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "ax1h17" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "dagg24" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sw2h20" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sw1h75" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sw1h74" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sw1h73" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sw1h72" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "hamm12" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "halb12" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sper06" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "blun34" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "blun33" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "boot12" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "plat21" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "blun32" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~bernard2.sto~ ~Override/bernard2.sto~
WRITE_LONG  0x14   110 // sell price markup
WRITE_LONG  0x18   20 // buy price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "sw1h40" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "ax1h12" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "slng07" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl9b" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "ax1h10" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~bhelm.sto~ ~Override/bhelm.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF ("%itemname%" STRING_COMPARE_CASE "scrl09" = 0)
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~dawnmas.sto~ ~Override/dawnmas.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF ("%itemname%" STRING_COMPARE_CASE "scrl09" = 0)
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~dmark1.sto~ ~Override/dmark1.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~dshop01.sto~ ~Override/dshop01.sto~
WRITE_LONG  0x14   165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~dshop02.sto~ ~Override/dshop02.sto~
WRITE_LONG  0x14   165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~hgkar01.sto~ ~Override/hgkar01.sto~
WRITE_LONG  0x14  165 // sell price markup
WRITE_LONG  0x18   30 // buy price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "scrl7k" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "rods03" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "staf24" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "hamm08" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~merchant.sto~ ~Override/merchant.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~murcrag.sto~ ~Override/murcrag.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "potn46" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "potn41" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~ppstor01.sto~ ~Override/ppstor01.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF ("%itemname%" STRING_COMPARE_CASE "scrl6t" = 0)
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~ppumb01.sto~ ~Override/ppumb01.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF ("%itemname%" STRING_COMPARE_CASE "scrl09" = 0)
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~sarbar01.sto~ ~Override/sarbar01.sto~
WRITE_LONG  0x14  165 // sell price markup
WRITE_LONG  0x18   30 // buy price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "boot01" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "bull06" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "slng10" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "ax1h17" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "dagg24" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sw2h20" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sw1h75" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sw1h76" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sw1h74" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sw1h73" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sw1h72" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sw1h66" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "hamm12" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "halb12" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "sper06" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "staf19" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "staf24" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "blun34" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "blun33" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "blun31" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "hamm08" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "blun32" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~scrolls.sto~ ~Override/scrolls.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "scrl09" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrlaj" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl6t" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~shop01.sto~ ~Override/shop01.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~shop02.sto~ ~Override/shop02.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~shop03.sto~ ~Override/shop03.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~shop04.sto~ ~Override/shop04.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~shop05.sto~ ~Override/shop05.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF ("%itemname%" STRING_COMPARE_CASE "arow07" = 0)
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~shop06.sto~ ~Override/shop06.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~shop07.sto~ ~Override/shop07.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~shop08.sto~ ~Override/shop08.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF ("%itemname%" STRING_COMPARE_CASE "scrl09" = 0)
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~slilmat.sto~ ~Override/slilmat.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF ("%itemname%" STRING_COMPARE_CASE "scrl09" = 0)
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~slshop01.sto~ ~Override/slshop01.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~slshop02.sto~ ~Override/slshop02.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~talmiss.sto~ ~Override/talmiss.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF ("%itemname%" STRING_COMPARE_CASE "scrl09" = 0)
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~temhelm.sto~ ~Override/temhelm.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "scrl09" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "hamm08" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~temtalos.sto~ ~Override/temtalos.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF ("%itemname%" STRING_COMPARE_CASE "scrl09" = 0)
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~trcar04.sto~ ~Override/trcar04.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "scrl7q" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl6s" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~trmer01.sto~ ~Override/trmer01.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~trmer02.sto~ ~Override/trmer02.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "bow15" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "belt10" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~trmer03.sto~ ~Override/trmer03.sto~
WRITE_LONG  0x14  165 // sell price markup
WRITE_LONG  0x18   30 // buy price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~trrak01.sto~ ~Override/trrak01.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "potn46" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "potn41" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~type1.sto~ ~Override/type1.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~type3.sto~ ~Override/type3.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "scrl9n" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl9l" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl8n" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl8f" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl9r" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~uddrow23.sto~ ~Override/uddrow23.sto~
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF ("%itemname%" STRING_COMPARE_CASE "staf16" = 0)
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~uddrow24.sto~ ~Override/uddrow24.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "amul20" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "potn40" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~uddrow25.sto~ ~Override/uddrow25.sto~
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "scrl8i" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl9b" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl7d" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl6s" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl8t" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~udduer01.sto~ ~Override/udduer01.sto~
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF ("%itemname%" STRING_COMPARE_CASE "scrl7q" = 0)
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~udsvir05.sto~ ~Override/udsvir05.sto~
WRITE_LONG  0x14  165 // sell price markup
WRITE_LONG  0x18   30 // buy price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF ("%itemname%" STRING_COMPARE_CASE "scrl6s" = 0)
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~uhmer01.sto~ ~Override/uhmer01.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~uhmer02.sto~ ~Override/uhmer02.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~uhmer03.sto~ ~Override/uhmer03.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~wallace.sto~ ~Override/wallace.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~wallace2.sto~ ~Override/wallace2.sto~
WRITE_LONG  0x14  165 // sell price markup
WRITE_LONG  0x18   30 // buy price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~25spell.sto~ ~Override/25spell.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "boot01" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "ring02" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl09" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl9x" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl9r" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl8i" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrlb4" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrlb2" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl9n" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "potn06" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "clck09" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "clck10" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "clck11" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrlar" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl9b" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl9l" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl7k" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl7d" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl6g" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrlao" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl8n" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl8f" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl7v" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl6s" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl6t" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl7q" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrlaq" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "clck16" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~25spell2.sto~ ~Override/25spell2.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "scrl09" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl5f" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl9x" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl9r" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl8i" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrlb4" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrlb2" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl5a" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl9n" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "potn06" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "ring02" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "clck09" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "clck10" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "clck11" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrlar" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl9b" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl9l" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl7k" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl7d" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl6g" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrlao" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl8n" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl8f" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl7v" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl6s" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl6t" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl7q" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrlaj" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrlaq" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "clck16" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~ambar01.sto~ ~Override/ambar01.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x10 "stoflags"
WRITE_BYTE 0x10 ("%stoflags%" BAND 0b11110111) // clear Can Steal bit

COPY_EXISTING ~trthf02.sto~ ~Override/trthf02.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_BYTE  0x11 "stoflags"
WRITE_BYTE 0x11 ("%stoflags%" BAND 0b11101111) // clear Buy Fenced bit
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF ("%itemname%" STRING_COMPARE_CASE "scrl6t" = 0)
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~sahpr1.sto~ ~Override/sahpr1.sto~
WRITE_LONG  0x14  165 // sell price markup
WRITE_LONG  0x18   30 // buy price markup

COPY_EXISTING ~sartem01.sto~ ~Override/sartem01.sto~
WRITE_LONG  0x14  165 // sell price markup
WRITE_LONG  0x18   30 // buy price markup

COPY_EXISTING ~temlath.sto~ ~Override/temlath.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "boot05" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl09" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "staf05" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "helm06" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~kpchap01.sto~ ~Override/kpchap01.sto~
WRITE_LONG  0x14  165 // sell price markup
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF (("%itemname%" STRING_COMPARE_CASE "boot05" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "scrl09" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "staf05" = 0) OR
              ("%itemname%" STRING_COMPARE_CASE "helm06" = 0))
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~trmer04.sto~ ~Override/trmer04.sto~
READ_LONG 0x38 "itemscount"
PATCH_IF ("%itemscount%" > 0) BEGIN
  READ_LONG 0x2C "purchasedoffset"
  READ_LONG 0x34 "itemsoffset"
  READ_LONG 0x4C "drinksoffset"
  READ_LONG 0x70 "curesoffset"
  SET "removeditems" = 0
  SET "cnt" = "%itemscount%" - 1
  WHILE ("%cnt%" >= 0) BEGIN
    READ_ASCII ("%itemsoffset%" + "%cnt%"*28) "itemname"
    PATCH_IF ("%itemname%" STRING_COMPARE_CASE "scrl6t" = 0)
   BEGIN
   DELETE_BYTES ("%itemsoffset%" + ("%cnt%"*28)) 28
   SET "removeditems" = "%removeditems%" + 1
   END
  SET "cnt" = "%cnt%" - 1
END
WRITE_LONG 0x38 ("%itemscount%" - "%removeditems%")
PATCH_IF ("%purchasedoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x2C ("%purchasedoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%drinksoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x4C ("%drinksoffset%" - ("%removeditems%" * 28)) END
PATCH_IF ("%curesoffset%" > "%itemsoffset%") BEGIN WRITE_LONG 0x70 ("%curesoffset%" - ("%removeditems%" * 28)) END
END

COPY_EXISTING ~suelf10.sto~ ~Override/suelf10.sto~
WRITE_LONG  0x14  165 // sell price markup
WRITE_LONG  0x18   30 // buy price markup

COPY_EXISTING ~amcler02.sto~ ~Override/amcler02.sto~
WRITE_LONG  0x14  165 // sell price markup
WRITE_LONG  0x18   30 // buy price markup

COPY_EXISTING ~doghma.sto~ ~Override/doghma.sto~
WRITE_LONG  0x14  165 // sell price markup

// copying voice files //

COPY ~ImprovedAnvil\wav\S!vanya1.wav~ ~override/S!vanya1.wav~
COPY ~ImprovedAnvil\wav\S!vanya2.wav~ ~override/S!vanya2.wav~
COPY ~ImprovedAnvil\wav\S!vanya3.wav~ ~override/S!vanya3.wav~
COPY ~ImprovedAnvil\wav\S!vanya4.wav~ ~override/S!vanya4.wav~
COPY ~ImprovedAnvil\wav\S!vanya5.wav~ ~override/S!vanya5.wav~
COPY ~ImprovedAnvil\wav\S!marv1.wav~ ~override/S!marv1.wav~
COPY ~ImprovedAnvil\wav\S!marv2.wav~ ~override/S!marv2.wav~
COPY ~ImprovedAnvil\wav\S!marv3.wav~ ~override/S!marv3.wav~
COPY ~ImprovedAnvil\wav\S!marv4.wav~ ~override/S!marv4.wav~
COPY ~ImprovedAnvil\wav\S!dgod1.wav~ ~override/S!dgod1.wav~
COPY ~ImprovedAnvil\wav\S!dgod2.wav~ ~override/S!dgod2.wav~
COPY ~ImprovedAnvil\wav\S!dgod3.wav~ ~override/S!dgod3.wav~
COPY ~ImprovedAnvil\wav\S!glich.wav~ ~override/S!glich.wav~
COPY_EXISTING ~AM0602L.wav~  ~override/AM0602L.wav~
COPY_EXISTING ~AM0602D2.wav~  ~override/AM0602D2.wav~
COPY_EXISTING ~EFF_P12.wav~  ~override/EFF_P12.wav~
COPY_EXISTING ~GACAVL02.wav~  ~override/GACAVL02.wav~
COPY_EXISTING ~GACDRL1.wav~  ~override/GACDRL1.wav~
COPY_EXISTING ~AM3024.wav~  ~override/AM3024.wav~
COPY_EXISTING ~GAHOUSE1.wav~  ~override/GAHOUSE1.wav~
COPY_EXISTING ~AM2809.wav~  ~override/AM2809.wav~
COPY_EXISTING ~AM2809A.wav~  ~override/AM2809A.wav~
COPY_EXISTING ~GACAVM01.wav~  ~override/GACAVM01.wav~
COPY_EXISTING ~AM1106B.wav~  ~override/AM1106B.wav~
COPY_EXISTING ~AM1402.wav~  ~override/AM1402.wav~
COPY_EXISTING ~AM1402N.wav~  ~override/AM1402N.wav~
COPY_EXISTING ~SNAKE01.wav~  ~override/SNAKE01.wav~
COPY_EXISTING ~SNAKE02.wav~  ~override/SNAKE02.wav~
COPY_EXISTING ~SNAKE06.wav~  ~override/SNAKE06.wav~
COPY_EXISTING ~SNAKE07.wav~  ~override/SNAKE07.wav~
COPY_EXISTING ~ALARM1.wav~  ~override/ALARM1.wav~

// copying areas //

COPY ~ImprovedAnvil\are\AR2810.are~ ~override/AR2810.are~
COPY ~ImprovedAnvil\are\aria01.are~ ~override/aria01.are~
COPY ~ImprovedAnvil\are\aria02.are~ ~override/aria02.are~
COPY ~ImprovedAnvil\are\aria03.are~ ~override/aria03.are~
COPY ~ImprovedAnvil\are\aria04.are~ ~override/aria04.are~
COPY ~ImprovedAnvil\are\aria05.are~ ~override/aria05.are~
COPY ~ImprovedAnvil\are\aria06.are~ ~override/aria06.are~
COPY ~ImprovedAnvil\are\aria07.are~ ~override/aria07.are~
COPY ~ImprovedAnvil\are\aria08.are~ ~override/aria08.are~
COPY ~ImprovedAnvil\are\aria09.are~ ~override/aria09.are~
COPY ~ImprovedAnvil\are\aria10.are~ ~override/aria10.are~
COPY ~ImprovedAnvil\are\aria11.are~ ~override/aria11.are~
COPY ~ImprovedAnvil\are\aria12.are~ ~override/aria12.are~
COPY ~ImprovedAnvil\are\aria13.are~ ~override/aria13.are~
COPY ~ImprovedAnvil\are\aria14.are~ ~override/aria14.are~
COPY ~ImprovedAnvil\are\aria15.are~ ~override/aria15.are~
COPY ~ImprovedAnvil\are\aria16.are~ ~override/aria16.are~
COPY ~ImprovedAnvil\are\aria17.are~ ~override/aria17.are~
COPY ~ImprovedAnvil\are\aria18.are~ ~override/aria18.are~
COPY ~ImprovedAnvil\are\aria19.are~ ~override/aria19.are~
COPY ~ImprovedAnvil\are\aria20.are~ ~override/aria20.are~
COPY ~ImprovedAnvil\are\aria21.are~ ~override/aria21.are~
COPY ~ImprovedAnvil\are\aria23.are~ ~override/aria23.are~
COPY ~ImprovedAnvil\are\aria24.are~ ~override/aria24.are~
COPY ~ImprovedAnvil\are\aria25.are~ ~override/aria25.are~
COPY ~ImprovedAnvil\are\aria26.are~ ~override/aria26.are~
COPY ~ImprovedAnvil\are\aria27.are~ ~override/aria27.are~

// Copying portraits //

COPY_EXISTING ~IMOENL.BMP~ ~Override/MALBARS.BMP~
COPY_EXISTING ~IMOENM.BMP~ ~Override/MARVELS.BMP~
COPY_EXISTING ~IMOENS.BMP~ ~Override/LOOKERS.BMP~
COPY_EXISTING ~NIMOENL.BMP~ ~Override/IMOENL.BMP~
COPY_EXISTING ~NIMOENM.BMP~ ~Override/IMOENM.BMP~
COPY_EXISTING ~NIMOENS.BMP~ ~Override/IMOENS.BMP~
COPY_EXISTING ~MALBARS.BMP~ ~Override/NIMOENL.BMP~
COPY_EXISTING ~MARVELS.BMP~ ~Override/NIMOENM.BMP~
COPY_EXISTING ~LOOKERS.BMP~ ~Override/NIMOENS.BMP~
COPY ~ImprovedAnvil\pics\MALBARS.BMP~ ~override/MALBARS.BMP~
COPY ~ImprovedAnvil\pics\MARVELS.BMP~ ~override/MARVELS.BMP~
COPY ~ImprovedAnvil\pics\LOOKERS.BMP~ ~override/LOOKERS.BMP~
COPY ~ImprovedAnvil\pics\MORIDS.BMP~ ~override/MORIDS.BMP~
COPY ~ImprovedAnvil\pics\YOUNGBS.BMP~ ~override/YOUNGBS.BMP~

// copying 2da files //

COPY ~ImprovedAnvil/2da/xplevel.2da~      ~override/xplevel.2da~
COPY ~ImprovedAnvil/2da/lunumab.2da~      ~override/lunumab.2da~
COPY ~ImprovedAnvil/2da/reputati.2da~      ~override/reputati.2da~
COPY ~ImprovedAnvil/2da/mxsplbrd.2da~      ~override/mxsplbrd.2da~
COPY ~ImprovedAnvil/2da/lucr0.2da~      ~override/lucr0.2da~
COPY ~ImprovedAnvil/2da/mxsplran.2da~      ~override/mxsplran.2da~
COPY ~ImprovedAnvil/2da/clabma03.2da~      ~override/clabma03.2da~
COPY ~ImprovedAnvil/2da/clabth04.2da~      ~override/clabth04.2da~
COPY ~ImprovedAnvil/2da/xpcap.2da~      ~override/xpcap.2da~
COPY ~ImprovedAnvil/2da/luba0.2da~      ~override/luba0.2da~
COPY ~ImprovedAnvil/2da/lucm0.2da~      ~override/lucm0.2da~
COPY ~ImprovedAnvil/2da/ludr0.2da~      ~override/ludr0.2da~
COPY ~ImprovedAnvil/2da/luft0.2da~      ~override/luft0.2da~
COPY ~ImprovedAnvil/2da/lufmt.2da~      ~override/lufmt.2da~
COPY ~ImprovedAnvil/2da/lumt0.2da~      ~override/lumt0.2da~
COPY ~ImprovedAnvil/2da/luct0.2da~      ~override/luct0.2da~
COPY ~ImprovedAnvil/2da/lufc0.2da~      ~override/lufc0.2da~
COPY ~ImprovedAnvil/2da/lufd0.2da~      ~override/lufd0.2da~
COPY ~ImprovedAnvil/2da/lufm0.2da~      ~override/lufm0.2da~
COPY ~ImprovedAnvil/2da/lufmc.2da~      ~override/lufmc.2da~
COPY ~ImprovedAnvil/2da/luth1.2da~      ~override/luth1.2da~
COPY ~ImprovedAnvil/2da/thac0.2da~      ~override/thac0.2da~
COPY ~ImprovedAnvil/2da/itemexcl.2da~      ~override/itemexcl.2da~
COPY ~ImprovedAnvil/2da/rndmagic.2da~      ~override/rndmagic.2da~
COPY ~ImprovedAnvil/2da/startare.2da~      ~override/startare.2da~
COPY ~ImprovedAnvil/2da/xpbonus.2da~      ~override/xpbonus.2da~
COPY ~ImprovedAnvil/2da/spawngrp.2da~      ~override/spawngrp.2da~
COPY ~ImprovedAnvil/2da/monkfist.2da~      ~override/monkfist.2da~
COPY ~ImprovedAnvil/2da/clabmo01.2da~      ~override/clabmo01.2da~
COPY ~ImprovedAnvil/2da/clabmo02.2da~      ~override/clabmo02.2da~
COPY ~ImprovedAnvil/2da/clabmo03.2da~      ~override/clabmo03.2da~

COPY_EXISTING ~tooltip.2da~  ~override/tooltip.2da~
  REPLACE_TEXTUALLY ~RING27.+3806.+12109.+12074~ ~RING27            12074        12109       -1~
  REPLACE_TEXTUALLY ~RING28.+3808.+12021.+-1~ ~RING28            29217        12021       -1~
  REPLACE_TEXTUALLY ~RING29.+3809.+32393.+-1~ ~RING29            32393        -1          -1~
  REPLACE_TEXTUALLY ~SW1H36.+3155.+12123.+-1~ ~SW1H36            3155         12114       -1~
  REPLACE_TEXTUALLY ~MISC3A1.+12017.+4731.+-1~ ~MISC3A1           23790        4731        -1~
  REPLACE_TEXTUALLY ~MISC3A2.+12023.+4731.+-1~ ~MISC3A2           22616        4731        -1~
  REPLACE_TEXTUALLY ~MISC3A4.+38133.+4731.+-1~ ~MISC3A4           7571         4731        -1~

COPY_EXISTING ~splautop.2da~  ~override/splautop.2da~
  REPLACE_TEXTUALLY ~SPWI114~ ~tempora~
  REPLACE_TEXTUALLY ~SPWI118~ ~SPWI114~
  REPLACE_TEXTUALLY ~tempora~ ~SPWI118~
  REPLACE_TEXTUALLY ~SPWI105~ ~SPWI119~
  REPLACE_TEXTUALLY ~SPWI201~ ~SPWI207~
  REPLACE_TEXTUALLY ~SPWI303~ ~tempora~
  REPLACE_TEXTUALLY ~SPWI308~ ~SPWI303~
  REPLACE_TEXTUALLY ~tempora~ ~SPWI308~
  REPLACE_TEXTUALLY ~SPWI314~ ~tempora~
  REPLACE_TEXTUALLY ~SPWI302~ ~SPWI314~
  REPLACE_TEXTUALLY ~tempora~ ~SPWI302~
  REPLACE_TEXTUALLY ~SPWI413~ ~SPWI421~
  REPLACE_TEXTUALLY ~SPWI519~ ~SPWI517~
  REPLACE_TEXTUALLY ~SPWI607~ ~SPWI619~
  REPLACE_TEXTUALLY ~SPWI703~ ~SPWI702~

COPY_EXISTING ~rndscrol.2da~  ~override/rndscrol.2da~
  REPLACE_TEXTUALLY ~SCRL8M~ ~SCRL79~
  REPLACE_TEXTUALLY ~SCRL9L~ ~SCRL75~
  REPLACE_TEXTUALLY ~SCRL8Q~ ~SCRL80~
  REPLACE_TEXTUALLY ~SCRL9G~ ~SCRL1I~
  REPLACE_TEXTUALLY ~SCRL8R~ ~SCRL85~
  REPLACE_TEXTUALLY ~SCRL9E~ ~SCRL1E~
  REPLACE_TEXTUALLY ~SCRL8T~ ~SCRL8S~
  REPLACE_TEXTUALLY ~SCRL9D~ ~SCRL1F~
  REPLACE_TEXTUALLY ~SCRL8U~ ~SCRL86~
  REPLACE_TEXTUALLY ~SCRL9C~ ~SCRL81~
  REPLACE_TEXTUALLY ~SCRL9B~ ~SCRL92~
  REPLACE_TEXTUALLY ~SCRL8W~ ~SCRL76~
  REPLACE_TEXTUALLY ~SCRL9A~ ~SCRL6E~
  REPLACE_TEXTUALLY ~SCRL8X~ ~SCRL70~
  REPLACE_TEXTUALLY ~SCRL8Y~ ~SCRL86~
  REPLACE_TEXTUALLY ~SCRL8B~ ~SCRL1C~
  REPLACE_TEXTUALLY ~SCRL8Z~ ~SCRL78~
  REPLACE_TEXTUALLY ~SCRL8D~ ~SCRL89~
  REPLACE_TEXTUALLY ~SCRL8E~ ~SCRL85~
  REPLACE_TEXTUALLY ~SCRL7D~ ~SCRL6Z~
  REPLACE_TEXTUALLY ~SCRL8G~ ~SCRL67~
  REPLACE_TEXTUALLY ~SCRL7F~ ~SCRL6D~
  REPLACE_TEXTUALLY ~SCRL8H~ ~SCRL81~
  REPLACE_TEXTUALLY ~SCRL7G~ ~SCRL72~
  REPLACE_TEXTUALLY ~SCRL8I~ ~SCRL67~
  REPLACE_TEXTUALLY ~SCRL7H~ ~SCRL8C~
  REPLACE_TEXTUALLY ~SCRL8J~ ~SCRL81~
  REPLACE_TEXTUALLY ~SCRL7L~ ~SCRL92~
  REPLACE_TEXTUALLY ~SCRL7I~ ~SCRL76~
  REPLACE_TEXTUALLY ~SCRL8L~ ~SCRL6E~
  REPLACE_TEXTUALLY ~SCRL7K~ ~SCRL70~
  REPLACE_TEXTUALLY ~SCRL7J~ ~SCRL1E~

COPY_EXISTING ~rndtreas.2da~  ~override/rndtreas.2da~
  REPLACE_TEXTUALLY ~AMUL05~ ~AMUL09~
  REPLACE_TEXTUALLY ~AMUL12~ ~AMUL10~
  REPLACE_TEXTUALLY ~MISC29~ ~MISC22~
  REPLACE_TEXTUALLY ~MISC26~ ~MISC25~

COPY_EXISTING ~clabrn03.2da~  ~override/clabrn03.2da~
  REPLACE_TEXTUALLY ~GA_SPRA302~ ~****      ~

COPY_EXISTING ~dualclas.2da~  ~override/dualclas.2da~
  REPLACE_TEXTUALLY ~WIZARD_SLAYER.+0.+1.+1.+1.+1.+0~ ~WIZARD_SLAYER           0       1       0       0       1       0~
  REPLACE_TEXTUALLY ~ABJURER.+1.+1.+0.+1.+0.+0~ ~ABJURER                 0       0       0       0       0       0~
  REPLACE_TEXTUALLY ~CONJURER.+1.+1.+0.+1.+0.+0~ ~CONJURER                0       0       0       0       0       0~
  REPLACE_TEXTUALLY ~DIVINER.+1.+1.+0.+1.+0.+0~ ~DIVINER                 0       0       0       0       0       0~
  REPLACE_TEXTUALLY ~ENCHANTER.+1.+1.+0.+1.+0.+0~ ~ENCHANTER               0       0       0       0       0       0~
  REPLACE_TEXTUALLY ~ILLUSIONIST.+1.+1.+0.+1.+0.+0~ ~ILLUSIONIST             0       0       0       0       0       0~
  REPLACE_TEXTUALLY ~INVOKER.+1.+1.+0.+1.+0.+0~ ~INVOKER                 0       0       0       0       0       0~
  REPLACE_TEXTUALLY ~NECROMANCER.+1.+1.+0.+1.+0.+0~ ~NECROMANCER             0       0       0       0       0       0~
  REPLACE_TEXTUALLY ~TRANSMUTER.+1.+1.+0.+1.+0.+0~ ~TRANSMUTER              0       0       0       0       0       0~

COPY_EXISTING ~savecndh.2da~  ~override/savecndh.2da~
  REPLACE_TEXTUALLY ~2~ ~1~
  REPLACE_TEXTUALLY ~3~ ~1~
  REPLACE_TEXTUALLY ~4~ ~1~
  REPLACE_TEXTUALLY ~5~ ~1~

COPY_EXISTING ~savecng.2da~  ~override/savecng.2da~
  REPLACE_TEXTUALLY ~2~ ~1~
  REPLACE_TEXTUALLY ~3~ ~1~
  REPLACE_TEXTUALLY ~4~ ~1~
  REPLACE_TEXTUALLY ~5~ ~1~

ACTION_IF GAME_IS ~bg2ee~ THEN BEGIN
  COPY_EXISTING ~clearair.2da~ ~override/clearair.2da~
    COUNT_2DA_COLS ~colcount~
    COUNT_2DA_ROWS ~colcount~ ~rowcount~
    INSERT_2DA_ROW ~rowcount~ ~colcount~ ~Fire_Storm 228~
    INSERT_2DA_ROW ~rowcount~ ~colcount~ ~Incendiary_Cloud 277~
    PRETTY_PRINT_2DA

  COPY_EXISTING ~contingx.2da~ ~override/contingx.2da~
    COUNT_2DA_COLS ~colcount~
    COUNT_2DA_ROWS ~colcount~ ~rowcount~
    SET_2DA_ENTRY 0 5 ~colcount~ ~SPWI510~
    PRETTY_PRINT_2DA
END

// Adding kits //

INCLUDE "ImprovedAnvil/tpa/fl#add_kit_ee.tpa"

// Adding vagrant kit //

ADD_KIT ~VAGRANT~
~VAGRANT 1 1 1 1 1 1 1 1~
~VAGRANT 2 2 2 2 2 2 5 1 2 2 2 5 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 2 2 2 3 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5~
~VAGRANT 13 13 14 0 14 12~
~VAGRANT 0 0 1 0 0 0~
~VAGRANT 17 17 14 0 17 12~
~VAGRANT 15 15 14 0 15 12~
~VAGRANT 1 0 0 1 0 0 1 0 0~
~VAGRANT 0 0 0 0 0 0~
~ImprovedAnvil\2da\Vagran.2Da~
~K_R_H K_R_HE K_R_E~
~0x00010000 12~
~Ra0~
~Leat14 * HELM07 BAG24 RING06 RING31 CLCK02 BOOT01 AMUL19 BRAC16 BELT07 * * * POTN52,5 POTN4,2 POTN14,5 HAMM07 SW1H27 SW1H55~
SAY @8950
SAY @8951
SAY @8952

LAF fl#add_kit_ee // launch_action_function start
  INT_VAR
    biography = 29492
    briefdesc = RESOLVE_STR_REF (@8952)
    fallen = 0
  STR_VAR
    kit_name = ~VAGRANT~
    clswpbon = ~1 0 3~
    clsrcreq = ~1 1 1 0 0 0 0~
END

// Adding Auramaster Kit //

ADD_KIT ~AURAMASTER~
~AURAMASTER 1 0 1 1 0 0 0 1~
~AURAMASTER 0 0 0 0 1 1 0 1 0 0 0 0 0 0 1 1 0 1 1 0 0 0 1 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0~
~AURAMASTER 0 0 0 12 12 15~
~AURAMASTER -4 0 -4 0 0 0~
~AURAMASTER 0 0 0 12 12 15~
~AURAMASTER 0 0 0 12 12 15~
~AURAMASTER 0 0 0 0 1 0 0 0 0~
~AURAMASTER 0 0 0 0 0 0~
~ImprovedAnvil\2da\AMDK.2Da~
~K_D_H K_D_HE~
~0x10000000 11~
~Dr0~
~* * HELM19 BAG27 RING06 RING31 CLCK02 BOOT01 AMUL21 BRAC15 BELT10 * * * POTN52,5 POTN4,2 POTN14,5 HAMM07 SW1H27 STAF08~
SAY @8955
SAY @8956
SAY @8957

LAF fl#add_kit_ee // launch_action_function start
  INT_VAR
    biography = 29492
    briefdesc = RESOLVE_STR_REF (@8957)
    fallen = 0
  STR_VAR
    kit_name = ~AURAMASTER~
    clswpbon = ~1 0 3~
    clsrcreq = ~1 0 1 0 0 0 0~
END

COPY_EXISTING ~CERND10.cre~ ~override~
              ~CERND14.cre~ ~override~
 WRITE_SHORT 0x244 0
 WRITE_BYTE  0x246 ~%AURAMASTER%~
 WRITE_BYTE  0x247 0x40

COPY_EXISTING ~cernd10.cre~ ~Override/cernd12.cre~
COPY_EXISTING ~cernd10.cre~ ~Override/cernd13.cre~
COPY_EXISTING ~cernd10.cre~ ~Override/cernd13b.cre~

// Adding Riskbreaker Kit //

ADD_KIT ~RISKBREAKER~
~RISKBREAKER 1 1 1 1 1 1 1 1~
~RISKBREAKER 5 5 0 1 5 5 5 0 5 5 5 5 1 5 5 5 5 5 1 1 5 5 1 0 0 0 0 0 0 0 0 3 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5~
~RISKBREAKER 9 0 0 12 0 0~
~RISKBREAKER 0 0 -2 0 0 0~
~RISKBREAKER 17 0 0 12 0 0~
~RISKBREAKER 15 0 0 12 0 0~
~RISKBREAKER 1 1 1 1 1 1 1 1 1~
~RISKBREAKER 0 0 0 0 0 0~
~ImprovedAnvil\2da\RBK.2Da~
~K_F_H~
~0x00000004 2~
~Fi0~
//equipment
~* * HELM19 BAG22 RING06 RING31 CLCK02 * AMUL19 * BELT07 * * * POTN52,5 POTN4,2 POTN14,5 HAMM07 SW1H27 STAF08~
//description
SAY @8958
SAY @8959
SAY @8960

LAF fl#add_kit_ee // launch_action_function start
  INT_VAR
    biography = 29492
    briefdesc = RESOLVE_STR_REF (@8960)
    fallen = 0
  STR_VAR
    kit_name = ~RISKBREAKER~
    clswpbon = ~1 0 3~
    clsrcreq = ~1 0 0 0 0 0 0~
END

ADD_KIT ~PROTECTOR~
~PROTECTOR 1 1 1 1 1 1 1 1~
~PROTECTOR 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5~
~PROTECTOR 13 13 14 10 14 10~
~PROTECTOR 0 0 -1 0 0 0~
~PROTECTOR 17 17 14 10 17 10~
~PROTECTOR 15 15 14 10 15 10~
~PROTECTOR 1 0 0 1 0 0 1 0 0~
~PROTECTOR 0 0 0 0 0 0~
~ImprovedAnvil\2da\Protec.2Da~
~K_R_H K_R_HE K_R_E~
~0x00010000 12~
~Ra0~
~Leat14 * HELM07 BAG24 RING06 RING31 CLCK02 BOOT01 AMUL19 BRAC16 BELT07 * * * POTN52,5 POTN4,2 POTN14,5 HAMM07 SW1H27 SW1H55~
SAY @8961
SAY @8962
SAY @8963

LAF fl#add_kit_ee // launch_action_function start
  INT_VAR
    biography = 29492
    briefdesc = RESOLVE_STR_REF (@8963)
    fallen = 0
  STR_VAR
    kit_name = ~PROTECTOR~
    clswpbon = ~1 0 3~
    clsrcreq = ~1 1 1 0 0 0 0~
END

COPY_EXISTING ~VALYG8.cre~ ~override~
              ~VALYG14.cre~ ~override~
 WRITE_SHORT 0x244 0
 WRITE_BYTE  0x246 ~%PROTECTOR%~
 WRITE_BYTE  0x247 0x40

COPY_EXISTING ~valyg8.cre~ ~Override/valyg9.cre~

COPY_EXISTING ~valyg8.cre~ ~Override/valyg11.cre~

COPY_EXISTING ~valyg8.cre~ ~Override/valyg12.cre~

// Setting Strings //

STRING_SET ~11202~ @367
STRING_SET ~38589~ @372
STRING_SET ~12320~ @384
STRING_SET ~63616~ @389
STRING_SET ~63680~ @390
STRING_SET ~25943~ @394
STRING_SET ~8212~ @395
STRING_SET ~12147~ @399
STRING_SET ~26315~ @9013
STRING_SET ~29221~ @9014
STRING_SET ~25623~ @9015
STRING_SET ~7383~ @9039
STRING_SET ~32429~ @9048
STRING_SET ~34616~ @9070
STRING_SET ~26235~ @9071
STRING_SET ~26330~ @9504
STRING_SET ~65017~ @10000
STRING_SET ~25211~ @10001
STRING_SET ~25213~ @10002
STRING_SET ~68664~ @10003
STRING_SET ~25207~ @10004
STRING_SET ~68543~ @10005
STRING_SET ~68545~ @10006
STRING_SET ~2314~ @10007
STRING_SET ~38485~ @10008
STRING_SET ~71627~ @10009
STRING_SET ~22180~ @10010
STRING_SET ~73929~ @10011
STRING_SET ~18140~ @10012
STRING_SET ~25945~ @10013
STRING_SET ~56258~ @10014
STRING_SET ~65020~ @10015
STRING_SET ~7808~ @10016
STRING_SET ~39965~ @10017
STRING_SET ~71467~ @10018
STRING_SET ~60845~ @10019
STRING_SET ~10623~ @10020
STRING_SET ~8804~ @10021
STRING_SET ~8824~ @10022
STRING_SET ~8828~ @10023
STRING_SET ~22441~ @10024
STRING_SET ~40954~ @10025
STRING_SET ~60841~ @10026
STRING_SET ~25603~ @10027
STRING_SET ~45051~ @10028
STRING_SET ~38595~ @10029
STRING_SET ~44946~ @10030
STRING_SET ~27986~ @10031
STRING_SET ~27982~ @10032
STRING_SET ~7784~ @10033
STRING_SET ~65022~ @10034
STRING_SET ~12198~ @10035
STRING_SET ~70405~ @10036
STRING_SET ~25220~ @10037
STRING_SET ~40634~ @10038
STRING_SET ~10872~ @10039
STRING_SET ~17858~ @10040
STRING_SET ~10091~ @10041
STRING_SET ~49184~ @10042
STRING_SET ~5700~ @10043
STRING_SET ~4406~ @10044
STRING_SET ~5790~ @10045
STRING_SET ~12211~ @10046
STRING_SET ~25936~ @10047
STRING_SET ~40240~ @10048
STRING_SET ~41844~ @10049
STRING_SET ~41845~ @10050
STRING_SET ~41848~ @10051
STRING_SET ~41928~ @10052
STRING_SET ~41929~ @10053
STRING_SET ~43046~ @10054
STRING_SET ~72536~ @10055
STRING_SET ~25913~ @10056
STRING_SET ~63152~ @10057
STRING_SET ~72539~ @10058
STRING_SET ~12327~ @10059
STRING_SET ~72538~ @10060
STRING_SET ~72551~ @10061
STRING_SET ~6939~ @10062
STRING_SET ~22609~ @10063
STRING_SET ~25206~ @10064
STRING_SET ~10897~ @10065
STRING_SET ~7672~ @10066
STRING_SET ~12190~ @10067
STRING_SET ~6622~ @10068
STRING_SET ~12204~ @10069
STRING_SET ~12151~ @10070
STRING_SET ~26229~ @10071
STRING_SET ~22904~ @10072
STRING_SET ~17352~ @10073
STRING_SET ~54633~ @10074
STRING_SET ~12178~ @10075
STRING_SET ~72526~ @10076
STRING_SET ~72542~ @10077
STRING_SET ~17868~ @10078
STRING_SET ~39669~ @10079
STRING_SET ~54724~ @10080
STRING_SET ~26784~ @10081
STRING_SET ~66473~ @10082
STRING_SET ~12182~ @10083
STRING_SET ~12140~ @10084
STRING_SET ~39630~ @10085
STRING_SET ~12146~ @10086
STRING_SET ~8064~ @10087
STRING_SET ~8832~ @10088
STRING_SET ~39595~ @10089
STRING_SET ~19043~ @10090
STRING_SET ~63802~ @10091
STRING_SET ~25743~ @10092
STRING_SET ~64320~ @10093
STRING_SET ~25905~ @10094
STRING_SET ~64326~ @10095
STRING_SET ~70399~ @10096
STRING_SET ~17348~ @10097
STRING_SET ~17361~ @10098
STRING_SET ~66478~ @10099
STRING_SET ~73742~ @10100
STRING_SET ~66461~ @10101
STRING_SET ~17854~ @10102
STRING_SET ~25933~ @10103
STRING_SET ~73914~ @10104
STRING_SET ~63584~ @10105
STRING_SET ~17585~ @10106
STRING_SET ~17603~ @10107
STRING_SET ~38567~ @10108
STRING_SET ~11015~ @10109
STRING_SET ~12197~ @10110
STRING_SET ~39596~ @10111
STRING_SET ~39597~ @10112
STRING_SET ~17420~ @9164
STRING_SET ~22177~ @9513
STRING_SET ~32877~ @9105
STRING_SET ~26304~ @9571
STRING_SET ~8291~ @10113
STRING_SET ~12200~ @10114
STRING_SET ~17584~ @10115
STRING_SET ~12210~ @10116
STRING_SET ~12202~ @10117
STRING_SET ~7535~ @10118
STRING_SET ~7540~ @10119
STRING_SET ~25216~ @10120
STRING_SET ~50465~ @10121
STRING_SET ~34646~ @10122
STRING_SET ~70298~ @10123
STRING_SET ~66897~ @10124
STRING_SET ~66898~ @10125
STRING_SET ~7607~ @10126
STRING_SET ~22617~ @10127
STRING_SET ~45241~ @10128
STRING_SET ~12196~ @10129
STRING_SET ~2544~ @10130
STRING_SET ~39608~ @10131
STRING_SET ~36930~ @10132
STRING_SET ~36948~ @10133
STRING_SET ~36949~ @10134
STRING_SET ~36961~ @10135
STRING_SET ~34560~ @10136
STRING_SET ~72541~ @10137
STRING_SET ~3806~ @10138
STRING_SET ~3808~ @10139
STRING_SET ~61272~ @10140
STRING_SET ~10862~ @10141
STRING_SET ~61276~ @10142
STRING_SET ~10851~ @10143
STRING_SET ~26305~ @10144
STRING_SET ~25959~ @10145
STRING_SET ~10889~ @10146
STRING_SET ~65415~ @10147
STRING_SET ~14315~ @10148
STRING_SET ~40850~ @10149
STRING_SET ~25764~ @10150
STRING_SET ~63747~ @10151
STRING_SET ~66200~ @10152
STRING_SET ~66201~ @10153
STRING_SET ~70904~ @10154
STRING_SET ~17864~ @10155
STRING_SET ~16297~ @10156
STRING_SET ~9990~ @10157
STRING_SET ~8284~ @10158
STRING_SET ~39628~ @10159
STRING_SET ~73292~ @10160
STRING_SET ~12155~ @10161
STRING_SET ~22423~ @10162
STRING_SET ~39525~ @10163
STRING_SET ~39526~ @10164
STRING_SET ~20105~ @10165
STRING_SET ~20984~ @10166
STRING_SET ~17591~ @10167
STRING_SET ~17593~ @10168
STRING_SET ~17596~ @10169
STRING_SET ~17597~ @10170
STRING_SET ~71127~ @10171
STRING_SET ~17536~ @10172
STRING_SET ~17541~ @10173
STRING_SET ~63098~ @10174
STRING_SET ~38578~ @10175
STRING_SET ~73912~ @10176
STRING_SET ~12212~ @10177
STRING_SET ~45821~ @10178
STRING_SET ~12199~ @10179
STRING_SET ~12145~ @10180
STRING_SET ~25874~ @10181
STRING_SET ~25885~ @10182
STRING_SET ~25935~ @10183
STRING_SET ~25946~ @10184
STRING_SET ~25948~ @10185
STRING_SET ~26242~ @10186
STRING_SET ~17534~ @10187
STRING_SET ~38570~ @10188
STRING_SET ~45867~ @10196
STRING_SET ~7062~ @11093
STRING_SET ~65410~ @11094
STRING_SET ~5020~ @11095
STRING_SET ~10850~ @11096

// AT_INTERACTIVE_EXIT ~VIEW "ImprovedAnvil/Improved Anvil_readme.txt"~
